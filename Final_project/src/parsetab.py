
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASSIGN BITWISE_AND BITWISE_NOT BITWISE_OR BITWISE_XOR BLOCK_CLOSER BLOCK_COMMENT BLOCK_OPENER BOOLEAN BREAK BYTE CASE CATCH CHAR CHAR_CONSTANT CLASS COLON COMMA CONST CONTINUE DECREMENT DEFAULT DIVEQ DIVIDE DO DOT DOUBLE ELSE EQUALS EXTENDS FINAL FINALLY FLOAT FLOAT_CONSTANT FOR GEQ GRT IDENTIFIER IF IMPORT INCREMENT INLINE_COMMENT INSTANCEOF INT INT_CONSTANT LAMBDA LAMBDA_TOKEN LEQ LOGICAL_AND LOGICAL_NOT LOGICAL_OR LONG LSHIFTEQ LST L_PAREN L_SHIFT L_SQBR MINUS MINUSEQ MODEQ MODULO MULT MULTEQ NEW NOT_EQUAL NULL PACKAGE PLUS PLUSEQ QUESTION RETURN RSHIFTEQ R_PAREN R_SHIFT R_SQBR SHORT STATIC STMT_TERMINATOR STR_CONSTANT SUPER SWITCH THIS THROW THROWS TRY VOID WHILEGoal : CompilationUnitIdentifier : IDENTIFIER Literal : IntegerConst\n    | FloatConst\n    | CharConst\n    | StringConst\n    | NullConst\n    \n    IntegerConst : INT_CONSTANT\n    \n    FloatConst : FLOAT_CONSTANT\n    \n    CharConst : CHAR_CONSTANT\n    \n    StringConst : STR_CONSTANT\n    \n    NullConst : NULL\n     Type : PrimitiveType\n    | ReferenceType\n     PrimitiveType : NumericType\n    | BOOLEAN\n     NumericType : IntegralType\n    | FloatingPointType\n     IntegralType : BYTE\n    | SHORT\n    | INT\n    | LONG\n    | CHAR\n     FloatingPointType : FLOAT\n    | DOUBLE\n     ReferenceType : ArrayType\n    | ClassType\n    \n    ClassType : Name\n     ArrayType : PrimitiveType Dims\n    | Name Dims\n     Name : SimpleName\n    | QualifiedName SimpleName : Identifier QualifiedName : Name DOT Identifier\n    CompilationUnit : PackageDeclaration ImportDeclarations TypeDeclarations\n    | PackageDeclaration ImportDeclarations\n    | PackageDeclaration TypeDeclarations\n    | ImportDeclarations TypeDeclarations\n    | PackageDeclaration\n    | ImportDeclarations\n    | TypeDeclarations\n    |\n    \n    ImportDeclarations : ImportDeclaration\n    | ImportDeclarations ImportDeclaration\n    \n    TypeDeclarations : TypeDeclaration\n    | TypeDeclarations TypeDeclaration\n    \n    PackageDeclaration : PACKAGE Name STMT_TERMINATOR\n    \n    ImportDeclaration : SingleTypeImportDeclaration\n    | TypeImportOnDemandDeclaration\n    \n    SingleTypeImportDeclaration : IMPORT Name STMT_TERMINATOR\n    \n    TypeImportOnDemandDeclaration : IMPORT Name DOT MULT STMT_TERMINATOR\n    \n    TypeDeclaration : ClassDeclaration\n    | STMT_TERMINATOR\n    \n    Modifiers : Modifier\n    | Modifiers Modifier\n    \n    Modifier : STATIC\n    | FINAL\n    \n    ClassDeclaration : CLASS Identifier ClsMark Inherit ClassBody\n    | CLASS Identifier ClsMark ClassBody\n     ClsMark : \n    Inherit : EXTENDS ClassType\n    \n    ClassBody : BLOCK_OPENER BLOCK_CLOSER\n    | BLOCK_OPENER ClassBodyDeclarations BLOCK_CLOSER\n    \n    ClassBodyDeclarations : ClassBodyDeclaration\n    | ClassBodyDeclarations ClassBodyDeclaration\n    \n    ClassBodyDeclaration : ClassMemberDeclaration FieldMark\n    | ConstructorDeclaration\n    | StaticInitializer\n    \n    ClassMemberDeclaration : FieldDeclaration\n    | MethodDeclaration\n    \n    FieldMark :\n    \n    FieldDeclaration : Modifiers Type VariableDeclaratorId STMT_TERMINATOR\n    | Type VariableDeclaratorId STMT_TERMINATOR\n    \n    VariableDeclarators : VariableDeclarator\n    | VariableDeclarators COMMA VariableDeclarator\n    \n    VariableDeclarator : VariableDeclaratorId\n    | VariableDeclaratorId ASSIGN VariableInitializer\n    \n    VariableDeclaratorId : Identifier\n    \n    VariableInitializer : Expression\n    | ArrayInitializer classMark\n    \n    classMark :\n    \n    MethodDeclaration : MethodHeader MethodDeclMark2 MethodBody\n    \n    MethodDeclMark2 :\n    \n    MethodHeader : Modifiers Type MethodDeclarator Throws\n    | Modifiers Type MethodDeclarator\n    | Type MethodDeclarator Throws\n    | Type MethodDeclarator\n    | Modifiers VOID MethodDeclarator Throws\n    | Modifiers VOID MethodDeclarator\n    | VOID MethodDeclarator Throws\n    | VOID MethodDeclarator\n    \n    MethodDeclarator : Identifier L_PAREN MethodDeclMark1 R_PAREN\n    | Identifier L_PAREN MethodDeclMark1 FormalParameterList R_PAREN\n    \n    MethodDeclMark1 :\n    \n    FormalParameterList : FormalParameter\n    | FormalParameterList COMMA FormalParameter\n    \n    FormalParameter : Type VariableDeclaratorId\n    \n    Throws : THROWS ClassTypeList\n    \n    ClassTypeList : ClassType\n    | ClassTypeList COMMA ClassType\n    \n    MethodBody : Block\n    | STMT_TERMINATOR\n    \n    StaticInitializer : STATIC Block\n    \n    ConstructorDeclaration : Modifiers ConstructorDeclarator Throws ConstructorBody\n    | Modifiers ConstructorDeclarator ConstructorBody\n    | ConstructorDeclarator Throws ConstructorBody\n    | ConstructorDeclarator ConstructorBody\n    \n    ConstructorDeclarator : SimpleName L_PAREN FormalParameterList R_PAREN\n    | SimpleName L_PAREN R_PAREN\n    \n    ConstructorBody : BLOCK_OPENER ExplicitConstructorInvocation BlockStatements BLOCK_CLOSER\n    | BLOCK_OPENER BlockStatements BLOCK_CLOSER\n    | BLOCK_OPENER BLOCK_CLOSER\n    \n    ExplicitConstructorInvocation : THIS L_PAREN ArgumentList R_PAREN STMT_TERMINATOR\n    | THIS L_PAREN R_PAREN STMT_TERMINATOR\n    | SUPER L_PAREN ArgumentList R_PAREN STMT_TERMINATOR\n    | SUPER L_PAREN R_PAREN STMT_TERMINATOR\n    \n    ArrayInitializer : BLOCK_OPENER VariableInitializers BLOCK_CLOSER\n    | BLOCK_OPENER BLOCK_CLOSER\n    \n    VariableInitializers : VariableInitializer\n    | VariableInitializers COMMA VariableInitializer\n    \n    Block : BLOCK_OPENER BLOCK_CLOSER\n    | BLOCK_OPENER BlockStatements BLOCK_CLOSER\n    \n    BlockStatements : BlockStatement\n    | BlockStatements BlockStatement\n    \n    BlockStatement : LocalVariableDeclarationStatement\n    | Statement\n    \n    LocalVariableDeclarationStatement : LocalVariableDeclaration STMT_TERMINATOR\n    \n    LocalVariableDeclaration : Type VariableDeclarators\n    \n    Statement : StatementWithoutTrailingSubstatement\n    | LabeledStatement\n    | IfThenStatement\n    | IfThenElseStatement\n    | WhileStatement\n    | ForStatement\n    \n    StatementNoShortIf : StatementWithoutTrailingSubstatement\n    | LabeledStatementNoShortIf\n    | IfThenElseStatementNoShortIf\n    | WhileStatementNoShortIf\n    | ForStatementNoShortIf\n    \n    StatementWithoutTrailingSubstatement : Block\n    | EmptyStatement\n    | ExpressionStatement\n    | SwitchStatement\n    | DoStatement\n    | BreakStatement\n    | ContinueStatement\n    | ReturnStatement\n    | ThrowStatement\n    | TryStatement\n    \n    EmptyStatement : STMT_TERMINATOR\n    \n    LabeledStatement : Identifier COLON Statement\n    \n    LabeledStatementNoShortIf : Identifier COLON StatementNoShortIf\n    \n    ExpressionStatement : StatementExpression STMT_TERMINATOR\n    \n    StatementExpression : Assignment\n    | PreIncrementExpression\n    | PreDecrementExpression\n    | PostIncrementExpression\n    | PostDecrementExpression\n    | MethodInvocation\n    | ClassInstanceCreationExpression\n    \n    IfThenStatement : IF L_PAREN Expression R_PAREN IfMark1 Statement IfMark2\n    \n    IfThenElseStatement : IF L_PAREN Expression R_PAREN IfMark1 StatementNoShortIf IfMark5 ELSE IfMark3 Statement IfMark4\n    \n    IfThenElseStatementNoShortIf : IF L_PAREN Expression R_PAREN IfMark1 StatementNoShortIf IfMark5 ELSE IfMark3 StatementNoShortIf IfMark4\n     IfMark1 :  IfMark2 :  IfMark3 :  IfMark4 :  IfMark5 : \n    SwitchStatement : SWITCH L_PAREN Expression R_PAREN SwMark2 SwitchBlock SwMark3\n     SwMark2 :  SwMark3 : \n    SwitchBlock : BLOCK_OPENER BLOCK_CLOSER\n    | BLOCK_OPENER SwitchBlockStatementGroups BLOCK_CLOSER\n    \n    SwitchBlockStatementGroups : SwitchBlockStatementGroup\n    | SwitchBlockStatementGroups SwitchBlockStatementGroup\n    \n    SwitchBlockStatementGroup : SwitchLabel BlockStatements\n    \n    SwitchLabel : SwMark1 CASE ConstantExpression COLON\n    | SwMark1 DEFAULT COLON\n     SwMark1 : \n    WhileStatement : WHILE WhMark1 L_PAREN Expression R_PAREN WhMark2 Statement WhMark3\n    \n    WhileStatementNoShortIf : WHILE WhMark1 L_PAREN Expression R_PAREN WhMark2 StatementNoShortIf WhMark3\n    WhMark1 : WhMark2 : WhMark3 : \n    DoStatement : DO doWhMark1 Statement WHILE doWhMark2 L_PAREN Expression R_PAREN doWhMark3 STMT_TERMINATOR\n    doWhMark1 : doWhMark3 : doWhMark2 : \n    ForStatement : FOR FoMark0 L_PAREN ForInit STMT_TERMINATOR FoMark1 Expression STMT_TERMINATOR FoMark6 ForUpdate R_PAREN FoMark2 Statement FoMark3\n    | FOR FoMark0 L_PAREN STMT_TERMINATOR FoMark1 Expression STMT_TERMINATOR FoMark6 ForUpdate R_PAREN FoMark2 Statement FoMark3\n    | FOR FoMark0 L_PAREN ForInit STMT_TERMINATOR FoMark1 STMT_TERMINATOR FoMark6 ForUpdate R_PAREN FoMark2 Statement FoMark3\n    | FOR FoMark0 L_PAREN ForInit STMT_TERMINATOR FoMark1 Expression STMT_TERMINATOR R_PAREN FoMark4 Statement FoMark5\n    | FOR FoMark0 L_PAREN ForInit STMT_TERMINATOR FoMark1 STMT_TERMINATOR R_PAREN FoMark4 Statement FoMark5\n    | FOR FoMark0 L_PAREN STMT_TERMINATOR FoMark1 Expression STMT_TERMINATOR R_PAREN FoMark4 Statement FoMark5\n    | FOR FoMark0 L_PAREN STMT_TERMINATOR FoMark1 STMT_TERMINATOR FoMark6 ForUpdate R_PAREN FoMark2 Statement FoMark3\n    | FOR FoMark0 L_PAREN STMT_TERMINATOR FoMark1 STMT_TERMINATOR R_PAREN FoMark4 Statement FoMark5\n    \n    ForStatementNoShortIf : FOR FoMark0 L_PAREN ForInit STMT_TERMINATOR FoMark1 Expression STMT_TERMINATOR FoMark6 ForUpdate R_PAREN FoMark2 StatementNoShortIf FoMark3\n    | FOR FoMark0 L_PAREN STMT_TERMINATOR FoMark1 Expression STMT_TERMINATOR FoMark6 ForUpdate R_PAREN FoMark2 StatementNoShortIf FoMark3\n    | FOR FoMark0 L_PAREN ForInit STMT_TERMINATOR FoMark1 STMT_TERMINATOR FoMark6 ForUpdate R_PAREN FoMark2 StatementNoShortIf FoMark3\n    | FOR FoMark0 L_PAREN ForInit STMT_TERMINATOR FoMark1 Expression STMT_TERMINATOR R_PAREN FoMark4 StatementNoShortIf FoMark5\n    | FOR FoMark0 L_PAREN ForInit STMT_TERMINATOR FoMark1 STMT_TERMINATOR R_PAREN FoMark4 StatementNoShortIf FoMark5\n    | FOR FoMark0 L_PAREN STMT_TERMINATOR FoMark1 Expression STMT_TERMINATOR R_PAREN FoMark4 StatementNoShortIf FoMark5\n    | FOR FoMark0 L_PAREN STMT_TERMINATOR FoMark1 STMT_TERMINATOR FoMark6 ForUpdate R_PAREN FoMark2 StatementNoShortIf FoMark3\n    | FOR FoMark0 L_PAREN STMT_TERMINATOR FoMark1 STMT_TERMINATOR R_PAREN FoMark4 StatementNoShortIf FoMark5\n    FoMark0 : FoMark1 : FoMark2 : FoMark6 : FoMark4 : FoMark3 : FoMark5 : \n    ForInit : StatementExpressionList\n    | LocalVariableDeclaration\n    \n    ForUpdate : StatementExpressionList\n    \n    StatementExpressionList : StatementExpression\n    | StatementExpressionList COMMA StatementExpression\n    \n    BreakStatement : BREAK Identifier STMT_TERMINATOR\n    | BREAK STMT_TERMINATOR\n    \n    ContinueStatement : CONTINUE Identifier STMT_TERMINATOR\n    | CONTINUE STMT_TERMINATOR\n    \n    ReturnStatement : RETURN Expression STMT_TERMINATOR\n    | RETURN STMT_TERMINATOR\n    \n    ThrowStatement : THROW Expression STMT_TERMINATOR\n    \n    TryStatement : TRY Block Catches\n    | TRY Block Catches Finally\n    | TRY Block Finally\n    \n    Catches : CatchClause\n    | Catches CatchClause\n    \n    CatchClause : CATCH L_PAREN FormalParameter R_PAREN Block\n    \n    Finally : FINALLY Block\n    \n    Primary : PrimaryNoNewArray\n    | ArrayCreationExpression\n    \n    PrimaryNoNewArray : Literal\n    | THIS\n    | L_PAREN Expression R_PAREN\n    | ClassInstanceCreationExpression\n    | FieldAccess\n    | MethodInvocation\n    | ArrayAccess\n    \n    ClassInstanceCreationExpression : NEW ClassType L_PAREN R_PAREN\n    | NEW ClassType L_PAREN ArgumentList R_PAREN\n    \n    ArgumentList : Expression\n    | ArgumentList COMMA Expression\n    \n    ArrayCreationExpression : NEW PrimitiveType DimExprs\n    | NEW ClassType DimExprs\n    \n    DimExprs : DimExpr\n    | DimExprs DimExpr\n    \n    DimExpr : L_SQBR Expression R_SQBR\n    \n    Dims : L_SQBR R_SQBR\n    | Dims L_SQBR R_SQBR\n    \n    FieldAccess : Primary DOT Identifier\n    | SUPER DOT Identifier\n    \n    MethodInvocation : Name L_PAREN ArgumentList R_PAREN\n    | Name L_PAREN R_PAREN\n    | Primary DOT Identifier L_PAREN ArgumentList R_PAREN\n    | Primary DOT Identifier L_PAREN R_PAREN\n    | SUPER DOT Identifier L_PAREN ArgumentList R_PAREN\n    | SUPER DOT Identifier L_PAREN R_PAREN\n    \n    ArrayAccess : Name DimExprs\n    \n    PostfixExpression : Primary\n    | Name\n    | PostIncrementExpression\n    | PostDecrementExpression\n    \n    PostIncrementExpression : PostfixExpression INCREMENT\n    \n    PostDecrementExpression : PostfixExpression DECREMENT\n    \n    UnaryExpression : PreIncrementExpression\n    | PreDecrementExpression\n    | PLUS UnaryExpression\n    | MINUS UnaryExpression\n    | UnaryExpressionNotPlusMinus\n    \n    PreIncrementExpression : INCREMENT UnaryExpression\n    \n    PreDecrementExpression : DECREMENT UnaryExpression\n    \n    UnaryExpressionNotPlusMinus : PostfixExpression\n    | BITWISE_NOT UnaryExpression\n    | LOGICAL_NOT UnaryExpression\n    | CastExpression\n    \n    CastExpression : L_PAREN PrimitiveType Dims R_PAREN UnaryExpression\n    | L_PAREN PrimitiveType R_PAREN UnaryExpression\n    | L_PAREN Expression R_PAREN UnaryExpressionNotPlusMinus\n    | L_PAREN Name Dims R_PAREN UnaryExpressionNotPlusMinus\n    \n    MultiplicativeExpression : UnaryExpression\n    | MultiplicativeExpression MULT UnaryExpression\n    | MultiplicativeExpression DIVIDE UnaryExpression\n    | MultiplicativeExpression MODULO UnaryExpression\n    \n    AdditiveExpression : MultiplicativeExpression\n    | AdditiveExpression PLUS MultiplicativeExpression\n    | AdditiveExpression MINUS MultiplicativeExpression\n    \n    ShiftExpression : AdditiveExpression\n    | ShiftExpression L_SHIFT AdditiveExpression\n    | ShiftExpression R_SHIFT AdditiveExpression\n    \n    RelationalExpression : ShiftExpression\n    | RelationalExpression LST ShiftExpression\n    | RelationalExpression GRT ShiftExpression\n    | RelationalExpression LEQ ShiftExpression\n    | RelationalExpression GEQ ShiftExpression\n    | RelationalExpression INSTANCEOF ReferenceType\n    \n    EqualityExpression : RelationalExpression\n    | EqualityExpression EQUALS RelationalExpression\n    | EqualityExpression NOT_EQUAL RelationalExpression\n    \n    AndExpression : EqualityExpression\n    | AndExpression BITWISE_AND EqualityExpression\n    \n    ExclusiveOrExpression : AndExpression\n    | ExclusiveOrExpression BITWISE_XOR AndExpression\n    \n    InclusiveOrExpression : ExclusiveOrExpression\n    | InclusiveOrExpression BITWISE_OR ExclusiveOrExpression\n    \n    ConditionalAndExpression : InclusiveOrExpression\n    | ConditionalAndExpression LOGICAL_AND InclusiveOrExpression\n    \n    ConditionalOrExpression : ConditionalAndExpression\n    | ConditionalOrExpression LOGICAL_OR ConditionalAndExpression\n    \n    ConditionalExpression : ConditionalOrExpression\n    | ConditionalOrExpression QUESTION Expression COLON ConditionalExpression\n    \n    AssignmentExpression : ConditionalExpression\n    | Assignment\n    | LAMBDA LambdaExpression\n    \n    Assignment : LeftHandSide AssignmentOperator AssignmentExpression\n    \n    LeftHandSide : Name\n    | FieldAccess\n    | ArrayAccess\n    \n    AssignmentOperator : ASSIGN\n    | MULTEQ\n    | DIVEQ\n    | MODEQ\n    | PLUSEQ\n    | MINUSEQ\n    | LSHIFTEQ\n    | RSHIFTEQ\n    \n    Expression : AssignmentExpression\n    \n    LambdaExpression : L_PAREN FormalParameterList R_PAREN LAMBDA_TOKEN Block\n    | L_PAREN R_PAREN LAMBDA_TOKEN Block\n    \n    ConstantExpression : Expression\n    '
    
_lr_action_items = {'$end':([0,1,2,3,4,5,7,8,9,10,11,12,15,16,17,18,19,27,28,30,36,39,40,43,76,],[-42,0,-1,-39,-40,-41,-53,-43,-45,-48,-49,-52,-36,-37,-38,-44,-46,-35,-47,-50,-59,-51,-58,-62,-63,]),'PACKAGE':([0,],[6,]),'STMT_TERMINATOR':([0,3,4,5,7,8,9,10,11,12,15,16,17,18,19,20,21,22,23,24,25,27,28,30,33,34,36,39,40,42,43,55,64,65,68,76,87,89,90,91,92,93,95,97,99,102,103,104,106,107,108,109,113,115,116,117,118,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,140,142,143,144,145,148,149,150,151,152,153,154,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,180,182,192,193,196,197,199,201,205,206,207,209,210,211,212,213,215,216,217,218,220,221,222,223,224,227,228,229,230,231,234,235,236,239,240,241,242,243,244,248,250,251,252,253,254,255,256,257,260,262,272,273,274,276,277,278,279,280,284,289,290,293,299,325,326,327,328,330,334,338,341,342,343,344,345,346,347,351,352,354,358,359,360,363,365,366,373,374,375,376,377,378,379,380,381,382,383,384,385,386,388,389,390,391,392,393,394,395,396,398,399,400,401,403,405,406,407,408,409,413,414,415,417,418,419,421,423,424,426,428,433,435,436,438,440,441,442,443,449,450,451,452,454,455,456,457,460,462,470,471,473,474,475,479,480,483,485,488,490,492,494,495,498,501,503,506,507,509,513,515,516,518,521,522,523,525,526,528,530,531,532,534,537,538,539,540,541,542,543,544,545,547,548,549,550,551,552,553,555,556,557,559,560,561,562,563,564,565,566,570,572,574,575,576,577,578,579,582,585,587,588,589,590,591,593,595,596,599,600,602,605,606,608,611,613,616,619,],[7,7,7,7,-53,-43,-45,-48,-49,-52,7,7,7,-44,-46,28,-31,-32,-33,-2,30,7,-47,-50,-34,39,-59,-51,-58,-28,-62,-83,-26,-27,-28,-63,113,113,181,-87,-78,186,-29,-91,-30,195,-85,-89,-98,-99,113,113,-150,-123,-125,-126,239,-129,-130,-131,-132,-133,-134,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,248,-186,252,254,256,-154,-155,-156,-157,-158,-159,-160,-237,-239,-231,-232,-233,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-121,113,-234,-86,-249,-90,-84,-88,113,-124,-327,-312,-313,-310,-308,-261,-306,-260,-304,-302,-236,-238,-300,-297,-291,-288,-285,-281,-266,-267,-270,-273,-276,-262,-263,-127,-128,-74,-76,-78,113,-153,113,341,-218,342,-220,343,-222,344,-259,-246,-271,-260,-261,-237,-239,-272,-264,-265,-122,-250,-100,365,-314,-268,-269,-274,-275,396,-151,406,-217,-219,-221,-223,-224,-226,-227,-254,-247,-315,-245,-244,-92,424,-114,-235,-309,-307,-305,-251,-252,-303,-301,-298,-299,-292,-293,-294,-295,-296,-289,-290,-286,-287,-282,-283,-284,433,-116,-75,-77,-79,-81,-164,442,-206,-212,-213,-215,-225,-228,-230,-253,-248,-235,-240,-93,-113,-279,-278,-115,-258,-80,-118,113,-183,-206,472,-256,-241,-277,-280,-329,-311,-257,-117,-165,-129,113,489,493,-216,-171,-255,-328,-161,113,-184,510,-209,-169,-172,113,-229,-166,526,-180,-209,113,-209,-173,113,-187,-164,113,542,-206,113,-209,-207,-211,113,-178,553,113,-167,-183,-206,558,-207,-211,113,113,-196,-207,-211,-177,-185,-162,113,569,573,113,-193,-207,-211,-210,113,-194,583,-209,-210,113,-192,-195,-210,-166,-209,113,-209,-191,-210,-190,113,113,-209,-207,113,-189,-207,113,113,-207,113,-207,113,113,]),'IMPORT':([0,3,4,8,10,11,15,18,28,30,39,],[13,13,13,-43,-48,-49,13,-44,-47,-50,-51,]),'CLASS':([0,3,4,5,7,8,9,10,11,12,15,16,17,18,19,27,28,30,36,39,40,43,76,],[14,14,14,14,-53,-43,-45,-48,-49,-52,14,14,14,-44,-46,14,-47,-50,-59,-51,-58,-62,-63,]),'IDENTIFIER':([6,13,14,21,22,23,24,29,31,33,37,38,44,45,46,47,48,49,50,51,53,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,80,81,82,83,85,86,87,88,89,94,95,99,101,105,108,109,110,112,113,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,142,143,144,145,146,155,157,158,161,177,178,181,183,184,185,186,190,192,194,195,198,199,200,201,202,203,219,225,226,232,233,237,238,239,244,245,248,249,250,252,254,256,259,261,263,264,265,266,267,268,269,270,271,275,281,284,285,287,289,291,300,301,302,303,304,305,306,307,308,309,311,312,313,314,315,316,317,318,319,320,321,322,323,324,332,333,334,337,338,341,342,343,344,345,346,347,357,364,365,366,368,396,397,402,403,406,410,413,414,415,416,419,420,424,427,429,432,433,440,441,442,443,444,458,460,462,470,471,472,475,477,482,483,485,488,489,491,492,493,494,495,498,501,503,505,506,507,508,509,510,513,514,515,516,518,519,522,523,526,528,529,530,531,532,534,537,539,540,541,542,543,544,545,547,548,549,550,551,552,553,555,556,557,558,560,561,562,563,564,565,566,569,571,572,573,574,575,576,577,578,579,581,582,583,585,586,587,588,589,590,591,593,594,595,596,599,600,602,605,606,608,611,613,616,619,],[24,24,24,-31,-32,-33,-2,24,24,-34,24,24,24,-64,-71,-67,-68,-69,-70,24,-56,24,-54,-31,-13,-14,24,-57,-15,-16,-26,-27,-17,-18,-28,-19,-20,-21,-22,-23,-24,-25,-65,-66,24,-55,24,-56,-107,24,24,-103,24,24,-29,-30,-105,-106,24,24,-112,24,-150,-123,-125,-126,-129,-130,-131,-132,-133,-134,24,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-33,-186,24,24,24,24,-28,24,24,24,-121,24,-73,-94,-82,-101,-102,24,-249,-104,-72,24,24,-111,-124,24,24,24,24,24,24,24,24,24,-127,24,24,-153,24,24,-218,-220,-222,24,24,24,-319,-320,-321,-322,-323,-324,-325,-326,24,24,-122,24,24,-250,-110,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-151,24,24,-217,-219,-221,-223,-224,-226,-227,24,24,-114,24,24,-116,24,24,-164,-206,-28,-225,-228,-230,24,24,24,-113,24,24,24,-115,24,-183,-206,24,24,24,-165,-129,24,24,-208,-171,24,24,-161,24,-184,-208,24,-209,-208,-169,-172,24,-229,-166,24,24,-180,24,-209,-208,24,24,-209,-173,24,24,-164,24,-206,24,24,-209,-207,-211,24,-178,24,-167,-183,-206,24,-207,-211,24,24,-196,-207,-211,-177,-185,-162,24,24,-208,24,-193,-207,-211,-210,24,-194,-208,24,-209,-208,-210,24,-192,-195,-210,-166,24,-209,-208,24,24,-209,-191,-210,-190,24,24,24,-209,-207,24,-189,-207,24,24,-207,24,-207,24,24,]),'DOT':([20,21,22,23,24,25,33,42,57,68,111,114,136,153,154,155,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,179,180,211,213,214,217,218,260,262,273,274,276,277,297,298,331,335,351,352,356,358,359,366,376,377,410,417,418,419,421,435,449,450,456,467,479,],[29,-31,-32,-33,-2,31,-34,29,-31,29,-234,238,-33,-238,-236,29,281,-237,-239,-231,-232,-233,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,238,-234,29,306,307,-236,-238,-259,-246,306,29,-237,-239,29,-235,-252,29,-254,-247,-251,-245,-244,-235,-251,-252,29,-253,-248,-235,-240,-258,-256,-241,-257,-33,-255,]),'BLOCK_OPENER':([21,22,23,24,26,32,33,35,41,42,52,53,55,79,84,87,89,91,93,97,100,103,104,106,107,108,109,113,115,116,117,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,142,147,177,178,182,188,193,196,197,199,201,239,244,248,250,252,254,256,284,286,290,333,334,341,342,343,344,345,346,347,348,360,365,396,402,403,411,413,414,415,423,424,431,433,440,441,445,453,458,460,462,470,475,478,483,485,488,492,494,495,498,501,503,507,509,513,515,516,518,522,523,528,530,531,532,534,537,539,540,541,544,545,547,548,549,550,551,552,553,555,556,560,561,562,563,564,565,566,572,574,575,576,577,578,579,582,585,587,588,589,590,591,593,595,596,599,600,602,605,606,608,611,613,616,619,],[-31,-32,-33,-2,-60,38,-34,38,-61,-28,87,89,-83,87,87,89,89,-87,89,-91,87,-85,-89,-98,-99,89,89,-150,-123,-125,-126,-129,-130,-131,-132,-133,-134,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-186,89,-121,89,-86,-109,-90,-84,-88,89,-124,-127,89,-153,89,-218,-220,-222,-122,-108,-100,402,-151,-217,-219,-221,-223,-224,-226,-227,89,-92,-114,-116,402,-164,-170,-225,-228,-230,-93,-113,89,-115,89,-183,476,89,402,-165,-129,89,-171,89,-161,89,-184,-209,-169,-172,89,-229,-166,-180,-209,89,-209,-173,89,-164,89,89,-209,-207,-211,89,-178,89,-167,-183,-207,-211,89,89,-196,-207,-211,-177,-185,-162,89,89,-193,-207,-211,-210,89,-194,-209,-210,89,-192,-195,-210,-166,-209,89,-209,-191,-210,-190,89,89,-209,-207,89,-189,-207,89,89,-207,89,-207,89,89,]),'COMMA':([21,22,23,24,33,42,64,65,68,95,99,106,107,148,149,150,151,152,153,154,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,180,187,189,192,205,206,207,209,210,211,212,213,215,216,217,218,220,221,222,223,224,227,228,229,230,231,234,235,236,240,241,242,243,260,262,272,273,274,276,277,278,279,280,284,288,289,290,292,294,299,325,326,327,328,329,350,351,352,354,358,359,361,362,366,370,373,374,375,376,377,378,379,380,381,382,383,384,385,386,388,389,390,391,392,393,394,398,399,400,401,407,409,417,418,419,421,422,425,426,428,434,435,436,437,438,439,448,449,450,451,452,454,455,456,457,474,479,480,481,512,],[-31,-32,-33,-2,-34,-28,-26,-27,-28,-29,-30,198,-99,-154,-155,-156,-157,-158,-159,-160,-237,-239,-231,-232,-233,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-121,-234,287,-95,-249,-327,-312,-313,-310,-308,-261,-306,-260,-304,-302,-236,-238,-300,-297,-291,-288,-285,-281,-266,-267,-270,-273,-276,-262,-263,332,-74,-76,-78,-259,-246,-271,-260,-261,-237,-239,-272,-264,-265,-122,-97,-250,-100,364,-242,-314,-268,-269,-274,-275,364,364,-254,-247,-315,-245,-244,287,-96,-235,287,-309,-307,-305,-251,-252,-303,-301,-298,-299,-292,-293,-294,-295,-296,-289,-290,-286,-287,-282,-283,-284,-75,-77,-79,-81,444,-215,-253,-248,-235,-240,364,-243,-279,-278,364,-258,-80,458,-118,-119,364,-256,-241,-277,-280,-329,-311,-257,-117,-216,-255,-328,-120,444,]),'L_PAREN':([21,22,23,24,33,42,57,87,89,92,98,108,109,111,112,113,114,115,116,117,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,141,142,145,146,155,157,158,177,178,199,201,202,203,208,211,225,226,232,233,237,239,244,245,246,247,248,249,250,252,254,256,259,261,263,264,265,266,267,268,269,270,271,274,275,282,284,297,301,302,303,304,305,308,309,310,311,312,313,314,315,316,318,319,320,321,322,323,324,331,333,334,335,337,338,341,342,343,344,345,346,347,349,356,357,364,365,366,368,376,377,396,397,402,403,406,410,412,413,414,415,419,420,424,427,429,432,433,440,441,442,443,444,446,458,459,460,462,467,468,469,470,471,472,475,477,482,483,485,486,487,488,489,491,492,493,494,495,498,501,503,505,506,507,508,509,510,513,514,515,516,518,519,522,523,526,528,529,530,531,532,534,537,539,540,541,542,543,544,545,547,548,549,550,551,552,553,555,556,557,558,560,561,562,563,564,565,566,569,571,572,573,574,575,576,577,578,579,581,582,583,585,586,587,588,589,590,591,593,594,595,596,599,600,602,605,606,608,611,613,616,619,],[-31,-32,-33,-2,-34,-28,94,112,112,183,183,112,112,202,203,-150,237,-123,-125,-126,-129,-130,-131,-132,-133,-134,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-33,245,-182,-205,249,-186,203,203,259,275,275,-121,112,112,-124,203,203,300,259,275,275,275,275,203,-127,112,203,337,338,-153,203,112,-218,-220,-222,203,203,203,-319,-320,-321,-322,-323,-324,-325,-326,259,203,357,-122,259,203,275,275,203,275,275,275,357,275,275,275,275,275,275,275,275,275,275,275,275,275,397,203,-151,259,203,112,-217,-219,-221,-223,-224,-226,-227,416,420,203,203,-114,275,275,420,397,-116,203,203,-164,-206,259,-188,-225,-228,-230,275,203,-113,275,275,275,-115,112,-183,-206,203,112,477,203,482,-165,-129,-33,-182,-205,112,203,-208,-171,203,203,-161,112,505,506,-184,-208,112,-209,-208,-169,-172,112,-229,-166,203,112,-180,112,-209,-208,112,112,-209,-173,112,203,-164,112,-206,112,112,-209,-207,-211,112,-178,112,-167,-183,-206,203,-207,-211,112,112,-196,-207,-211,-177,-185,-162,112,203,-208,112,-193,-207,-211,-210,112,-194,-208,112,-209,-208,-210,112,-192,-195,-210,-166,112,-209,-208,112,112,-209,-191,-210,-190,112,112,112,-209,-207,112,-189,-207,112,112,-207,112,-207,112,112,]),'L_SQBR':([21,22,23,24,33,42,57,58,62,63,66,67,68,69,70,71,72,73,74,75,95,99,136,155,192,211,260,262,274,282,283,289,296,297,310,335,352,358,359,367,369,387,410,418,467,],[-31,-32,-33,-2,-34,-28,-31,96,-15,-16,-17,-18,96,-19,-20,-21,-22,-23,-24,-25,191,191,-33,261,-249,304,304,-246,304,304,304,-250,96,261,304,304,-247,304,304,191,191,96,261,-248,-33,]),'ASSIGN':([21,22,23,24,33,136,155,156,162,163,211,242,243,260,262,297,331,335,352,356,376,377,410,418,467,],[-31,-32,-33,-2,-34,-33,-316,264,-317,-318,-316,333,-78,-259,-246,-316,-252,-316,-247,-251,-251,-252,-316,-248,-33,]),'MULTEQ':([21,22,23,24,33,136,155,156,162,163,211,260,262,297,331,335,352,356,376,377,410,418,467,],[-31,-32,-33,-2,-34,-33,-316,265,-317,-318,-316,-259,-246,-316,-252,-316,-247,-251,-251,-252,-316,-248,-33,]),'DIVEQ':([21,22,23,24,33,136,155,156,162,163,211,260,262,297,331,335,352,356,376,377,410,418,467,],[-31,-32,-33,-2,-34,-33,-316,266,-317,-318,-316,-259,-246,-316,-252,-316,-247,-251,-251,-252,-316,-248,-33,]),'MODEQ':([21,22,23,24,33,136,155,156,162,163,211,260,262,297,331,335,352,356,376,377,410,418,467,],[-31,-32,-33,-2,-34,-33,-316,267,-317,-318,-316,-259,-246,-316,-252,-316,-247,-251,-251,-252,-316,-248,-33,]),'PLUSEQ':([21,22,23,24,33,136,155,156,162,163,211,260,262,297,331,335,352,356,376,377,410,418,467,],[-31,-32,-33,-2,-34,-33,-316,268,-317,-318,-316,-259,-246,-316,-252,-316,-247,-251,-251,-252,-316,-248,-33,]),'MINUSEQ':([21,22,23,24,33,136,155,156,162,163,211,260,262,297,331,335,352,356,376,377,410,418,467,],[-31,-32,-33,-2,-34,-33,-316,269,-317,-318,-316,-259,-246,-316,-252,-316,-247,-251,-251,-252,-316,-248,-33,]),'LSHIFTEQ':([21,22,23,24,33,136,155,156,162,163,211,260,262,297,331,335,352,356,376,377,410,418,467,],[-31,-32,-33,-2,-34,-33,-316,270,-317,-318,-316,-259,-246,-316,-252,-316,-247,-251,-251,-252,-316,-248,-33,]),'RSHIFTEQ':([21,22,23,24,33,136,155,156,162,163,211,260,262,297,331,335,352,356,376,377,410,418,467,],[-31,-32,-33,-2,-34,-33,-316,271,-317,-318,-316,-259,-246,-316,-252,-316,-247,-251,-251,-252,-316,-248,-33,]),'INCREMENT':([21,22,23,24,33,87,89,108,109,111,112,113,115,116,117,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,136,142,145,146,151,152,153,154,155,157,158,159,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,180,199,201,202,203,211,213,217,218,225,226,231,232,233,235,236,237,239,244,245,248,249,250,252,254,256,259,260,261,262,263,264,265,266,267,268,269,270,271,273,274,275,276,277,279,280,284,297,298,301,302,303,304,305,308,309,311,312,313,314,315,316,318,319,320,321,322,323,324,331,333,334,335,337,338,341,342,343,344,345,346,347,351,352,356,357,358,359,364,365,366,368,376,377,396,397,402,403,406,410,413,414,415,417,418,419,420,421,424,427,432,433,435,440,441,442,443,444,449,450,456,458,460,462,467,470,471,472,475,477,479,482,483,485,488,489,491,492,493,494,495,498,501,503,505,506,507,508,509,510,513,514,515,516,518,519,522,523,526,528,529,530,531,532,534,537,539,540,541,542,543,544,545,547,548,549,550,551,552,553,555,556,557,558,560,561,562,563,564,565,566,569,571,572,573,574,575,576,577,578,579,581,582,583,585,586,587,588,589,590,591,593,594,595,596,599,600,602,605,606,608,611,613,616,619,],[-31,-32,-33,-2,-34,157,157,157,157,-234,157,-150,-123,-125,-126,-129,-130,-131,-132,-133,-134,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-33,-186,157,157,-262,-263,-238,-236,-261,157,157,279,-260,-237,-239,-231,-232,-233,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-121,157,-234,157,-124,157,157,-261,-260,-236,-238,157,157,279,157,157,-262,-263,157,-127,157,157,-153,157,157,-218,-220,-222,157,-259,157,-246,157,-319,-320,-321,-322,-323,-324,-325,-326,-260,-261,157,-237,-239,-264,-265,-122,-261,-235,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,-252,157,-151,-261,157,157,-217,-219,-221,-223,-224,-226,-227,-254,-247,-251,157,-245,-244,157,-114,-235,157,-251,-252,-116,157,157,-164,-206,-261,-225,-228,-230,-253,-248,-235,157,-240,-113,157,157,-115,-258,157,-183,-206,157,157,-256,-241,-257,157,-165,-129,-33,157,157,-208,-171,157,-255,157,-161,157,-184,-208,157,-209,-208,-169,-172,157,-229,-166,157,157,-180,157,-209,-208,157,157,-209,-173,157,157,-164,157,-206,157,157,-209,-207,-211,157,-178,157,-167,-183,-206,157,-207,-211,157,157,-196,-207,-211,-177,-185,-162,157,157,-208,157,-193,-207,-211,-210,157,-194,-208,157,-209,-208,-210,157,-192,-195,-210,-166,157,-209,-208,157,157,-209,-191,-210,-190,157,157,157,-209,-207,157,-189,-207,157,157,-207,157,-207,157,157,]),'DECREMENT':([21,22,23,24,33,87,89,108,109,111,112,113,115,116,117,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,136,142,145,146,151,152,153,154,155,157,158,159,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,180,199,201,202,203,211,213,217,218,225,226,231,232,233,235,236,237,239,244,245,248,249,250,252,254,256,259,260,261,262,263,264,265,266,267,268,269,270,271,273,274,275,276,277,279,280,284,297,298,301,302,303,304,305,308,309,311,312,313,314,315,316,318,319,320,321,322,323,324,331,333,334,335,337,338,341,342,343,344,345,346,347,351,352,356,357,358,359,364,365,366,368,376,377,396,397,402,403,406,410,413,414,415,417,418,419,420,421,424,427,432,433,435,440,441,442,443,444,449,450,456,458,460,462,467,470,471,472,475,477,479,482,483,485,488,489,491,492,493,494,495,498,501,503,505,506,507,508,509,510,513,514,515,516,518,519,522,523,526,528,529,530,531,532,534,537,539,540,541,542,543,544,545,547,548,549,550,551,552,553,555,556,557,558,560,561,562,563,564,565,566,569,571,572,573,574,575,576,577,578,579,581,582,583,585,586,587,588,589,590,591,593,594,595,596,599,600,602,605,606,608,611,613,616,619,],[-31,-32,-33,-2,-34,158,158,158,158,-234,158,-150,-123,-125,-126,-129,-130,-131,-132,-133,-134,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-33,-186,158,158,-262,-263,-238,-236,-261,158,158,280,-260,-237,-239,-231,-232,-233,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-121,158,-234,158,-124,158,158,-261,-260,-236,-238,158,158,280,158,158,-262,-263,158,-127,158,158,-153,158,158,-218,-220,-222,158,-259,158,-246,158,-319,-320,-321,-322,-323,-324,-325,-326,-260,-261,158,-237,-239,-264,-265,-122,-261,-235,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,-252,158,-151,-261,158,158,-217,-219,-221,-223,-224,-226,-227,-254,-247,-251,158,-245,-244,158,-114,-235,158,-251,-252,-116,158,158,-164,-206,-261,-225,-228,-230,-253,-248,-235,158,-240,-113,158,158,-115,-258,158,-183,-206,158,158,-256,-241,-257,158,-165,-129,-33,158,158,-208,-171,158,-255,158,-161,158,-184,-208,158,-209,-208,-169,-172,158,-229,-166,158,158,-180,158,-209,-208,158,158,-209,-173,158,158,-164,158,-206,158,158,-209,-207,-211,158,-178,158,-167,-183,-206,158,-207,-211,158,158,-196,-207,-211,-177,-185,-162,158,158,-208,158,-193,-207,-211,-210,158,-194,-208,158,-209,-208,-210,158,-192,-195,-210,-166,158,-209,-208,158,158,-209,-191,-210,-190,158,158,158,-209,-207,158,-189,-207,158,158,-207,158,-207,158,158,]),'MULT':([21,22,23,24,31,33,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,180,211,213,217,218,224,227,228,229,230,231,234,235,236,260,262,272,273,274,276,277,278,279,280,297,325,326,327,328,351,352,358,359,366,376,377,390,391,392,393,394,417,418,419,421,426,428,435,449,450,451,452,456,479,],[-31,-32,-33,-2,34,-34,-237,-239,-231,-232,-233,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-234,-261,-260,-236,-238,322,-281,-266,-267,-270,-273,-276,-262,-263,-259,-246,-271,-260,-261,-237,-239,-272,-264,-265,-261,-268,-269,-274,-275,-254,-247,-245,-244,-235,-251,-252,322,322,-282,-283,-284,-253,-248,-235,-240,-279,-278,-258,-256,-241,-277,-280,-257,-255,]),'DIVIDE':([21,22,23,24,33,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,180,211,213,217,218,224,227,228,229,230,231,234,235,236,260,262,272,273,274,276,277,278,279,280,297,325,326,327,328,351,352,358,359,366,376,377,390,391,392,393,394,417,418,419,421,426,428,435,449,450,451,452,456,479,],[-31,-32,-33,-2,-34,-237,-239,-231,-232,-233,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-234,-261,-260,-236,-238,323,-281,-266,-267,-270,-273,-276,-262,-263,-259,-246,-271,-260,-261,-237,-239,-272,-264,-265,-261,-268,-269,-274,-275,-254,-247,-245,-244,-235,-251,-252,323,323,-282,-283,-284,-253,-248,-235,-240,-279,-278,-258,-256,-241,-277,-280,-257,-255,]),'MODULO':([21,22,23,24,33,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,180,211,213,217,218,224,227,228,229,230,231,234,235,236,260,262,272,273,274,276,277,278,279,280,297,325,326,327,328,351,352,358,359,366,376,377,390,391,392,393,394,417,418,419,421,426,428,435,449,450,451,452,456,479,],[-31,-32,-33,-2,-34,-237,-239,-231,-232,-233,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-234,-261,-260,-236,-238,324,-281,-266,-267,-270,-273,-276,-262,-263,-259,-246,-271,-260,-261,-237,-239,-272,-264,-265,-261,-268,-269,-274,-275,-254,-247,-245,-244,-235,-251,-252,324,324,-282,-283,-284,-253,-248,-235,-240,-279,-278,-258,-256,-241,-277,-280,-257,-255,]),'PLUS':([21,22,23,24,33,112,145,146,157,158,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,180,202,203,211,213,217,218,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,245,249,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,297,301,302,303,304,305,308,309,311,312,313,314,315,316,318,319,320,321,322,323,324,325,326,327,328,333,337,351,352,357,358,359,364,366,368,376,377,388,389,390,391,392,393,394,397,402,406,417,418,419,420,421,426,427,428,432,435,442,443,449,450,451,452,456,458,471,477,479,482,505,519,526,542,543,557,],[-31,-32,-33,-2,-34,225,225,225,225,225,-237,-239,-231,-232,-233,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-234,225,225,-261,-260,-236,-238,320,-285,225,225,-281,-266,-267,-270,-273,225,225,-276,-262,-263,225,225,225,225,-259,225,-246,225,-319,-320,-321,-322,-323,-324,-325,-326,-271,-260,-261,225,-237,-239,-272,-264,-265,-261,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,-268,-269,-274,-275,225,225,-254,-247,225,-245,-244,225,-235,225,-251,-252,320,320,-286,-287,-282,-283,-284,225,225,-206,-253,-248,-235,225,-240,-279,225,-278,225,-258,-206,225,-256,-241,-277,-280,-257,225,225,225,-255,225,225,225,-206,-206,225,225,]),'MINUS':([21,22,23,24,33,112,145,146,157,158,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,180,202,203,211,213,217,218,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,245,249,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,297,301,302,303,304,305,308,309,311,312,313,314,315,316,318,319,320,321,322,323,324,325,326,327,328,333,337,351,352,357,358,359,364,366,368,376,377,388,389,390,391,392,393,394,397,402,406,417,418,419,420,421,426,427,428,432,435,442,443,449,450,451,452,456,458,471,477,479,482,505,519,526,542,543,557,],[-31,-32,-33,-2,-34,226,226,226,226,226,-237,-239,-231,-232,-233,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-234,226,226,-261,-260,-236,-238,321,-285,226,226,-281,-266,-267,-270,-273,226,226,-276,-262,-263,226,226,226,226,-259,226,-246,226,-319,-320,-321,-322,-323,-324,-325,-326,-271,-260,-261,226,-237,-239,-272,-264,-265,-261,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,-268,-269,-274,-275,226,226,-254,-247,226,-245,-244,226,-235,226,-251,-252,321,321,-286,-287,-282,-283,-284,226,226,-206,-253,-248,-235,226,-240,-279,226,-278,226,-258,-206,226,-256,-241,-277,-280,-257,226,226,226,-255,226,226,226,-206,-206,226,226,]),'L_SHIFT':([21,22,23,24,33,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,180,211,213,217,218,222,223,224,227,228,229,230,231,234,235,236,260,262,272,273,274,276,277,278,279,280,297,325,326,327,328,351,352,358,359,366,376,377,382,383,384,385,388,389,390,391,392,393,394,417,418,419,421,426,428,435,449,450,451,452,456,479,],[-31,-32,-33,-2,-34,-237,-239,-231,-232,-233,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-234,-261,-260,-236,-238,318,-288,-285,-281,-266,-267,-270,-273,-276,-262,-263,-259,-246,-271,-260,-261,-237,-239,-272,-264,-265,-261,-268,-269,-274,-275,-254,-247,-245,-244,-235,-251,-252,318,318,318,318,-289,-290,-286,-287,-282,-283,-284,-253,-248,-235,-240,-279,-278,-258,-256,-241,-277,-280,-257,-255,]),'R_SHIFT':([21,22,23,24,33,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,180,211,213,217,218,222,223,224,227,228,229,230,231,234,235,236,260,262,272,273,274,276,277,278,279,280,297,325,326,327,328,351,352,358,359,366,376,377,382,383,384,385,388,389,390,391,392,393,394,417,418,419,421,426,428,435,449,450,451,452,456,479,],[-31,-32,-33,-2,-34,-237,-239,-231,-232,-233,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-234,-261,-260,-236,-238,319,-288,-285,-281,-266,-267,-270,-273,-276,-262,-263,-259,-246,-271,-260,-261,-237,-239,-272,-264,-265,-261,-268,-269,-274,-275,-254,-247,-245,-244,-235,-251,-252,319,319,319,319,-289,-290,-286,-287,-282,-283,-284,-253,-248,-235,-240,-279,-278,-258,-256,-241,-277,-280,-257,-255,]),'LST':([21,22,23,24,33,64,65,68,95,99,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,180,192,211,213,217,218,221,222,223,224,227,228,229,230,231,234,235,236,260,262,272,273,274,276,277,278,279,280,289,297,325,326,327,328,351,352,358,359,366,376,377,380,381,382,383,384,385,386,388,389,390,391,392,393,394,417,418,419,421,426,428,435,449,450,451,452,456,479,],[-31,-32,-33,-2,-34,-26,-27,-28,-29,-30,-237,-239,-231,-232,-233,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-234,-249,-261,-260,-236,-238,313,-291,-288,-285,-281,-266,-267,-270,-273,-276,-262,-263,-259,-246,-271,-260,-261,-237,-239,-272,-264,-265,-250,-261,-268,-269,-274,-275,-254,-247,-245,-244,-235,-251,-252,313,313,-292,-293,-294,-295,-296,-289,-290,-286,-287,-282,-283,-284,-253,-248,-235,-240,-279,-278,-258,-256,-241,-277,-280,-257,-255,]),'GRT':([21,22,23,24,33,64,65,68,95,99,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,180,192,211,213,217,218,221,222,223,224,227,228,229,230,231,234,235,236,260,262,272,273,274,276,277,278,279,280,289,297,325,326,327,328,351,352,358,359,366,376,377,380,381,382,383,384,385,386,388,389,390,391,392,393,394,417,418,419,421,426,428,435,449,450,451,452,456,479,],[-31,-32,-33,-2,-34,-26,-27,-28,-29,-30,-237,-239,-231,-232,-233,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-234,-249,-261,-260,-236,-238,314,-291,-288,-285,-281,-266,-267,-270,-273,-276,-262,-263,-259,-246,-271,-260,-261,-237,-239,-272,-264,-265,-250,-261,-268,-269,-274,-275,-254,-247,-245,-244,-235,-251,-252,314,314,-292,-293,-294,-295,-296,-289,-290,-286,-287,-282,-283,-284,-253,-248,-235,-240,-279,-278,-258,-256,-241,-277,-280,-257,-255,]),'LEQ':([21,22,23,24,33,64,65,68,95,99,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,180,192,211,213,217,218,221,222,223,224,227,228,229,230,231,234,235,236,260,262,272,273,274,276,277,278,279,280,289,297,325,326,327,328,351,352,358,359,366,376,377,380,381,382,383,384,385,386,388,389,390,391,392,393,394,417,418,419,421,426,428,435,449,450,451,452,456,479,],[-31,-32,-33,-2,-34,-26,-27,-28,-29,-30,-237,-239,-231,-232,-233,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-234,-249,-261,-260,-236,-238,315,-291,-288,-285,-281,-266,-267,-270,-273,-276,-262,-263,-259,-246,-271,-260,-261,-237,-239,-272,-264,-265,-250,-261,-268,-269,-274,-275,-254,-247,-245,-244,-235,-251,-252,315,315,-292,-293,-294,-295,-296,-289,-290,-286,-287,-282,-283,-284,-253,-248,-235,-240,-279,-278,-258,-256,-241,-277,-280,-257,-255,]),'GEQ':([21,22,23,24,33,64,65,68,95,99,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,180,192,211,213,217,218,221,222,223,224,227,228,229,230,231,234,235,236,260,262,272,273,274,276,277,278,279,280,289,297,325,326,327,328,351,352,358,359,366,376,377,380,381,382,383,384,385,386,388,389,390,391,392,393,394,417,418,419,421,426,428,435,449,450,451,452,456,479,],[-31,-32,-33,-2,-34,-26,-27,-28,-29,-30,-237,-239,-231,-232,-233,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-234,-249,-261,-260,-236,-238,316,-291,-288,-285,-281,-266,-267,-270,-273,-276,-262,-263,-259,-246,-271,-260,-261,-237,-239,-272,-264,-265,-250,-261,-268,-269,-274,-275,-254,-247,-245,-244,-235,-251,-252,316,316,-292,-293,-294,-295,-296,-289,-290,-286,-287,-282,-283,-284,-253,-248,-235,-240,-279,-278,-258,-256,-241,-277,-280,-257,-255,]),'INSTANCEOF':([21,22,23,24,33,64,65,68,95,99,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,180,192,211,213,217,218,221,222,223,224,227,228,229,230,231,234,235,236,260,262,272,273,274,276,277,278,279,280,289,297,325,326,327,328,351,352,358,359,366,376,377,380,381,382,383,384,385,386,388,389,390,391,392,393,394,417,418,419,421,426,428,435,449,450,451,452,456,479,],[-31,-32,-33,-2,-34,-26,-27,-28,-29,-30,-237,-239,-231,-232,-233,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-234,-249,-261,-260,-236,-238,317,-291,-288,-285,-281,-266,-267,-270,-273,-276,-262,-263,-259,-246,-271,-260,-261,-237,-239,-272,-264,-265,-250,-261,-268,-269,-274,-275,-254,-247,-245,-244,-235,-251,-252,317,317,-292,-293,-294,-295,-296,-289,-290,-286,-287,-282,-283,-284,-253,-248,-235,-240,-279,-278,-258,-256,-241,-277,-280,-257,-255,]),'EQUALS':([21,22,23,24,33,64,65,68,95,99,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,180,192,211,213,217,218,220,221,222,223,224,227,228,229,230,231,234,235,236,260,262,272,273,274,276,277,278,279,280,289,297,325,326,327,328,351,352,358,359,366,376,377,379,380,381,382,383,384,385,386,388,389,390,391,392,393,394,417,418,419,421,426,428,435,449,450,451,452,456,479,],[-31,-32,-33,-2,-34,-26,-27,-28,-29,-30,-237,-239,-231,-232,-233,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-234,-249,-261,-260,-236,-238,311,-297,-291,-288,-285,-281,-266,-267,-270,-273,-276,-262,-263,-259,-246,-271,-260,-261,-237,-239,-272,-264,-265,-250,-261,-268,-269,-274,-275,-254,-247,-245,-244,-235,-251,-252,311,-298,-299,-292,-293,-294,-295,-296,-289,-290,-286,-287,-282,-283,-284,-253,-248,-235,-240,-279,-278,-258,-256,-241,-277,-280,-257,-255,]),'NOT_EQUAL':([21,22,23,24,33,64,65,68,95,99,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,180,192,211,213,217,218,220,221,222,223,224,227,228,229,230,231,234,235,236,260,262,272,273,274,276,277,278,279,280,289,297,325,326,327,328,351,352,358,359,366,376,377,379,380,381,382,383,384,385,386,388,389,390,391,392,393,394,417,418,419,421,426,428,435,449,450,451,452,456,479,],[-31,-32,-33,-2,-34,-26,-27,-28,-29,-30,-237,-239,-231,-232,-233,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-234,-249,-261,-260,-236,-238,312,-297,-291,-288,-285,-281,-266,-267,-270,-273,-276,-262,-263,-259,-246,-271,-260,-261,-237,-239,-272,-264,-265,-250,-261,-268,-269,-274,-275,-254,-247,-245,-244,-235,-251,-252,312,-298,-299,-292,-293,-294,-295,-296,-289,-290,-286,-287,-282,-283,-284,-253,-248,-235,-240,-279,-278,-258,-256,-241,-277,-280,-257,-255,]),'BITWISE_AND':([21,22,23,24,33,64,65,68,95,99,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,180,192,211,213,216,217,218,220,221,222,223,224,227,228,229,230,231,234,235,236,260,262,272,273,274,276,277,278,279,280,289,297,325,326,327,328,351,352,358,359,366,376,377,378,379,380,381,382,383,384,385,386,388,389,390,391,392,393,394,417,418,419,421,426,428,435,449,450,451,452,456,479,],[-31,-32,-33,-2,-34,-26,-27,-28,-29,-30,-237,-239,-231,-232,-233,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-234,-249,-261,-260,309,-236,-238,-300,-297,-291,-288,-285,-281,-266,-267,-270,-273,-276,-262,-263,-259,-246,-271,-260,-261,-237,-239,-272,-264,-265,-250,-261,-268,-269,-274,-275,-254,-247,-245,-244,-235,-251,-252,309,-301,-298,-299,-292,-293,-294,-295,-296,-289,-290,-286,-287,-282,-283,-284,-253,-248,-235,-240,-279,-278,-258,-256,-241,-277,-280,-257,-255,]),'BITWISE_XOR':([21,22,23,24,33,64,65,68,95,99,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,180,192,211,213,215,216,217,218,220,221,222,223,224,227,228,229,230,231,234,235,236,260,262,272,273,274,276,277,278,279,280,289,297,325,326,327,328,351,352,358,359,366,375,376,377,378,379,380,381,382,383,384,385,386,388,389,390,391,392,393,394,417,418,419,421,426,428,435,449,450,451,452,456,479,],[-31,-32,-33,-2,-34,-26,-27,-28,-29,-30,-237,-239,-231,-232,-233,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-234,-249,-261,-260,308,-302,-236,-238,-300,-297,-291,-288,-285,-281,-266,-267,-270,-273,-276,-262,-263,-259,-246,-271,-260,-261,-237,-239,-272,-264,-265,-250,-261,-268,-269,-274,-275,-254,-247,-245,-244,-235,308,-251,-252,-303,-301,-298,-299,-292,-293,-294,-295,-296,-289,-290,-286,-287,-282,-283,-284,-253,-248,-235,-240,-279,-278,-258,-256,-241,-277,-280,-257,-255,]),'BITWISE_OR':([21,22,23,24,33,64,65,68,95,99,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,180,192,211,212,213,215,216,217,218,220,221,222,223,224,227,228,229,230,231,234,235,236,260,262,272,273,274,276,277,278,279,280,289,297,325,326,327,328,351,352,358,359,366,374,375,376,377,378,379,380,381,382,383,384,385,386,388,389,390,391,392,393,394,417,418,419,421,426,428,435,449,450,451,452,456,479,],[-31,-32,-33,-2,-34,-26,-27,-28,-29,-30,-237,-239,-231,-232,-233,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-234,-249,-261,305,-260,-304,-302,-236,-238,-300,-297,-291,-288,-285,-281,-266,-267,-270,-273,-276,-262,-263,-259,-246,-271,-260,-261,-237,-239,-272,-264,-265,-250,-261,-268,-269,-274,-275,-254,-247,-245,-244,-235,305,-305,-251,-252,-303,-301,-298,-299,-292,-293,-294,-295,-296,-289,-290,-286,-287,-282,-283,-284,-253,-248,-235,-240,-279,-278,-258,-256,-241,-277,-280,-257,-255,]),'LOGICAL_AND':([21,22,23,24,33,64,65,68,95,99,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,180,192,210,211,212,213,215,216,217,218,220,221,222,223,224,227,228,229,230,231,234,235,236,260,262,272,273,274,276,277,278,279,280,289,297,325,326,327,328,351,352,358,359,366,373,374,375,376,377,378,379,380,381,382,383,384,385,386,388,389,390,391,392,393,394,417,418,419,421,426,428,435,449,450,451,452,456,479,],[-31,-32,-33,-2,-34,-26,-27,-28,-29,-30,-237,-239,-231,-232,-233,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-234,-249,303,-261,-306,-260,-304,-302,-236,-238,-300,-297,-291,-288,-285,-281,-266,-267,-270,-273,-276,-262,-263,-259,-246,-271,-260,-261,-237,-239,-272,-264,-265,-250,-261,-268,-269,-274,-275,-254,-247,-245,-244,-235,303,-307,-305,-251,-252,-303,-301,-298,-299,-292,-293,-294,-295,-296,-289,-290,-286,-287,-282,-283,-284,-253,-248,-235,-240,-279,-278,-258,-256,-241,-277,-280,-257,-255,]),'QUESTION':([21,22,23,24,33,64,65,68,95,99,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,180,192,209,210,211,212,213,215,216,217,218,220,221,222,223,224,227,228,229,230,231,234,235,236,260,262,272,273,274,276,277,278,279,280,289,297,325,326,327,328,351,352,358,359,366,373,374,375,376,377,378,379,380,381,382,383,384,385,386,388,389,390,391,392,393,394,417,418,419,421,426,428,435,449,450,451,452,456,479,],[-31,-32,-33,-2,-34,-26,-27,-28,-29,-30,-237,-239,-231,-232,-233,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-234,-249,301,-308,-261,-306,-260,-304,-302,-236,-238,-300,-297,-291,-288,-285,-281,-266,-267,-270,-273,-276,-262,-263,-259,-246,-271,-260,-261,-237,-239,-272,-264,-265,-250,-261,-268,-269,-274,-275,-254,-247,-245,-244,-235,-309,-307,-305,-251,-252,-303,-301,-298,-299,-292,-293,-294,-295,-296,-289,-290,-286,-287,-282,-283,-284,-253,-248,-235,-240,-279,-278,-258,-256,-241,-277,-280,-257,-255,]),'LOGICAL_OR':([21,22,23,24,33,64,65,68,95,99,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,180,192,209,210,211,212,213,215,216,217,218,220,221,222,223,224,227,228,229,230,231,234,235,236,260,262,272,273,274,276,277,278,279,280,289,297,325,326,327,328,351,352,358,359,366,373,374,375,376,377,378,379,380,381,382,383,384,385,386,388,389,390,391,392,393,394,417,418,419,421,426,428,435,449,450,451,452,456,479,],[-31,-32,-33,-2,-34,-26,-27,-28,-29,-30,-237,-239,-231,-232,-233,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-234,-249,302,-308,-261,-306,-260,-304,-302,-236,-238,-300,-297,-291,-288,-285,-281,-266,-267,-270,-273,-276,-262,-263,-259,-246,-271,-260,-261,-237,-239,-272,-264,-265,-250,-261,-268,-269,-274,-275,-254,-247,-245,-244,-235,-309,-307,-305,-251,-252,-303,-301,-298,-299,-292,-293,-294,-295,-296,-289,-290,-286,-287,-282,-283,-284,-253,-248,-235,-240,-279,-278,-258,-256,-241,-277,-280,-257,-255,]),'R_PAREN':([21,22,23,24,33,62,63,64,65,66,67,68,69,70,71,72,73,74,75,94,95,99,148,149,150,151,152,153,154,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,180,183,187,189,192,202,204,205,206,207,209,210,211,212,213,215,216,217,218,220,221,222,223,224,227,228,229,230,231,234,235,236,237,243,259,260,262,272,273,274,276,277,278,279,280,284,285,288,289,292,294,295,296,297,299,300,325,326,327,328,329,336,339,350,351,352,354,355,357,358,359,361,362,366,367,369,370,373,374,375,376,377,378,379,380,381,382,383,384,385,386,388,389,390,391,392,393,394,397,404,409,417,418,419,420,421,422,425,426,428,434,435,447,448,449,450,451,452,454,455,456,472,474,479,480,489,493,500,502,510,511,512,524,527,533,546,558,569,573,583,584,592,598,604,],[-31,-32,-33,-2,-34,-15,-16,-26,-27,-17,-18,-28,-19,-20,-21,-22,-23,-24,-25,188,-29,-30,-154,-155,-156,-157,-158,-159,-160,-237,-239,-231,-232,-233,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-121,-234,-94,286,-95,-249,293,298,-327,-312,-313,-310,-308,-261,-306,-260,-304,-302,-236,-238,-300,-297,-291,-288,-285,-281,-266,-267,-270,-273,-276,-262,-263,330,-78,351,-259,-246,-271,-260,-261,-237,-239,-272,-264,-265,-122,360,-97,-250,363,-242,366,368,-261,-314,371,-268,-269,-274,-275,395,403,411,417,-254,-247,-315,419,421,-245,-244,423,-96,-235,427,429,430,-309,-307,-305,-251,-252,-303,-301,-298,-299,-292,-293,-294,-295,-296,-289,-290,-286,-287,-282,-283,-284,435,441,-215,-253,-248,-235,449,-240,450,-243,-279,-278,456,-258,478,479,-256,-241,-277,-280,-329,-311,-257,492,-216,-255,-328,509,515,521,522,530,531,-214,541,544,550,562,572,582,587,595,596,602,608,613,]),'R_SQBR':([21,22,23,24,33,64,65,68,95,96,99,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,180,191,192,205,206,207,209,210,211,212,213,215,216,217,218,220,221,222,223,224,227,228,229,230,231,234,235,236,260,261,262,272,273,274,276,277,278,279,280,284,289,299,325,326,327,328,351,352,353,354,358,359,366,373,374,375,376,377,378,379,380,381,382,383,384,385,386,388,389,390,391,392,393,394,417,418,419,421,426,428,435,449,450,451,452,454,455,456,479,480,],[-31,-32,-33,-2,-34,-26,-27,-28,-29,192,-30,-237,-239,-231,-232,-233,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-121,-234,289,-249,-327,-312,-313,-310,-308,-261,-306,-260,-304,-302,-236,-238,-300,-297,-291,-288,-285,-281,-266,-267,-270,-273,-276,-262,-263,-259,192,-246,-271,-260,-261,-237,-239,-272,-264,-265,-122,-250,-314,-268,-269,-274,-275,-254,-247,418,-315,-245,-244,-235,-309,-307,-305,-251,-252,-303,-301,-298,-299,-292,-293,-294,-295,-296,-289,-290,-286,-287,-282,-283,-284,-253,-248,-235,-240,-279,-278,-258,-256,-241,-277,-280,-329,-311,-257,-255,-328,]),'COLON':([21,22,23,24,33,64,65,68,95,99,136,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,180,192,205,206,207,209,210,211,212,213,215,216,217,218,220,221,222,223,224,227,228,229,230,231,234,235,236,260,262,272,273,274,276,277,278,279,280,284,289,299,325,326,327,328,351,352,354,358,359,366,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,388,389,390,391,392,393,394,417,418,419,421,426,428,435,449,450,451,452,454,455,456,467,479,480,520,535,536,],[-31,-32,-33,-2,-34,-26,-27,-28,-29,-30,244,-237,-239,-231,-232,-233,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-121,-234,-249,-327,-312,-313,-310,-308,-261,-306,-260,-304,-302,-236,-238,-300,-297,-291,-288,-285,-281,-266,-267,-270,-273,-276,-262,-263,-259,-246,-271,-260,-261,-237,-239,-272,-264,-265,-122,-250,-314,-268,-269,-274,-275,-254,-247,-315,-245,-244,-235,432,-309,-307,-305,-251,-252,-303,-301,-298,-299,-292,-293,-294,-295,-296,-289,-290,-286,-287,-282,-283,-284,-253,-248,-235,-240,-279,-278,-258,-256,-241,-277,-280,-329,-311,-257,485,-255,-328,537,552,-330,]),'BLOCK_CLOSER':([21,22,23,24,33,38,44,45,46,47,48,49,50,64,65,68,77,78,85,87,88,89,95,99,101,105,109,110,113,115,116,117,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,180,181,184,185,186,192,194,195,199,200,201,205,206,207,209,210,211,212,213,215,216,217,218,220,221,222,223,224,227,228,229,230,231,234,235,236,239,248,252,254,256,260,262,272,273,274,276,277,278,279,280,284,289,291,299,325,326,327,328,334,341,342,343,344,345,346,347,351,352,354,358,359,366,373,374,375,376,377,378,379,380,381,382,383,384,385,386,388,389,390,391,392,393,394,400,401,402,413,414,415,417,418,419,421,426,428,435,436,437,438,439,449,450,451,452,454,455,456,457,460,462,475,476,479,480,481,483,488,494,495,496,497,501,507,516,517,518,532,540,545,549,551,553,555,561,563,564,566,574,576,577,578,588,589,590,600,],[-31,-32,-33,-2,-34,43,76,-64,-71,-67,-68,-69,-70,-26,-27,-28,-65,-66,-107,110,-103,177,-29,-30,-105,-106,200,-112,-150,-123,-125,-126,-129,-130,-131,-132,-133,-134,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-237,-239,-231,-232,-233,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-121,284,-234,-73,-82,-101,-102,-249,-104,-72,291,-111,-124,-327,-312,-313,-310,-308,-261,-306,-260,-304,-302,-236,-238,-300,-297,-291,-288,-285,-281,-266,-267,-270,-273,-276,-262,-263,-127,-153,-218,-220,-222,-259,-246,-271,-260,-261,-237,-239,-272,-264,-265,-122,-250,-110,-314,-268,-269,-274,-275,-151,-217,-219,-221,-223,-224,-226,-227,-254,-247,-315,-245,-244,-235,-309,-307,-305,-251,-252,-303,-301,-298,-299,-292,-293,-294,-295,-296,-289,-290,-286,-287,-282,-283,-284,-79,-81,438,-225,-228,-230,-253,-248,-235,-240,-279,-278,-258,-80,457,-118,-119,-256,-241,-277,-280,-329,-311,-257,-117,-165,-129,-171,495,-255,-328,-120,-161,-184,-169,-172,516,-174,-229,-180,-173,-175,-176,-211,-167,-211,-196,-211,-185,-162,-193,-211,-210,-194,-210,-192,-195,-210,-191,-210,-190,-189,]),'EXTENDS':([24,26,32,],[-2,-60,37,]),'STATIC':([38,44,45,46,47,48,49,50,51,53,56,61,77,78,81,83,85,88,101,105,110,177,181,184,185,186,194,195,200,284,291,],[53,53,-64,-71,-67,-68,-69,-70,83,-56,-54,-57,-65,-66,-55,-56,-107,-103,-105,-106,-112,-121,-73,-82,-101,-102,-104,-72,-111,-122,-110,]),'VOID':([38,44,45,46,47,48,49,50,51,53,56,61,77,78,81,83,85,88,101,105,110,177,181,184,185,186,194,195,200,284,291,],[60,60,-64,-71,-67,-68,-69,-70,82,-56,-54,-57,-65,-66,-55,-56,-107,-103,-105,-106,-112,-121,-73,-82,-101,-102,-104,-72,-111,-122,-110,]),'FINAL':([38,44,45,46,47,48,49,50,51,53,56,61,77,78,81,83,85,88,101,105,110,177,181,184,185,186,194,195,200,284,291,],[61,61,-64,-71,-67,-68,-69,-70,61,-56,-54,-57,-65,-66,-55,-56,-107,-103,-105,-106,-112,-121,-73,-82,-101,-102,-104,-72,-111,-122,-110,]),'BOOLEAN':([38,44,45,46,47,48,49,50,51,53,56,61,77,78,81,83,85,87,88,89,94,101,105,108,109,110,113,115,116,117,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,161,177,178,181,183,184,185,186,194,195,199,200,201,203,219,239,248,252,254,256,275,284,285,287,291,300,317,334,338,341,342,343,344,345,346,347,365,396,413,414,415,416,424,433,460,462,475,483,488,494,495,498,501,506,507,516,518,532,537,540,545,549,551,552,553,555,561,563,564,566,574,576,577,578,588,589,590,600,],[63,63,-64,-71,-67,-68,-69,-70,63,-56,-54,-57,-65,-66,-55,-56,-107,63,-103,63,63,-105,-106,63,63,-112,-150,-123,-125,-126,-129,-130,-131,-132,-133,-134,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,63,-121,63,-73,-94,-82,-101,-102,-104,-72,63,-111,-124,63,63,-127,-153,-218,-220,-222,63,-122,63,63,-110,63,63,-151,63,-217,-219,-221,-223,-224,-226,-227,-114,-116,-225,-228,-230,63,-113,-115,-165,-129,-171,-161,-184,-169,-172,63,-229,63,-180,-173,63,-211,-178,-167,-211,-196,-211,-177,-185,-162,-193,-211,-210,-194,-210,-192,-195,-210,-191,-210,-190,-189,]),'BYTE':([38,44,45,46,47,48,49,50,51,53,56,61,77,78,81,83,85,87,88,89,94,101,105,108,109,110,113,115,116,117,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,161,177,178,181,183,184,185,186,194,195,199,200,201,203,219,239,248,252,254,256,275,284,285,287,291,300,317,334,338,341,342,343,344,345,346,347,365,396,413,414,415,416,424,433,460,462,475,483,488,494,495,498,501,506,507,516,518,532,537,540,545,549,551,552,553,555,561,563,564,566,574,576,577,578,588,589,590,600,],[69,69,-64,-71,-67,-68,-69,-70,69,-56,-54,-57,-65,-66,-55,-56,-107,69,-103,69,69,-105,-106,69,69,-112,-150,-123,-125,-126,-129,-130,-131,-132,-133,-134,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,69,-121,69,-73,-94,-82,-101,-102,-104,-72,69,-111,-124,69,69,-127,-153,-218,-220,-222,69,-122,69,69,-110,69,69,-151,69,-217,-219,-221,-223,-224,-226,-227,-114,-116,-225,-228,-230,69,-113,-115,-165,-129,-171,-161,-184,-169,-172,69,-229,69,-180,-173,69,-211,-178,-167,-211,-196,-211,-177,-185,-162,-193,-211,-210,-194,-210,-192,-195,-210,-191,-210,-190,-189,]),'SHORT':([38,44,45,46,47,48,49,50,51,53,56,61,77,78,81,83,85,87,88,89,94,101,105,108,109,110,113,115,116,117,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,161,177,178,181,183,184,185,186,194,195,199,200,201,203,219,239,248,252,254,256,275,284,285,287,291,300,317,334,338,341,342,343,344,345,346,347,365,396,413,414,415,416,424,433,460,462,475,483,488,494,495,498,501,506,507,516,518,532,537,540,545,549,551,552,553,555,561,563,564,566,574,576,577,578,588,589,590,600,],[70,70,-64,-71,-67,-68,-69,-70,70,-56,-54,-57,-65,-66,-55,-56,-107,70,-103,70,70,-105,-106,70,70,-112,-150,-123,-125,-126,-129,-130,-131,-132,-133,-134,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,70,-121,70,-73,-94,-82,-101,-102,-104,-72,70,-111,-124,70,70,-127,-153,-218,-220,-222,70,-122,70,70,-110,70,70,-151,70,-217,-219,-221,-223,-224,-226,-227,-114,-116,-225,-228,-230,70,-113,-115,-165,-129,-171,-161,-184,-169,-172,70,-229,70,-180,-173,70,-211,-178,-167,-211,-196,-211,-177,-185,-162,-193,-211,-210,-194,-210,-192,-195,-210,-191,-210,-190,-189,]),'INT':([38,44,45,46,47,48,49,50,51,53,56,61,77,78,81,83,85,87,88,89,94,101,105,108,109,110,113,115,116,117,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,161,177,178,181,183,184,185,186,194,195,199,200,201,203,219,239,248,252,254,256,275,284,285,287,291,300,317,334,338,341,342,343,344,345,346,347,365,396,413,414,415,416,424,433,460,462,475,483,488,494,495,498,501,506,507,516,518,532,537,540,545,549,551,552,553,555,561,563,564,566,574,576,577,578,588,589,590,600,],[71,71,-64,-71,-67,-68,-69,-70,71,-56,-54,-57,-65,-66,-55,-56,-107,71,-103,71,71,-105,-106,71,71,-112,-150,-123,-125,-126,-129,-130,-131,-132,-133,-134,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,71,-121,71,-73,-94,-82,-101,-102,-104,-72,71,-111,-124,71,71,-127,-153,-218,-220,-222,71,-122,71,71,-110,71,71,-151,71,-217,-219,-221,-223,-224,-226,-227,-114,-116,-225,-228,-230,71,-113,-115,-165,-129,-171,-161,-184,-169,-172,71,-229,71,-180,-173,71,-211,-178,-167,-211,-196,-211,-177,-185,-162,-193,-211,-210,-194,-210,-192,-195,-210,-191,-210,-190,-189,]),'LONG':([38,44,45,46,47,48,49,50,51,53,56,61,77,78,81,83,85,87,88,89,94,101,105,108,109,110,113,115,116,117,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,161,177,178,181,183,184,185,186,194,195,199,200,201,203,219,239,248,252,254,256,275,284,285,287,291,300,317,334,338,341,342,343,344,345,346,347,365,396,413,414,415,416,424,433,460,462,475,483,488,494,495,498,501,506,507,516,518,532,537,540,545,549,551,552,553,555,561,563,564,566,574,576,577,578,588,589,590,600,],[72,72,-64,-71,-67,-68,-69,-70,72,-56,-54,-57,-65,-66,-55,-56,-107,72,-103,72,72,-105,-106,72,72,-112,-150,-123,-125,-126,-129,-130,-131,-132,-133,-134,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,72,-121,72,-73,-94,-82,-101,-102,-104,-72,72,-111,-124,72,72,-127,-153,-218,-220,-222,72,-122,72,72,-110,72,72,-151,72,-217,-219,-221,-223,-224,-226,-227,-114,-116,-225,-228,-230,72,-113,-115,-165,-129,-171,-161,-184,-169,-172,72,-229,72,-180,-173,72,-211,-178,-167,-211,-196,-211,-177,-185,-162,-193,-211,-210,-194,-210,-192,-195,-210,-191,-210,-190,-189,]),'CHAR':([38,44,45,46,47,48,49,50,51,53,56,61,77,78,81,83,85,87,88,89,94,101,105,108,109,110,113,115,116,117,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,161,177,178,181,183,184,185,186,194,195,199,200,201,203,219,239,248,252,254,256,275,284,285,287,291,300,317,334,338,341,342,343,344,345,346,347,365,396,413,414,415,416,424,433,460,462,475,483,488,494,495,498,501,506,507,516,518,532,537,540,545,549,551,552,553,555,561,563,564,566,574,576,577,578,588,589,590,600,],[73,73,-64,-71,-67,-68,-69,-70,73,-56,-54,-57,-65,-66,-55,-56,-107,73,-103,73,73,-105,-106,73,73,-112,-150,-123,-125,-126,-129,-130,-131,-132,-133,-134,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,73,-121,73,-73,-94,-82,-101,-102,-104,-72,73,-111,-124,73,73,-127,-153,-218,-220,-222,73,-122,73,73,-110,73,73,-151,73,-217,-219,-221,-223,-224,-226,-227,-114,-116,-225,-228,-230,73,-113,-115,-165,-129,-171,-161,-184,-169,-172,73,-229,73,-180,-173,73,-211,-178,-167,-211,-196,-211,-177,-185,-162,-193,-211,-210,-194,-210,-192,-195,-210,-191,-210,-190,-189,]),'FLOAT':([38,44,45,46,47,48,49,50,51,53,56,61,77,78,81,83,85,87,88,89,94,101,105,108,109,110,113,115,116,117,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,161,177,178,181,183,184,185,186,194,195,199,200,201,203,219,239,248,252,254,256,275,284,285,287,291,300,317,334,338,341,342,343,344,345,346,347,365,396,413,414,415,416,424,433,460,462,475,483,488,494,495,498,501,506,507,516,518,532,537,540,545,549,551,552,553,555,561,563,564,566,574,576,577,578,588,589,590,600,],[74,74,-64,-71,-67,-68,-69,-70,74,-56,-54,-57,-65,-66,-55,-56,-107,74,-103,74,74,-105,-106,74,74,-112,-150,-123,-125,-126,-129,-130,-131,-132,-133,-134,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,74,-121,74,-73,-94,-82,-101,-102,-104,-72,74,-111,-124,74,74,-127,-153,-218,-220,-222,74,-122,74,74,-110,74,74,-151,74,-217,-219,-221,-223,-224,-226,-227,-114,-116,-225,-228,-230,74,-113,-115,-165,-129,-171,-161,-184,-169,-172,74,-229,74,-180,-173,74,-211,-178,-167,-211,-196,-211,-177,-185,-162,-193,-211,-210,-194,-210,-192,-195,-210,-191,-210,-190,-189,]),'DOUBLE':([38,44,45,46,47,48,49,50,51,53,56,61,77,78,81,83,85,87,88,89,94,101,105,108,109,110,113,115,116,117,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,161,177,178,181,183,184,185,186,194,195,199,200,201,203,219,239,248,252,254,256,275,284,285,287,291,300,317,334,338,341,342,343,344,345,346,347,365,396,413,414,415,416,424,433,460,462,475,483,488,494,495,498,501,506,507,516,518,532,537,540,545,549,551,552,553,555,561,563,564,566,574,576,577,578,588,589,590,600,],[75,75,-64,-71,-67,-68,-69,-70,75,-56,-54,-57,-65,-66,-55,-56,-107,75,-103,75,75,-105,-106,75,75,-112,-150,-123,-125,-126,-129,-130,-131,-132,-133,-134,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,75,-121,75,-73,-94,-82,-101,-102,-104,-72,75,-111,-124,75,75,-127,-153,-218,-220,-222,75,-122,75,75,-110,75,75,-151,75,-217,-219,-221,-223,-224,-226,-227,-114,-116,-225,-228,-230,75,-113,-115,-165,-129,-171,-161,-184,-169,-172,75,-229,75,-180,-173,75,-211,-178,-167,-211,-196,-211,-177,-185,-162,-193,-211,-210,-194,-210,-192,-195,-210,-191,-210,-190,-189,]),'THROWS':([52,79,91,97,103,104,188,286,360,423,],[86,86,86,86,86,86,-109,-108,-92,-93,]),'THIS':([87,89,108,109,112,113,115,116,117,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,142,145,146,157,158,177,178,199,201,202,203,225,226,232,233,237,239,244,245,248,249,250,252,254,256,259,261,263,264,265,266,267,268,269,270,271,275,284,301,302,303,304,305,308,309,311,312,313,314,315,316,318,319,320,321,322,323,324,333,334,337,338,341,342,343,344,345,346,347,357,364,365,366,368,396,397,402,403,406,413,414,415,419,420,424,427,429,432,433,440,441,442,443,444,458,460,462,470,471,472,475,477,482,483,485,488,489,491,492,493,494,495,498,501,503,505,506,507,508,509,510,513,514,515,516,518,519,522,523,526,528,529,530,531,532,534,537,539,540,541,542,543,544,545,547,548,549,550,551,552,553,555,556,557,558,560,561,562,563,564,565,566,569,571,572,573,574,575,576,577,578,579,581,582,583,585,586,587,588,589,590,591,593,594,595,596,599,600,602,605,606,608,611,613,616,619,],[111,180,180,180,180,-150,-123,-125,-126,-129,-130,-131,-132,-133,-134,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-186,180,180,180,180,-121,180,180,-124,180,180,180,180,180,180,180,-127,180,180,-153,180,180,-218,-220,-222,180,180,180,-319,-320,-321,-322,-323,-324,-325,-326,180,-122,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,-151,180,180,-217,-219,-221,-223,-224,-226,-227,180,180,-114,180,180,-116,180,180,-164,-206,-225,-228,-230,180,180,-113,180,180,180,-115,180,-183,-206,180,180,180,-165,-129,180,180,-208,-171,180,180,-161,180,-184,-208,180,-209,-208,-169,-172,180,-229,-166,180,180,-180,180,-209,-208,180,180,-209,-173,180,180,-164,180,-206,180,180,-209,-207,-211,180,-178,180,-167,-183,-206,180,-207,-211,180,180,-196,-207,-211,-177,-185,-162,180,180,-208,180,-193,-207,-211,-210,180,-194,-208,180,-209,-208,-210,180,-192,-195,-210,-166,180,-209,-208,180,180,-209,-191,-210,-190,180,180,180,-209,-207,180,-189,-207,180,180,-207,180,-207,180,180,]),'SUPER':([87,89,108,109,112,113,115,116,117,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,142,145,146,157,158,177,178,199,201,202,203,225,226,232,233,237,239,244,245,248,249,250,252,254,256,259,261,263,264,265,266,267,268,269,270,271,275,284,301,302,303,304,305,308,309,311,312,313,314,315,316,318,319,320,321,322,323,324,333,334,337,338,341,342,343,344,345,346,347,357,364,365,366,368,396,397,402,403,406,413,414,415,419,420,424,427,429,432,433,440,441,442,443,444,458,460,462,470,471,472,475,477,482,483,485,488,489,491,492,493,494,495,498,501,503,505,506,507,508,509,510,513,514,515,516,518,519,522,523,526,528,529,530,531,532,534,537,539,540,541,542,543,544,545,547,548,549,550,551,552,553,555,556,557,558,560,561,562,563,564,565,566,569,571,572,573,574,575,576,577,578,579,581,582,583,585,586,587,588,589,590,591,593,594,595,596,599,600,602,605,606,608,611,613,616,619,],[114,179,179,179,214,-150,-123,-125,-126,-129,-130,-131,-132,-133,-134,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-186,214,214,214,214,-121,179,179,-124,214,214,214,214,214,214,214,-127,179,214,-153,214,179,-218,-220,-222,214,214,214,-319,-320,-321,-322,-323,-324,-325,-326,214,-122,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,-151,214,179,-217,-219,-221,-223,-224,-226,-227,214,214,-114,214,214,-116,214,214,-164,-206,-225,-228,-230,214,214,-113,214,214,214,-115,179,-183,-206,214,179,214,-165,-129,179,214,-208,-171,214,214,-161,179,-184,-208,179,-209,-208,-169,-172,179,-229,-166,214,179,-180,179,-209,-208,179,179,-209,-173,179,214,-164,179,-206,179,179,-209,-207,-211,179,-178,179,-167,-183,-206,214,-207,-211,179,179,-196,-207,-211,-177,-185,-162,179,214,-208,179,-193,-207,-211,-210,179,-194,-208,179,-209,-208,-210,179,-192,-195,-210,-166,179,-209,-208,179,179,-209,-191,-210,-190,179,179,179,-209,-207,179,-189,-207,179,179,-207,179,-207,179,179,]),'IF':([87,89,108,109,113,115,116,117,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,142,177,178,199,201,239,244,248,250,252,254,256,284,334,341,342,343,344,345,346,347,365,396,403,413,414,415,424,433,440,441,460,462,470,475,483,485,488,492,494,495,498,501,503,507,509,513,515,516,518,522,523,528,530,531,532,534,537,539,540,541,544,545,547,548,549,550,551,552,553,555,556,560,561,562,563,564,565,566,572,574,575,576,577,578,579,582,585,587,588,589,590,591,593,595,596,599,600,602,605,606,608,611,613,616,619,],[137,137,137,137,-150,-123,-125,-126,-129,-130,-131,-132,-133,-134,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-186,-121,137,137,-124,-127,137,-153,137,-218,-220,-222,-122,-151,-217,-219,-221,-223,-224,-226,-227,-114,-116,-164,-225,-228,-230,-113,-115,459,-183,-165,-129,137,-171,-161,459,-184,-209,-169,-172,137,-229,-166,-180,-209,137,-209,-173,137,-164,137,137,-209,-207,-211,137,-178,459,-167,-183,-207,-211,137,137,-196,-207,-211,-177,-185,-162,459,137,-193,-207,-211,-210,137,-194,-209,-210,137,-192,-195,-210,-166,-209,459,-209,-191,-210,-190,459,459,-209,-207,459,-189,-207,459,459,-207,459,-207,459,459,]),'WHILE':([87,89,108,109,113,115,116,117,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,142,177,178,199,201,239,244,248,250,252,254,256,284,334,340,341,342,343,344,345,346,347,365,396,403,413,414,415,424,433,440,441,460,462,470,475,483,485,488,492,494,495,498,501,503,507,509,513,515,516,518,522,523,528,530,531,532,534,537,539,540,541,544,545,547,548,549,550,551,552,553,555,556,560,561,562,563,564,565,566,572,574,575,576,577,578,579,582,585,587,588,589,590,591,593,595,596,599,600,602,605,606,608,611,613,616,619,],[138,138,138,138,-150,-123,-125,-126,-129,-130,-131,-132,-133,-134,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-186,-121,138,138,-124,-127,138,-153,138,-218,-220,-222,-122,-151,412,-217,-219,-221,-223,-224,-226,-227,-114,-116,-164,-225,-228,-230,-113,-115,468,-183,-165,-129,138,-171,-161,468,-184,-209,-169,-172,138,-229,-166,-180,-209,138,-209,-173,138,-164,138,138,-209,-207,-211,138,-178,468,-167,-183,-207,-211,138,138,-196,-207,-211,-177,-185,-162,468,138,-193,-207,-211,-210,138,-194,-209,-210,138,-192,-195,-210,-166,-209,468,-209,-191,-210,-190,468,468,-209,-207,468,-189,-207,468,468,-207,468,-207,468,468,]),'FOR':([87,89,108,109,113,115,116,117,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,142,177,178,199,201,239,244,248,250,252,254,256,284,334,341,342,343,344,345,346,347,365,396,403,413,414,415,424,433,440,441,460,462,470,475,483,485,488,492,494,495,498,501,503,507,509,513,515,516,518,522,523,528,530,531,532,534,537,539,540,541,544,545,547,548,549,550,551,552,553,555,556,560,561,562,563,564,565,566,572,574,575,576,577,578,579,582,585,587,588,589,590,591,593,595,596,599,600,602,605,606,608,611,613,616,619,],[139,139,139,139,-150,-123,-125,-126,-129,-130,-131,-132,-133,-134,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-186,-121,139,139,-124,-127,139,-153,139,-218,-220,-222,-122,-151,-217,-219,-221,-223,-224,-226,-227,-114,-116,-164,-225,-228,-230,-113,-115,469,-183,-165,-129,139,-171,-161,469,-184,-209,-169,-172,139,-229,-166,-180,-209,139,-209,-173,139,-164,139,139,-209,-207,-211,139,-178,469,-167,-183,-207,-211,139,139,-196,-207,-211,-177,-185,-162,469,139,-193,-207,-211,-210,139,-194,-209,-210,139,-192,-195,-210,-166,-209,469,-209,-191,-210,-190,469,469,-209,-207,469,-189,-207,469,469,-207,469,-207,469,469,]),'SWITCH':([87,89,108,109,113,115,116,117,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,142,177,178,199,201,239,244,248,250,252,254,256,284,334,341,342,343,344,345,346,347,365,396,403,413,414,415,424,433,440,441,460,462,470,475,483,485,488,492,494,495,498,501,503,507,509,513,515,516,518,522,523,528,530,531,532,534,537,539,540,541,544,545,547,548,549,550,551,552,553,555,556,560,561,562,563,564,565,566,572,574,575,576,577,578,579,582,585,587,588,589,590,591,593,595,596,599,600,602,605,606,608,611,613,616,619,],[141,141,141,141,-150,-123,-125,-126,-129,-130,-131,-132,-133,-134,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-186,-121,141,141,-124,-127,141,-153,141,-218,-220,-222,-122,-151,-217,-219,-221,-223,-224,-226,-227,-114,-116,-164,-225,-228,-230,-113,-115,141,-183,-165,-129,141,-171,-161,141,-184,-209,-169,-172,141,-229,-166,-180,-209,141,-209,-173,141,-164,141,141,-209,-207,-211,141,-178,141,-167,-183,-207,-211,141,141,-196,-207,-211,-177,-185,-162,141,141,-193,-207,-211,-210,141,-194,-209,-210,141,-192,-195,-210,-166,-209,141,-209,-191,-210,-190,141,141,-209,-207,141,-189,-207,141,141,-207,141,-207,141,141,]),'DO':([87,89,108,109,113,115,116,117,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,142,177,178,199,201,239,244,248,250,252,254,256,284,334,341,342,343,344,345,346,347,365,396,403,413,414,415,424,433,440,441,460,462,470,475,483,485,488,492,494,495,498,501,503,507,509,513,515,516,518,522,523,528,530,531,532,534,537,539,540,541,544,545,547,548,549,550,551,552,553,555,556,560,561,562,563,564,565,566,572,574,575,576,577,578,579,582,585,587,588,589,590,591,593,595,596,599,600,602,605,606,608,611,613,616,619,],[142,142,142,142,-150,-123,-125,-126,-129,-130,-131,-132,-133,-134,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-186,-121,142,142,-124,-127,142,-153,142,-218,-220,-222,-122,-151,-217,-219,-221,-223,-224,-226,-227,-114,-116,-164,-225,-228,-230,-113,-115,142,-183,-165,-129,142,-171,-161,142,-184,-209,-169,-172,142,-229,-166,-180,-209,142,-209,-173,142,-164,142,142,-209,-207,-211,142,-178,142,-167,-183,-207,-211,142,142,-196,-207,-211,-177,-185,-162,142,142,-193,-207,-211,-210,142,-194,-209,-210,142,-192,-195,-210,-166,-209,142,-209,-191,-210,-190,142,142,-209,-207,142,-189,-207,142,142,-207,142,-207,142,142,]),'BREAK':([87,89,108,109,113,115,116,117,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,142,177,178,199,201,239,244,248,250,252,254,256,284,334,341,342,343,344,345,346,347,365,396,403,413,414,415,424,433,440,441,460,462,470,475,483,485,488,492,494,495,498,501,503,507,509,513,515,516,518,522,523,528,530,531,532,534,537,539,540,541,544,545,547,548,549,550,551,552,553,555,556,560,561,562,563,564,565,566,572,574,575,576,577,578,579,582,585,587,588,589,590,591,593,595,596,599,600,602,605,606,608,611,613,616,619,],[143,143,143,143,-150,-123,-125,-126,-129,-130,-131,-132,-133,-134,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-186,-121,143,143,-124,-127,143,-153,143,-218,-220,-222,-122,-151,-217,-219,-221,-223,-224,-226,-227,-114,-116,-164,-225,-228,-230,-113,-115,143,-183,-165,-129,143,-171,-161,143,-184,-209,-169,-172,143,-229,-166,-180,-209,143,-209,-173,143,-164,143,143,-209,-207,-211,143,-178,143,-167,-183,-207,-211,143,143,-196,-207,-211,-177,-185,-162,143,143,-193,-207,-211,-210,143,-194,-209,-210,143,-192,-195,-210,-166,-209,143,-209,-191,-210,-190,143,143,-209,-207,143,-189,-207,143,143,-207,143,-207,143,143,]),'CONTINUE':([87,89,108,109,113,115,116,117,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,142,177,178,199,201,239,244,248,250,252,254,256,284,334,341,342,343,344,345,346,347,365,396,403,413,414,415,424,433,440,441,460,462,470,475,483,485,488,492,494,495,498,501,503,507,509,513,515,516,518,522,523,528,530,531,532,534,537,539,540,541,544,545,547,548,549,550,551,552,553,555,556,560,561,562,563,564,565,566,572,574,575,576,577,578,579,582,585,587,588,589,590,591,593,595,596,599,600,602,605,606,608,611,613,616,619,],[144,144,144,144,-150,-123,-125,-126,-129,-130,-131,-132,-133,-134,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-186,-121,144,144,-124,-127,144,-153,144,-218,-220,-222,-122,-151,-217,-219,-221,-223,-224,-226,-227,-114,-116,-164,-225,-228,-230,-113,-115,144,-183,-165,-129,144,-171,-161,144,-184,-209,-169,-172,144,-229,-166,-180,-209,144,-209,-173,144,-164,144,144,-209,-207,-211,144,-178,144,-167,-183,-207,-211,144,144,-196,-207,-211,-177,-185,-162,144,144,-193,-207,-211,-210,144,-194,-209,-210,144,-192,-195,-210,-166,-209,144,-209,-191,-210,-190,144,144,-209,-207,144,-189,-207,144,144,-207,144,-207,144,144,]),'RETURN':([87,89,108,109,113,115,116,117,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,142,177,178,199,201,239,244,248,250,252,254,256,284,334,341,342,343,344,345,346,347,365,396,403,413,414,415,424,433,440,441,460,462,470,475,483,485,488,492,494,495,498,501,503,507,509,513,515,516,518,522,523,528,530,531,532,534,537,539,540,541,544,545,547,548,549,550,551,552,553,555,556,560,561,562,563,564,565,566,572,574,575,576,577,578,579,582,585,587,588,589,590,591,593,595,596,599,600,602,605,606,608,611,613,616,619,],[145,145,145,145,-150,-123,-125,-126,-129,-130,-131,-132,-133,-134,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-186,-121,145,145,-124,-127,145,-153,145,-218,-220,-222,-122,-151,-217,-219,-221,-223,-224,-226,-227,-114,-116,-164,-225,-228,-230,-113,-115,145,-183,-165,-129,145,-171,-161,145,-184,-209,-169,-172,145,-229,-166,-180,-209,145,-209,-173,145,-164,145,145,-209,-207,-211,145,-178,145,-167,-183,-207,-211,145,145,-196,-207,-211,-177,-185,-162,145,145,-193,-207,-211,-210,145,-194,-209,-210,145,-192,-195,-210,-166,-209,145,-209,-191,-210,-190,145,145,-209,-207,145,-189,-207,145,145,-207,145,-207,145,145,]),'THROW':([87,89,108,109,113,115,116,117,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,142,177,178,199,201,239,244,248,250,252,254,256,284,334,341,342,343,344,345,346,347,365,396,403,413,414,415,424,433,440,441,460,462,470,475,483,485,488,492,494,495,498,501,503,507,509,513,515,516,518,522,523,528,530,531,532,534,537,539,540,541,544,545,547,548,549,550,551,552,553,555,556,560,561,562,563,564,565,566,572,574,575,576,577,578,579,582,585,587,588,589,590,591,593,595,596,599,600,602,605,606,608,611,613,616,619,],[146,146,146,146,-150,-123,-125,-126,-129,-130,-131,-132,-133,-134,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-186,-121,146,146,-124,-127,146,-153,146,-218,-220,-222,-122,-151,-217,-219,-221,-223,-224,-226,-227,-114,-116,-164,-225,-228,-230,-113,-115,146,-183,-165,-129,146,-171,-161,146,-184,-209,-169,-172,146,-229,-166,-180,-209,146,-209,-173,146,-164,146,146,-209,-207,-211,146,-178,146,-167,-183,-207,-211,146,146,-196,-207,-211,-177,-185,-162,146,146,-193,-207,-211,-210,146,-194,-209,-210,146,-192,-195,-210,-166,-209,146,-209,-191,-210,-190,146,146,-209,-207,146,-189,-207,146,146,-207,146,-207,146,146,]),'TRY':([87,89,108,109,113,115,116,117,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,142,177,178,199,201,239,244,248,250,252,254,256,284,334,341,342,343,344,345,346,347,365,396,403,413,414,415,424,433,440,441,460,462,470,475,483,485,488,492,494,495,498,501,503,507,509,513,515,516,518,522,523,528,530,531,532,534,537,539,540,541,544,545,547,548,549,550,551,552,553,555,556,560,561,562,563,564,565,566,572,574,575,576,577,578,579,582,585,587,588,589,590,591,593,595,596,599,600,602,605,606,608,611,613,616,619,],[147,147,147,147,-150,-123,-125,-126,-129,-130,-131,-132,-133,-134,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-186,-121,147,147,-124,-127,147,-153,147,-218,-220,-222,-122,-151,-217,-219,-221,-223,-224,-226,-227,-114,-116,-164,-225,-228,-230,-113,-115,147,-183,-165,-129,147,-171,-161,147,-184,-209,-169,-172,147,-229,-166,-180,-209,147,-209,-173,147,-164,147,147,-209,-207,-211,147,-178,147,-167,-183,-207,-211,147,147,-196,-207,-211,-177,-185,-162,147,147,-193,-207,-211,-210,147,-194,-209,-210,147,-192,-195,-210,-166,-209,147,-209,-191,-210,-190,147,147,-209,-207,147,-189,-207,147,147,-207,147,-207,147,147,]),'NEW':([87,89,108,109,112,113,115,116,117,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,142,145,146,157,158,177,178,199,201,202,203,225,226,232,233,237,239,244,245,248,249,250,252,254,256,259,261,263,264,265,266,267,268,269,270,271,275,284,301,302,303,304,305,308,309,311,312,313,314,315,316,318,319,320,321,322,323,324,333,334,337,338,341,342,343,344,345,346,347,357,364,365,366,368,396,397,402,403,406,413,414,415,419,420,424,427,429,432,433,440,441,442,443,444,458,460,462,470,471,472,475,477,482,483,485,488,489,491,492,493,494,495,498,501,503,505,506,507,508,509,510,513,514,515,516,518,519,522,523,526,528,529,530,531,532,534,537,539,540,541,542,543,544,545,547,548,549,550,551,552,553,555,556,557,558,560,561,562,563,564,565,566,569,571,572,573,574,575,576,577,578,579,581,582,583,585,586,587,588,589,590,591,593,594,595,596,599,600,602,605,606,608,611,613,616,619,],[161,161,161,161,219,-150,-123,-125,-126,-129,-130,-131,-132,-133,-134,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-186,219,219,219,219,-121,161,161,-124,219,219,219,219,219,219,219,-127,161,219,-153,219,161,-218,-220,-222,219,219,219,-319,-320,-321,-322,-323,-324,-325,-326,219,-122,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,-151,219,161,-217,-219,-221,-223,-224,-226,-227,219,219,-114,219,219,-116,219,219,-164,-206,-225,-228,-230,219,219,-113,219,219,219,-115,161,-183,-206,219,161,219,-165,-129,161,219,-208,-171,219,219,-161,161,-184,-208,161,-209,-208,-169,-172,161,-229,-166,219,161,-180,161,-209,-208,161,161,-209,-173,161,219,-164,161,-206,161,161,-209,-207,-211,161,-178,161,-167,-183,-206,219,-207,-211,161,161,-196,-207,-211,-177,-185,-162,161,219,-208,161,-193,-207,-211,-210,161,-194,-208,161,-209,-208,-210,161,-192,-195,-210,-166,161,-209,-208,161,161,-209,-191,-210,-190,161,161,161,-209,-207,161,-189,-207,161,161,-207,161,-207,161,161,]),'INT_CONSTANT':([87,89,108,109,112,113,115,116,117,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,142,145,146,157,158,177,178,199,201,202,203,225,226,232,233,237,239,244,245,248,249,250,252,254,256,259,261,263,264,265,266,267,268,269,270,271,275,284,301,302,303,304,305,308,309,311,312,313,314,315,316,318,319,320,321,322,323,324,333,334,337,338,341,342,343,344,345,346,347,357,364,365,366,368,396,397,402,403,406,413,414,415,419,420,424,427,429,432,433,440,441,442,443,444,458,460,462,470,471,472,475,477,482,483,485,488,489,491,492,493,494,495,498,501,503,505,506,507,508,509,510,513,514,515,516,518,519,522,523,526,528,529,530,531,532,534,537,539,540,541,542,543,544,545,547,548,549,550,551,552,553,555,556,557,558,560,561,562,563,564,565,566,569,571,572,573,574,575,576,577,578,579,581,582,583,585,586,587,588,589,590,591,593,594,595,596,599,600,602,605,606,608,611,613,616,619,],[172,172,172,172,172,-150,-123,-125,-126,-129,-130,-131,-132,-133,-134,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-186,172,172,172,172,-121,172,172,-124,172,172,172,172,172,172,172,-127,172,172,-153,172,172,-218,-220,-222,172,172,172,-319,-320,-321,-322,-323,-324,-325,-326,172,-122,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,-151,172,172,-217,-219,-221,-223,-224,-226,-227,172,172,-114,172,172,-116,172,172,-164,-206,-225,-228,-230,172,172,-113,172,172,172,-115,172,-183,-206,172,172,172,-165,-129,172,172,-208,-171,172,172,-161,172,-184,-208,172,-209,-208,-169,-172,172,-229,-166,172,172,-180,172,-209,-208,172,172,-209,-173,172,172,-164,172,-206,172,172,-209,-207,-211,172,-178,172,-167,-183,-206,172,-207,-211,172,172,-196,-207,-211,-177,-185,-162,172,172,-208,172,-193,-207,-211,-210,172,-194,-208,172,-209,-208,-210,172,-192,-195,-210,-166,172,-209,-208,172,172,-209,-191,-210,-190,172,172,172,-209,-207,172,-189,-207,172,172,-207,172,-207,172,172,]),'FLOAT_CONSTANT':([87,89,108,109,112,113,115,116,117,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,142,145,146,157,158,177,178,199,201,202,203,225,226,232,233,237,239,244,245,248,249,250,252,254,256,259,261,263,264,265,266,267,268,269,270,271,275,284,301,302,303,304,305,308,309,311,312,313,314,315,316,318,319,320,321,322,323,324,333,334,337,338,341,342,343,344,345,346,347,357,364,365,366,368,396,397,402,403,406,413,414,415,419,420,424,427,429,432,433,440,441,442,443,444,458,460,462,470,471,472,475,477,482,483,485,488,489,491,492,493,494,495,498,501,503,505,506,507,508,509,510,513,514,515,516,518,519,522,523,526,528,529,530,531,532,534,537,539,540,541,542,543,544,545,547,548,549,550,551,552,553,555,556,557,558,560,561,562,563,564,565,566,569,571,572,573,574,575,576,577,578,579,581,582,583,585,586,587,588,589,590,591,593,594,595,596,599,600,602,605,606,608,611,613,616,619,],[173,173,173,173,173,-150,-123,-125,-126,-129,-130,-131,-132,-133,-134,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-186,173,173,173,173,-121,173,173,-124,173,173,173,173,173,173,173,-127,173,173,-153,173,173,-218,-220,-222,173,173,173,-319,-320,-321,-322,-323,-324,-325,-326,173,-122,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,-151,173,173,-217,-219,-221,-223,-224,-226,-227,173,173,-114,173,173,-116,173,173,-164,-206,-225,-228,-230,173,173,-113,173,173,173,-115,173,-183,-206,173,173,173,-165,-129,173,173,-208,-171,173,173,-161,173,-184,-208,173,-209,-208,-169,-172,173,-229,-166,173,173,-180,173,-209,-208,173,173,-209,-173,173,173,-164,173,-206,173,173,-209,-207,-211,173,-178,173,-167,-183,-206,173,-207,-211,173,173,-196,-207,-211,-177,-185,-162,173,173,-208,173,-193,-207,-211,-210,173,-194,-208,173,-209,-208,-210,173,-192,-195,-210,-166,173,-209,-208,173,173,-209,-191,-210,-190,173,173,173,-209,-207,173,-189,-207,173,173,-207,173,-207,173,173,]),'CHAR_CONSTANT':([87,89,108,109,112,113,115,116,117,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,142,145,146,157,158,177,178,199,201,202,203,225,226,232,233,237,239,244,245,248,249,250,252,254,256,259,261,263,264,265,266,267,268,269,270,271,275,284,301,302,303,304,305,308,309,311,312,313,314,315,316,318,319,320,321,322,323,324,333,334,337,338,341,342,343,344,345,346,347,357,364,365,366,368,396,397,402,403,406,413,414,415,419,420,424,427,429,432,433,440,441,442,443,444,458,460,462,470,471,472,475,477,482,483,485,488,489,491,492,493,494,495,498,501,503,505,506,507,508,509,510,513,514,515,516,518,519,522,523,526,528,529,530,531,532,534,537,539,540,541,542,543,544,545,547,548,549,550,551,552,553,555,556,557,558,560,561,562,563,564,565,566,569,571,572,573,574,575,576,577,578,579,581,582,583,585,586,587,588,589,590,591,593,594,595,596,599,600,602,605,606,608,611,613,616,619,],[174,174,174,174,174,-150,-123,-125,-126,-129,-130,-131,-132,-133,-134,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-186,174,174,174,174,-121,174,174,-124,174,174,174,174,174,174,174,-127,174,174,-153,174,174,-218,-220,-222,174,174,174,-319,-320,-321,-322,-323,-324,-325,-326,174,-122,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,-151,174,174,-217,-219,-221,-223,-224,-226,-227,174,174,-114,174,174,-116,174,174,-164,-206,-225,-228,-230,174,174,-113,174,174,174,-115,174,-183,-206,174,174,174,-165,-129,174,174,-208,-171,174,174,-161,174,-184,-208,174,-209,-208,-169,-172,174,-229,-166,174,174,-180,174,-209,-208,174,174,-209,-173,174,174,-164,174,-206,174,174,-209,-207,-211,174,-178,174,-167,-183,-206,174,-207,-211,174,174,-196,-207,-211,-177,-185,-162,174,174,-208,174,-193,-207,-211,-210,174,-194,-208,174,-209,-208,-210,174,-192,-195,-210,-166,174,-209,-208,174,174,-209,-191,-210,-190,174,174,174,-209,-207,174,-189,-207,174,174,-207,174,-207,174,174,]),'STR_CONSTANT':([87,89,108,109,112,113,115,116,117,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,142,145,146,157,158,177,178,199,201,202,203,225,226,232,233,237,239,244,245,248,249,250,252,254,256,259,261,263,264,265,266,267,268,269,270,271,275,284,301,302,303,304,305,308,309,311,312,313,314,315,316,318,319,320,321,322,323,324,333,334,337,338,341,342,343,344,345,346,347,357,364,365,366,368,396,397,402,403,406,413,414,415,419,420,424,427,429,432,433,440,441,442,443,444,458,460,462,470,471,472,475,477,482,483,485,488,489,491,492,493,494,495,498,501,503,505,506,507,508,509,510,513,514,515,516,518,519,522,523,526,528,529,530,531,532,534,537,539,540,541,542,543,544,545,547,548,549,550,551,552,553,555,556,557,558,560,561,562,563,564,565,566,569,571,572,573,574,575,576,577,578,579,581,582,583,585,586,587,588,589,590,591,593,594,595,596,599,600,602,605,606,608,611,613,616,619,],[175,175,175,175,175,-150,-123,-125,-126,-129,-130,-131,-132,-133,-134,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-186,175,175,175,175,-121,175,175,-124,175,175,175,175,175,175,175,-127,175,175,-153,175,175,-218,-220,-222,175,175,175,-319,-320,-321,-322,-323,-324,-325,-326,175,-122,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,-151,175,175,-217,-219,-221,-223,-224,-226,-227,175,175,-114,175,175,-116,175,175,-164,-206,-225,-228,-230,175,175,-113,175,175,175,-115,175,-183,-206,175,175,175,-165,-129,175,175,-208,-171,175,175,-161,175,-184,-208,175,-209,-208,-169,-172,175,-229,-166,175,175,-180,175,-209,-208,175,175,-209,-173,175,175,-164,175,-206,175,175,-209,-207,-211,175,-178,175,-167,-183,-206,175,-207,-211,175,175,-196,-207,-211,-177,-185,-162,175,175,-208,175,-193,-207,-211,-210,175,-194,-208,175,-209,-208,-210,175,-192,-195,-210,-166,175,-209,-208,175,175,-209,-191,-210,-190,175,175,175,-209,-207,175,-189,-207,175,175,-207,175,-207,175,175,]),'NULL':([87,89,108,109,112,113,115,116,117,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,142,145,146,157,158,177,178,199,201,202,203,225,226,232,233,237,239,244,245,248,249,250,252,254,256,259,261,263,264,265,266,267,268,269,270,271,275,284,301,302,303,304,305,308,309,311,312,313,314,315,316,318,319,320,321,322,323,324,333,334,337,338,341,342,343,344,345,346,347,357,364,365,366,368,396,397,402,403,406,413,414,415,419,420,424,427,429,432,433,440,441,442,443,444,458,460,462,470,471,472,475,477,482,483,485,488,489,491,492,493,494,495,498,501,503,505,506,507,508,509,510,513,514,515,516,518,519,522,523,526,528,529,530,531,532,534,537,539,540,541,542,543,544,545,547,548,549,550,551,552,553,555,556,557,558,560,561,562,563,564,565,566,569,571,572,573,574,575,576,577,578,579,581,582,583,585,586,587,588,589,590,591,593,594,595,596,599,600,602,605,606,608,611,613,616,619,],[176,176,176,176,176,-150,-123,-125,-126,-129,-130,-131,-132,-133,-134,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-186,176,176,176,176,-121,176,176,-124,176,176,176,176,176,176,176,-127,176,176,-153,176,176,-218,-220,-222,176,176,176,-319,-320,-321,-322,-323,-324,-325,-326,176,-122,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,-151,176,176,-217,-219,-221,-223,-224,-226,-227,176,176,-114,176,176,-116,176,176,-164,-206,-225,-228,-230,176,176,-113,176,176,176,-115,176,-183,-206,176,176,176,-165,-129,176,176,-208,-171,176,176,-161,176,-184,-208,176,-209,-208,-169,-172,176,-229,-166,176,176,-180,176,-209,-208,176,176,-209,-173,176,176,-164,176,-206,176,176,-209,-207,-211,176,-178,176,-167,-183,-206,176,-207,-211,176,176,-196,-207,-211,-177,-185,-162,176,176,-208,176,-193,-207,-211,-210,176,-194,-208,176,-209,-208,-210,176,-192,-195,-210,-166,176,-209,-208,176,176,-209,-191,-210,-190,176,176,176,-209,-207,176,-189,-207,176,176,-207,176,-207,176,176,]),'LAMBDA':([112,145,146,202,203,237,245,249,259,261,263,264,265,266,267,268,269,270,271,275,301,304,333,337,357,364,397,402,406,420,442,443,458,471,477,482,505,519,526,542,543,557,],[208,208,208,208,208,208,208,208,208,208,208,-319,-320,-321,-322,-323,-324,-325,-326,208,208,208,208,208,208,208,208,208,-206,208,-206,208,208,208,208,208,208,208,-206,-206,208,208,]),'BITWISE_NOT':([112,145,146,157,158,202,203,225,226,232,233,237,245,249,259,261,263,264,265,266,267,268,269,270,271,275,301,302,303,304,305,308,309,311,312,313,314,315,316,318,319,320,321,322,323,324,333,337,357,364,366,368,397,402,406,419,420,427,429,432,442,443,458,471,477,482,505,519,526,542,543,557,],[232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,-319,-320,-321,-322,-323,-324,-325,-326,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,-206,232,232,232,232,232,-206,232,232,232,232,232,232,232,-206,-206,232,232,]),'LOGICAL_NOT':([112,145,146,157,158,202,203,225,226,232,233,237,245,249,259,261,263,264,265,266,267,268,269,270,271,275,301,302,303,304,305,308,309,311,312,313,314,315,316,318,319,320,321,322,323,324,333,337,357,364,366,368,397,402,406,419,420,427,429,432,442,443,458,471,477,482,505,519,526,542,543,557,],[233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,-319,-320,-321,-322,-323,-324,-325,-326,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,-206,233,233,233,233,233,-206,233,233,233,233,233,233,233,-206,-206,233,233,]),'CASE':([113,115,116,117,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,177,201,239,248,252,254,256,284,334,341,342,343,344,345,346,347,413,414,415,460,462,475,476,483,488,494,495,496,497,499,501,507,516,517,518,532,540,545,549,551,553,555,561,563,564,566,574,576,577,578,588,589,590,600,],[-150,-123,-125,-126,-129,-130,-131,-132,-133,-134,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-121,-124,-127,-153,-218,-220,-222,-122,-151,-217,-219,-221,-223,-224,-226,-227,-225,-228,-230,-165,-129,-171,-179,-161,-184,-169,-172,-179,-174,519,-229,-180,-173,-175,-176,-211,-167,-211,-196,-211,-185,-162,-193,-211,-210,-194,-210,-192,-195,-210,-191,-210,-190,-189,]),'DEFAULT':([113,115,116,117,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,177,201,239,248,252,254,256,284,334,341,342,343,344,345,346,347,413,414,415,460,462,475,476,483,488,494,495,496,497,499,501,507,516,517,518,532,540,545,549,551,553,555,561,563,564,566,574,576,577,578,588,589,590,600,],[-150,-123,-125,-126,-129,-130,-131,-132,-133,-134,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-121,-124,-127,-153,-218,-220,-222,-122,-151,-217,-219,-221,-223,-224,-226,-227,-225,-228,-230,-165,-129,-171,-179,-161,-184,-169,-172,-179,-174,520,-229,-180,-173,-175,-176,-211,-167,-211,-196,-211,-185,-162,-193,-211,-210,-194,-210,-192,-195,-210,-191,-210,-190,-189,]),'ELSE':([113,126,127,128,129,130,131,132,133,134,135,177,248,252,254,256,284,341,342,343,344,345,346,347,413,414,415,461,462,463,464,465,466,475,484,494,495,501,504,516,553,554,567,568,580,597,601,603,607,609,610,612,614,615,617,618,620,621,622,623,624,625,626,],[-150,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-121,-153,-218,-220,-222,-122,-217,-219,-221,-223,-224,-226,-227,-225,-228,-230,-168,-135,-136,-137,-138,-139,-171,503,-169,-172,-229,-152,-173,-185,-168,579,-184,-181,-211,-167,-211,-204,-211,-163,-201,-211,-210,-202,-210,-200,-203,-210,-199,-210,-198,-197,]),'FINALLY':([177,258,284,345,347,414,501,],[-121,348,-122,348,-227,-228,-229,]),'CATCH':([177,258,284,345,347,414,501,],[-121,349,-122,349,-227,-228,-229,]),'LAMBDA_TOKEN':([371,430,],[431,453,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Goal':([0,],[1,]),'CompilationUnit':([0,],[2,]),'PackageDeclaration':([0,],[3,]),'ImportDeclarations':([0,3,],[4,15,]),'TypeDeclarations':([0,3,4,15,],[5,16,17,27,]),'ImportDeclaration':([0,3,4,15,],[8,8,18,18,]),'TypeDeclaration':([0,3,4,5,15,16,17,27,],[9,9,9,19,9,19,19,19,]),'SingleTypeImportDeclaration':([0,3,4,15,],[10,10,10,10,]),'TypeImportOnDemandDeclaration':([0,3,4,15,],[11,11,11,11,]),'ClassDeclaration':([0,3,4,5,15,16,17,27,],[12,12,12,12,12,12,12,12,]),'Name':([6,13,37,38,44,51,86,87,89,94,108,109,112,145,146,157,158,161,178,198,199,202,203,219,225,226,232,233,237,244,245,249,250,259,261,263,275,285,287,300,301,302,303,304,305,308,309,311,312,313,314,315,316,317,318,319,320,321,322,323,324,333,337,338,357,364,366,368,397,402,416,419,420,427,429,432,440,443,444,458,470,471,477,482,485,491,498,505,506,508,513,514,518,519,523,528,529,534,539,543,547,548,556,557,560,565,571,575,581,585,586,591,593,594,599,605,606,611,616,619,],[20,25,42,68,68,68,42,155,155,68,155,155,211,211,211,274,274,42,155,42,155,211,297,42,274,274,274,274,211,335,211,211,335,211,211,211,297,68,68,68,211,274,274,211,274,274,274,274,274,274,274,274,274,68,274,274,274,274,274,274,274,211,211,410,211,211,274,274,211,211,68,274,211,274,274,274,335,211,335,211,335,211,211,211,335,335,155,211,410,335,335,335,155,211,335,335,335,335,335,211,335,335,335,211,335,335,335,335,335,335,335,335,335,335,335,335,335,335,335,335,]),'SimpleName':([6,13,37,38,44,51,86,87,89,94,108,109,112,145,146,157,158,161,178,198,199,202,203,219,225,226,232,233,237,244,245,249,250,259,261,263,275,285,287,300,301,302,303,304,305,308,309,311,312,313,314,315,316,317,318,319,320,321,322,323,324,333,337,338,357,364,366,368,397,402,416,419,420,427,429,432,440,443,444,458,470,471,477,482,485,491,498,505,506,508,513,514,518,519,523,528,529,534,539,543,547,548,556,557,560,565,571,575,581,585,586,591,593,594,599,605,606,611,616,619,],[21,21,21,57,57,57,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'QualifiedName':([6,13,37,38,44,51,86,87,89,94,108,109,112,145,146,157,158,161,178,198,199,202,203,219,225,226,232,233,237,244,245,249,250,259,261,263,275,285,287,300,301,302,303,304,305,308,309,311,312,313,314,315,316,317,318,319,320,321,322,323,324,333,337,338,357,364,366,368,397,402,416,419,420,427,429,432,440,443,444,458,470,471,477,482,485,491,498,505,506,508,513,514,518,519,523,528,529,534,539,543,547,548,556,557,560,565,571,575,581,585,586,591,593,594,599,605,606,611,616,619,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'Identifier':([6,13,14,29,31,37,38,44,51,54,60,80,82,86,87,89,94,108,109,112,125,143,144,145,146,157,158,161,178,190,198,199,202,203,219,225,226,232,233,237,238,244,245,249,250,259,261,263,275,281,285,287,300,301,302,303,304,305,306,307,308,309,311,312,313,314,315,316,317,318,319,320,321,322,323,324,332,333,337,338,357,364,366,368,397,402,416,419,420,427,429,432,440,443,444,458,470,471,477,482,485,491,498,505,506,508,513,514,518,519,523,528,529,534,539,543,547,548,556,557,560,565,571,575,581,585,586,591,593,594,599,605,606,611,616,619,],[23,23,26,33,33,23,23,23,23,92,98,92,98,23,136,136,23,136,136,23,243,251,253,23,23,23,23,23,136,243,23,136,23,23,23,23,23,23,23,23,331,136,23,23,136,23,23,23,23,356,23,23,23,23,23,23,23,23,376,377,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,243,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,467,23,23,23,136,23,23,23,467,23,136,23,23,23,136,23,136,23,136,136,23,136,467,23,136,136,467,23,136,136,23,136,23,467,23,467,467,23,467,467,467,467,467,467,]),'ClsMark':([26,],[32,]),'Inherit':([32,],[35,]),'ClassBody':([32,35,],[36,40,]),'ClassType':([37,38,44,51,86,87,89,94,108,109,161,178,198,199,219,285,287,300,317,338,416,498,506,518,],[41,65,65,65,107,65,65,65,65,65,282,65,290,65,310,65,65,65,65,65,65,65,65,65,]),'ClassBodyDeclarations':([38,],[44,]),'ClassBodyDeclaration':([38,44,],[45,77,]),'ClassMemberDeclaration':([38,44,],[46,46,]),'ConstructorDeclaration':([38,44,],[47,47,]),'StaticInitializer':([38,44,],[48,48,]),'FieldDeclaration':([38,44,],[49,49,]),'MethodDeclaration':([38,44,],[50,50,]),'Modifiers':([38,44,],[51,51,]),'ConstructorDeclarator':([38,44,51,],[52,52,79,]),'Type':([38,44,51,87,89,94,108,109,178,199,285,287,300,338,416,498,506,518,],[54,54,80,125,125,190,125,125,125,125,190,190,190,125,190,125,125,125,]),'MethodHeader':([38,44,],[55,55,]),'Modifier':([38,44,51,],[56,56,81,]),'PrimitiveType':([38,44,51,87,89,94,108,109,161,178,199,203,219,275,285,287,300,317,338,416,498,506,518,],[58,58,58,58,58,58,58,58,283,58,58,296,283,296,58,58,58,387,58,58,58,58,58,]),'ReferenceType':([38,44,51,87,89,94,108,109,178,199,285,287,300,317,338,416,498,506,518,],[59,59,59,59,59,59,59,59,59,59,59,59,59,386,59,59,59,59,59,]),'NumericType':([38,44,51,87,89,94,108,109,161,178,199,203,219,275,285,287,300,317,338,416,498,506,518,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'ArrayType':([38,44,51,87,89,94,108,109,178,199,285,287,300,317,338,416,498,506,518,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'IntegralType':([38,44,51,87,89,94,108,109,161,178,199,203,219,275,285,287,300,317,338,416,498,506,518,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'FloatingPointType':([38,44,51,87,89,94,108,109,161,178,199,203,219,275,285,287,300,317,338,416,498,506,518,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'FieldMark':([46,],[78,]),'Throws':([52,79,91,97,103,104,],[84,100,182,193,196,197,]),'ConstructorBody':([52,79,84,100,],[85,101,105,194,]),'Block':([53,87,89,93,108,109,147,178,199,244,250,348,431,440,453,470,478,485,498,513,518,523,528,534,539,547,548,556,560,565,575,585,591,593,599,605,606,611,616,619,],[88,126,126,185,126,126,258,126,126,126,126,415,454,126,480,126,501,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,]),'VariableDeclaratorId':([54,80,125,190,332,],[90,102,242,288,242,]),'MethodDeclarator':([54,60,80,82,],[91,97,103,104,]),'MethodDeclMark2':([55,],[93,]),'Dims':([58,68,155,296,297,387,410,],[95,99,99,367,369,95,99,]),'ClassTypeList':([86,],[106,]),'ExplicitConstructorInvocation':([87,],[108,]),'BlockStatements':([87,89,108,498,],[109,178,199,518,]),'BlockStatement':([87,89,108,109,178,199,498,518,],[115,115,115,201,201,201,115,201,]),'LocalVariableDeclarationStatement':([87,89,108,109,178,199,498,518,],[116,116,116,116,116,116,116,116,]),'Statement':([87,89,108,109,178,199,244,250,440,470,485,498,513,518,523,528,534,539,547,548,556,560,565,575,585,591,593,599,605,606,611,616,619,],[117,117,117,117,117,117,334,340,460,488,334,117,532,117,540,545,551,460,563,564,488,574,578,589,532,540,545,551,563,564,574,578,589,]),'LocalVariableDeclaration':([87,89,108,109,178,199,338,498,506,518,],[118,118,118,118,118,118,408,118,408,118,]),'StatementWithoutTrailingSubstatement':([87,89,108,109,178,199,244,250,440,470,485,498,513,518,523,528,534,539,547,548,556,560,565,575,585,591,593,599,605,606,611,616,619,],[119,119,119,119,119,119,119,119,462,119,462,119,119,119,119,119,119,462,119,119,462,119,119,119,462,462,462,462,462,462,462,462,462,]),'LabeledStatement':([87,89,108,109,178,199,244,250,440,470,485,498,513,518,523,528,534,539,547,548,556,560,565,575,585,591,593,599,605,606,611,616,619,],[120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,]),'IfThenStatement':([87,89,108,109,178,199,244,250,440,470,485,498,513,518,523,528,534,539,547,548,556,560,565,575,585,591,593,599,605,606,611,616,619,],[121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,]),'IfThenElseStatement':([87,89,108,109,178,199,244,250,440,470,485,498,513,518,523,528,534,539,547,548,556,560,565,575,585,591,593,599,605,606,611,616,619,],[122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,]),'WhileStatement':([87,89,108,109,178,199,244,250,440,470,485,498,513,518,523,528,534,539,547,548,556,560,565,575,585,591,593,599,605,606,611,616,619,],[123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,]),'ForStatement':([87,89,108,109,178,199,244,250,440,470,485,498,513,518,523,528,534,539,547,548,556,560,565,575,585,591,593,599,605,606,611,616,619,],[124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,]),'EmptyStatement':([87,89,108,109,178,199,244,250,440,470,485,498,513,518,523,528,534,539,547,548,556,560,565,575,585,591,593,599,605,606,611,616,619,],[127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,]),'ExpressionStatement':([87,89,108,109,178,199,244,250,440,470,485,498,513,518,523,528,534,539,547,548,556,560,565,575,585,591,593,599,605,606,611,616,619,],[128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,]),'SwitchStatement':([87,89,108,109,178,199,244,250,440,470,485,498,513,518,523,528,534,539,547,548,556,560,565,575,585,591,593,599,605,606,611,616,619,],[129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,]),'DoStatement':([87,89,108,109,178,199,244,250,440,470,485,498,513,518,523,528,534,539,547,548,556,560,565,575,585,591,593,599,605,606,611,616,619,],[130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,]),'BreakStatement':([87,89,108,109,178,199,244,250,440,470,485,498,513,518,523,528,534,539,547,548,556,560,565,575,585,591,593,599,605,606,611,616,619,],[131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,]),'ContinueStatement':([87,89,108,109,178,199,244,250,440,470,485,498,513,518,523,528,534,539,547,548,556,560,565,575,585,591,593,599,605,606,611,616,619,],[132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,]),'ReturnStatement':([87,89,108,109,178,199,244,250,440,470,485,498,513,518,523,528,534,539,547,548,556,560,565,575,585,591,593,599,605,606,611,616,619,],[133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,]),'ThrowStatement':([87,89,108,109,178,199,244,250,440,470,485,498,513,518,523,528,534,539,547,548,556,560,565,575,585,591,593,599,605,606,611,616,619,],[134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,]),'TryStatement':([87,89,108,109,178,199,244,250,440,470,485,498,513,518,523,528,534,539,547,548,556,560,565,575,585,591,593,599,605,606,611,616,619,],[135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,]),'StatementExpression':([87,89,108,109,178,199,244,250,338,440,444,470,485,491,498,506,508,513,514,518,523,528,529,534,539,547,548,556,560,565,571,575,581,585,586,591,593,594,599,605,606,611,616,619,],[140,140,140,140,140,140,140,140,409,140,474,140,140,409,140,409,409,140,409,140,140,140,409,140,140,140,140,140,140,140,409,140,409,140,409,140,140,409,140,140,140,140,140,140,]),'Assignment':([87,89,108,109,112,145,146,178,199,202,203,237,244,245,249,250,259,261,263,275,301,304,333,337,338,357,364,397,402,420,440,443,444,458,470,471,477,482,485,491,498,505,506,508,513,514,518,519,523,528,529,534,539,543,547,548,556,557,560,565,571,575,581,585,586,591,593,594,599,605,606,611,616,619,],[148,148,148,148,207,207,207,148,148,207,207,207,148,207,207,148,207,207,207,207,207,207,207,207,148,207,207,207,207,207,148,207,148,207,148,207,207,207,148,148,148,207,148,148,148,148,148,207,148,148,148,148,148,207,148,148,148,207,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,]),'PreIncrementExpression':([87,89,108,109,112,145,146,157,158,178,199,202,203,225,226,232,233,237,244,245,249,250,259,261,263,275,301,302,303,304,305,308,309,311,312,313,314,315,316,318,319,320,321,322,323,324,333,337,338,357,364,368,397,402,420,427,432,440,443,444,458,470,471,477,482,485,491,498,505,506,508,513,514,518,519,523,528,529,534,539,543,547,548,556,557,560,565,571,575,581,585,586,591,593,594,599,605,606,611,616,619,],[149,149,149,149,228,228,228,228,228,149,149,228,228,228,228,228,228,228,149,228,228,149,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,149,228,228,228,228,228,228,228,228,149,228,149,228,149,228,228,228,149,149,149,228,149,149,149,149,149,228,149,149,149,149,149,228,149,149,149,228,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,]),'PreDecrementExpression':([87,89,108,109,112,145,146,157,158,178,199,202,203,225,226,232,233,237,244,245,249,250,259,261,263,275,301,302,303,304,305,308,309,311,312,313,314,315,316,318,319,320,321,322,323,324,333,337,338,357,364,368,397,402,420,427,432,440,443,444,458,470,471,477,482,485,491,498,505,506,508,513,514,518,519,523,528,529,534,539,543,547,548,556,557,560,565,571,575,581,585,586,591,593,594,599,605,606,611,616,619,],[150,150,150,150,229,229,229,229,229,150,150,229,229,229,229,229,229,229,150,229,229,150,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,150,229,229,229,229,229,229,229,229,150,229,150,229,150,229,229,229,150,150,150,229,150,150,150,150,150,229,150,150,150,150,150,229,150,150,150,229,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,]),'PostIncrementExpression':([87,89,108,109,112,145,146,157,158,178,199,202,203,225,226,232,233,237,244,245,249,250,259,261,263,275,301,302,303,304,305,308,309,311,312,313,314,315,316,318,319,320,321,322,323,324,333,337,338,357,364,366,368,397,402,419,420,427,429,432,440,443,444,458,470,471,477,482,485,491,498,505,506,508,513,514,518,519,523,528,529,534,539,543,547,548,556,557,560,565,571,575,581,585,586,591,593,594,599,605,606,611,616,619,],[151,151,151,151,235,235,235,235,235,151,151,235,235,235,235,235,235,235,151,235,235,151,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,151,235,235,235,235,235,235,235,235,235,235,235,151,235,151,235,151,235,235,235,151,151,151,235,151,151,151,151,151,235,151,151,151,151,151,235,151,151,151,235,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,]),'PostDecrementExpression':([87,89,108,109,112,145,146,157,158,178,199,202,203,225,226,232,233,237,244,245,249,250,259,261,263,275,301,302,303,304,305,308,309,311,312,313,314,315,316,318,319,320,321,322,323,324,333,337,338,357,364,366,368,397,402,419,420,427,429,432,440,443,444,458,470,471,477,482,485,491,498,505,506,508,513,514,518,519,523,528,529,534,539,543,547,548,556,557,560,565,571,575,581,585,586,591,593,594,599,605,606,611,616,619,],[152,152,152,152,236,236,236,236,236,152,152,236,236,236,236,236,236,236,152,236,236,152,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,152,236,236,236,236,236,236,236,236,236,236,236,152,236,152,236,152,236,236,236,152,152,152,236,152,152,152,152,152,236,152,152,152,152,152,236,152,152,152,236,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,]),'MethodInvocation':([87,89,108,109,112,145,146,157,158,178,199,202,203,225,226,232,233,237,244,245,249,250,259,261,263,275,301,302,303,304,305,308,309,311,312,313,314,315,316,318,319,320,321,322,323,324,333,337,338,357,364,366,368,397,402,419,420,427,429,432,440,443,444,458,470,471,477,482,485,491,498,505,506,508,513,514,518,519,523,528,529,534,539,543,547,548,556,557,560,565,571,575,581,585,586,591,593,594,599,605,606,611,616,619,],[153,153,153,153,218,218,218,218,218,153,153,218,218,218,218,218,218,218,153,218,218,153,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,153,218,218,218,218,218,218,218,218,218,218,218,153,218,153,218,153,218,218,218,153,153,153,218,153,153,153,153,153,218,153,153,153,153,153,218,153,153,153,218,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,]),'ClassInstanceCreationExpression':([87,89,108,109,112,145,146,157,158,178,199,202,203,225,226,232,233,237,244,245,249,250,259,261,263,275,301,302,303,304,305,308,309,311,312,313,314,315,316,318,319,320,321,322,323,324,333,337,338,357,364,366,368,397,402,419,420,427,429,432,440,443,444,458,470,471,477,482,485,491,498,505,506,508,513,514,518,519,523,528,529,534,539,543,547,548,556,557,560,565,571,575,581,585,586,591,593,594,599,605,606,611,616,619,],[154,154,154,154,217,217,217,217,217,154,154,217,217,217,217,217,217,217,154,217,217,154,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,154,217,217,217,217,217,217,217,217,217,217,217,154,217,154,217,154,217,217,217,154,154,154,217,154,154,154,154,154,217,154,154,154,154,154,217,154,154,154,217,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,]),'LeftHandSide':([87,89,108,109,112,145,146,178,199,202,203,237,244,245,249,250,259,261,263,275,301,304,333,337,338,357,364,397,402,420,440,443,444,458,470,471,477,482,485,491,498,505,506,508,513,514,518,519,523,528,529,534,539,543,547,548,556,557,560,565,571,575,581,585,586,591,593,594,599,605,606,611,616,619,],[156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,]),'PostfixExpression':([87,89,108,109,112,145,146,157,158,178,199,202,203,225,226,232,233,237,244,245,249,250,259,261,263,275,301,302,303,304,305,308,309,311,312,313,314,315,316,318,319,320,321,322,323,324,333,337,338,357,364,366,368,397,402,419,420,427,429,432,440,443,444,458,470,471,477,482,485,491,498,505,506,508,513,514,518,519,523,528,529,534,539,543,547,548,556,557,560,565,571,575,581,585,586,591,593,594,599,605,606,611,616,619,],[159,159,159,159,231,231,231,231,231,159,159,231,231,231,231,231,231,231,159,231,231,159,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,159,231,231,231,231,231,231,231,231,231,231,231,159,231,159,231,159,231,231,231,159,159,159,231,159,159,159,159,159,231,159,159,159,159,159,231,159,159,159,231,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,]),'Primary':([87,89,108,109,112,145,146,157,158,178,199,202,203,225,226,232,233,237,244,245,249,250,259,261,263,275,301,302,303,304,305,308,309,311,312,313,314,315,316,318,319,320,321,322,323,324,333,337,338,357,364,366,368,397,402,419,420,427,429,432,440,443,444,458,470,471,477,482,485,491,498,505,506,508,513,514,518,519,523,528,529,534,539,543,547,548,556,557,560,565,571,575,581,585,586,591,593,594,599,605,606,611,616,619,],[160,160,160,160,213,213,213,273,273,160,160,213,213,273,273,273,273,213,160,213,213,160,213,213,213,213,213,273,273,213,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,213,213,160,213,213,273,273,213,213,273,213,273,273,273,160,213,160,213,160,213,213,213,160,160,160,213,160,160,160,160,160,213,160,160,160,160,160,213,160,160,160,213,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,]),'FieldAccess':([87,89,108,109,112,145,146,157,158,178,199,202,203,225,226,232,233,237,244,245,249,250,259,261,263,275,301,302,303,304,305,308,309,311,312,313,314,315,316,318,319,320,321,322,323,324,333,337,338,357,364,366,368,397,402,419,420,427,429,432,440,443,444,458,470,471,477,482,485,491,498,505,506,508,513,514,518,519,523,528,529,534,539,543,547,548,556,557,560,565,571,575,581,585,586,591,593,594,599,605,606,611,616,619,],[162,162,162,162,162,162,162,276,276,162,162,162,162,276,276,276,276,162,162,162,162,162,162,162,162,162,162,276,276,162,276,276,276,276,276,276,276,276,276,276,276,276,276,276,276,276,162,162,162,162,162,276,276,162,162,276,162,276,276,276,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,]),'ArrayAccess':([87,89,108,109,112,145,146,157,158,178,199,202,203,225,226,232,233,237,244,245,249,250,259,261,263,275,301,302,303,304,305,308,309,311,312,313,314,315,316,318,319,320,321,322,323,324,333,337,338,357,364,366,368,397,402,419,420,427,429,432,440,443,444,458,470,471,477,482,485,491,498,505,506,508,513,514,518,519,523,528,529,534,539,543,547,548,556,557,560,565,571,575,581,585,586,591,593,594,599,605,606,611,616,619,],[163,163,163,163,163,163,163,277,277,163,163,163,163,277,277,277,277,163,163,163,163,163,163,163,163,163,163,277,277,163,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,163,163,163,163,163,277,277,163,163,277,163,277,277,277,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,]),'PrimaryNoNewArray':([87,89,108,109,112,145,146,157,158,178,199,202,203,225,226,232,233,237,244,245,249,250,259,261,263,275,301,302,303,304,305,308,309,311,312,313,314,315,316,318,319,320,321,322,323,324,333,337,338,357,364,366,368,397,402,419,420,427,429,432,440,443,444,458,470,471,477,482,485,491,498,505,506,508,513,514,518,519,523,528,529,534,539,543,547,548,556,557,560,565,571,575,581,585,586,591,593,594,599,605,606,611,616,619,],[164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,]),'ArrayCreationExpression':([87,89,108,109,112,145,146,157,158,178,199,202,203,225,226,232,233,237,244,245,249,250,259,261,263,275,301,302,303,304,305,308,309,311,312,313,314,315,316,318,319,320,321,322,323,324,333,337,338,357,364,366,368,397,402,419,420,427,429,432,440,443,444,458,470,471,477,482,485,491,498,505,506,508,513,514,518,519,523,528,529,534,539,543,547,548,556,557,560,565,571,575,581,585,586,591,593,594,599,605,606,611,616,619,],[165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,]),'Literal':([87,89,108,109,112,145,146,157,158,178,199,202,203,225,226,232,233,237,244,245,249,250,259,261,263,275,301,302,303,304,305,308,309,311,312,313,314,315,316,318,319,320,321,322,323,324,333,337,338,357,364,366,368,397,402,419,420,427,429,432,440,443,444,458,470,471,477,482,485,491,498,505,506,508,513,514,518,519,523,528,529,534,539,543,547,548,556,557,560,565,571,575,581,585,586,591,593,594,599,605,606,611,616,619,],[166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,]),'IntegerConst':([87,89,108,109,112,145,146,157,158,178,199,202,203,225,226,232,233,237,244,245,249,250,259,261,263,275,301,302,303,304,305,308,309,311,312,313,314,315,316,318,319,320,321,322,323,324,333,337,338,357,364,366,368,397,402,419,420,427,429,432,440,443,444,458,470,471,477,482,485,491,498,505,506,508,513,514,518,519,523,528,529,534,539,543,547,548,556,557,560,565,571,575,581,585,586,591,593,594,599,605,606,611,616,619,],[167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,]),'FloatConst':([87,89,108,109,112,145,146,157,158,178,199,202,203,225,226,232,233,237,244,245,249,250,259,261,263,275,301,302,303,304,305,308,309,311,312,313,314,315,316,318,319,320,321,322,323,324,333,337,338,357,364,366,368,397,402,419,420,427,429,432,440,443,444,458,470,471,477,482,485,491,498,505,506,508,513,514,518,519,523,528,529,534,539,543,547,548,556,557,560,565,571,575,581,585,586,591,593,594,599,605,606,611,616,619,],[168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,]),'CharConst':([87,89,108,109,112,145,146,157,158,178,199,202,203,225,226,232,233,237,244,245,249,250,259,261,263,275,301,302,303,304,305,308,309,311,312,313,314,315,316,318,319,320,321,322,323,324,333,337,338,357,364,366,368,397,402,419,420,427,429,432,440,443,444,458,470,471,477,482,485,491,498,505,506,508,513,514,518,519,523,528,529,534,539,543,547,548,556,557,560,565,571,575,581,585,586,591,593,594,599,605,606,611,616,619,],[169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,]),'StringConst':([87,89,108,109,112,145,146,157,158,178,199,202,203,225,226,232,233,237,244,245,249,250,259,261,263,275,301,302,303,304,305,308,309,311,312,313,314,315,316,318,319,320,321,322,323,324,333,337,338,357,364,366,368,397,402,419,420,427,429,432,440,443,444,458,470,471,477,482,485,491,498,505,506,508,513,514,518,519,523,528,529,534,539,543,547,548,556,557,560,565,571,575,581,585,586,591,593,594,599,605,606,611,616,619,],[170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,]),'NullConst':([87,89,108,109,112,145,146,157,158,178,199,202,203,225,226,232,233,237,244,245,249,250,259,261,263,275,301,302,303,304,305,308,309,311,312,313,314,315,316,318,319,320,321,322,323,324,333,337,338,357,364,366,368,397,402,419,420,427,429,432,440,443,444,458,470,471,477,482,485,491,498,505,506,508,513,514,518,519,523,528,529,534,539,543,547,548,556,557,560,565,571,575,581,585,586,591,593,594,599,605,606,611,616,619,],[171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,]),'MethodBody':([93,],[184,]),'FormalParameterList':([94,285,300,],[187,361,370,]),'FormalParameter':([94,285,287,300,416,],[189,189,362,189,447,]),'Expression':([112,145,146,202,203,237,245,249,259,261,275,301,304,333,337,357,364,397,402,420,443,458,471,477,482,505,519,543,557,],[204,255,257,294,295,294,336,339,294,353,355,372,353,400,404,294,425,294,400,294,473,400,490,500,502,524,536,559,570,]),'AssignmentExpression':([112,145,146,202,203,237,245,249,259,261,263,275,301,304,333,337,357,364,397,402,420,443,458,471,477,482,505,519,543,557,],[205,205,205,205,205,205,205,205,205,205,354,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,]),'ConditionalExpression':([112,145,146,202,203,237,245,249,259,261,263,275,301,304,333,337,357,364,397,402,420,432,443,458,471,477,482,505,519,543,557,],[206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,455,206,206,206,206,206,206,206,206,206,]),'ConditionalOrExpression':([112,145,146,202,203,237,245,249,259,261,263,275,301,304,333,337,357,364,397,402,420,432,443,458,471,477,482,505,519,543,557,],[209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,]),'ConditionalAndExpression':([112,145,146,202,203,237,245,249,259,261,263,275,301,302,304,333,337,357,364,397,402,420,432,443,458,471,477,482,505,519,543,557,],[210,210,210,210,210,210,210,210,210,210,210,210,210,373,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,]),'InclusiveOrExpression':([112,145,146,202,203,237,245,249,259,261,263,275,301,302,303,304,333,337,357,364,397,402,420,432,443,458,471,477,482,505,519,543,557,],[212,212,212,212,212,212,212,212,212,212,212,212,212,212,374,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,]),'ExclusiveOrExpression':([112,145,146,202,203,237,245,249,259,261,263,275,301,302,303,304,305,333,337,357,364,397,402,420,432,443,458,471,477,482,505,519,543,557,],[215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,375,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,]),'AndExpression':([112,145,146,202,203,237,245,249,259,261,263,275,301,302,303,304,305,308,333,337,357,364,397,402,420,432,443,458,471,477,482,505,519,543,557,],[216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,378,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,]),'EqualityExpression':([112,145,146,202,203,237,245,249,259,261,263,275,301,302,303,304,305,308,309,333,337,357,364,397,402,420,432,443,458,471,477,482,505,519,543,557,],[220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,379,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,]),'RelationalExpression':([112,145,146,202,203,237,245,249,259,261,263,275,301,302,303,304,305,308,309,311,312,333,337,357,364,397,402,420,432,443,458,471,477,482,505,519,543,557,],[221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,380,381,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,]),'ShiftExpression':([112,145,146,202,203,237,245,249,259,261,263,275,301,302,303,304,305,308,309,311,312,313,314,315,316,333,337,357,364,397,402,420,432,443,458,471,477,482,505,519,543,557,],[222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,382,383,384,385,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,]),'AdditiveExpression':([112,145,146,202,203,237,245,249,259,261,263,275,301,302,303,304,305,308,309,311,312,313,314,315,316,318,319,333,337,357,364,397,402,420,432,443,458,471,477,482,505,519,543,557,],[223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,388,389,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,]),'MultiplicativeExpression':([112,145,146,202,203,237,245,249,259,261,263,275,301,302,303,304,305,308,309,311,312,313,314,315,316,318,319,320,321,333,337,357,364,397,402,420,432,443,458,471,477,482,505,519,543,557,],[224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,390,391,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,]),'UnaryExpression':([112,145,146,157,158,202,203,225,226,232,233,237,245,249,259,261,263,275,301,302,303,304,305,308,309,311,312,313,314,315,316,318,319,320,321,322,323,324,333,337,357,364,368,397,402,420,427,432,443,458,471,477,482,505,519,543,557,],[227,227,227,272,278,227,227,325,326,327,328,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,392,393,394,227,227,227,227,428,227,227,227,451,227,227,227,227,227,227,227,227,227,227,]),'UnaryExpressionNotPlusMinus':([112,145,146,157,158,202,203,225,226,232,233,237,245,249,259,261,263,275,301,302,303,304,305,308,309,311,312,313,314,315,316,318,319,320,321,322,323,324,333,337,357,364,366,368,397,402,419,420,427,429,432,443,458,471,477,482,505,519,543,557,],[230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,426,230,230,230,426,230,230,452,230,230,230,230,230,230,230,230,230,230,]),'CastExpression':([112,145,146,157,158,202,203,225,226,232,233,237,245,249,259,261,263,275,301,302,303,304,305,308,309,311,312,313,314,315,316,318,319,320,321,322,323,324,333,337,357,364,366,368,397,402,419,420,427,429,432,443,458,471,477,482,505,519,543,557,],[234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,]),'VariableDeclarators':([125,],[240,]),'VariableDeclarator':([125,332,],[241,398,]),'WhMark1':([138,468,],[246,486,]),'FoMark0':([139,469,],[247,487,]),'doWhMark1':([142,],[250,]),'DimExprs':([155,211,274,282,283,297,310,335,410,],[260,260,260,358,359,260,358,260,260,]),'DimExpr':([155,211,260,274,282,283,297,310,335,358,359,410,],[262,262,352,262,262,262,262,262,262,352,352,262,]),'AssignmentOperator':([156,],[263,]),'MethodDeclMark1':([183,],[285,]),'ArgumentList':([202,237,259,357,397,420,],[292,329,350,422,434,448,]),'LambdaExpression':([208,],[299,]),'Catches':([258,],[345,]),'Finally':([258,345,],[346,413,]),'CatchClause':([258,345,],[347,414,]),'VariableInitializer':([333,402,458,],[399,439,481,]),'ArrayInitializer':([333,402,458,],[401,401,401,]),'ForInit':([338,506,],[405,525,]),'StatementExpressionList':([338,491,506,508,514,529,571,581,586,594,],[407,512,407,512,512,512,512,512,512,512,]),'classMark':([401,],[436,]),'VariableInitializers':([402,],[437,]),'IfMark1':([403,522,],[440,539,]),'FoMark1':([406,442,526,542,],[443,471,543,557,]),'SwMark2':([411,],[445,]),'doWhMark2':([412,],[446,]),'StatementNoShortIf':([440,485,539,556,585,591,593,599,605,606,611,616,619,],[461,504,554,568,597,601,603,609,614,615,618,622,624,]),'LabeledStatementNoShortIf':([440,485,539,556,585,591,593,599,605,606,611,616,619,],[463,463,463,463,463,463,463,463,463,463,463,463,463,]),'IfThenElseStatementNoShortIf':([440,485,539,556,585,591,593,599,605,606,611,616,619,],[464,464,464,464,464,464,464,464,464,464,464,464,464,]),'WhileStatementNoShortIf':([440,485,539,556,585,591,593,599,605,606,611,616,619,],[465,465,465,465,465,465,465,465,465,465,465,465,465,]),'ForStatementNoShortIf':([440,485,539,556,585,591,593,599,605,606,611,616,619,],[466,466,466,466,466,466,466,466,466,466,466,466,466,]),'WhMark2':([441,541,],[470,556,]),'SwitchBlock':([445,],[475,]),'IfMark2':([460,],[483,]),'IfMark5':([461,554,],[484,567,]),'FoMark6':([472,489,493,510,558,569,573,583,],[491,508,514,529,571,581,586,594,]),'SwMark3':([475,],[494,]),'SwitchBlockStatementGroups':([476,],[496,]),'SwitchBlockStatementGroup':([476,496,],[497,517,]),'SwitchLabel':([476,496,],[498,498,]),'SwMark1':([476,496,],[499,499,]),'WhMark3':([488,568,],[507,580,]),'ForUpdate':([491,508,514,529,571,581,586,594,],[511,527,533,546,584,592,598,604,]),'FoMark4':([492,509,515,530,572,582,587,595,],[513,528,534,547,585,593,599,605,]),'IfMark3':([503,579,],[523,591,]),'ConstantExpression':([519,],[535,]),'doWhMark3':([521,],[538,]),'FoMark2':([531,544,550,562,596,602,608,613,],[548,560,565,575,606,611,616,619,]),'FoMark5':([532,545,551,563,597,603,609,614,],[549,561,566,576,607,612,617,620,]),'IfMark4':([540,601,],[555,610,]),'FoMark3':([564,574,578,589,615,618,622,624,],[577,588,590,600,621,623,625,626,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Goal","S'",1,None,None,None),
  ('Goal -> CompilationUnit','Goal',1,'p_Goal','LALR_parser.py',23),
  ('Identifier -> IDENTIFIER','Identifier',1,'p_Identfier','LALR_parser.py',28),
  ('Literal -> IntegerConst','Literal',1,'p_Literal','LALR_parser.py',32),
  ('Literal -> FloatConst','Literal',1,'p_Literal','LALR_parser.py',33),
  ('Literal -> CharConst','Literal',1,'p_Literal','LALR_parser.py',34),
  ('Literal -> StringConst','Literal',1,'p_Literal','LALR_parser.py',35),
  ('Literal -> NullConst','Literal',1,'p_Literal','LALR_parser.py',36),
  ('IntegerConst -> INT_CONSTANT','IntegerConst',1,'p_IntegerConst','LALR_parser.py',45),
  ('FloatConst -> FLOAT_CONSTANT','FloatConst',1,'p_FloatConst','LALR_parser.py',55),
  ('CharConst -> CHAR_CONSTANT','CharConst',1,'p_CharConst','LALR_parser.py',65),
  ('StringConst -> STR_CONSTANT','StringConst',1,'p_StringConst','LALR_parser.py',75),
  ('NullConst -> NULL','NullConst',1,'p_NullConst','LALR_parser.py',85),
  ('Type -> PrimitiveType','Type',1,'p_Type','LALR_parser.py',95),
  ('Type -> ReferenceType','Type',1,'p_Type','LALR_parser.py',96),
  ('PrimitiveType -> NumericType','PrimitiveType',1,'p_PrimitiveType','LALR_parser.py',102),
  ('PrimitiveType -> BOOLEAN','PrimitiveType',1,'p_PrimitiveType','LALR_parser.py',103),
  ('NumericType -> IntegralType','NumericType',1,'p_NumericType','LALR_parser.py',114),
  ('NumericType -> FloatingPointType','NumericType',1,'p_NumericType','LALR_parser.py',115),
  ('IntegralType -> BYTE','IntegralType',1,'p_IntegralType','LALR_parser.py',121),
  ('IntegralType -> SHORT','IntegralType',1,'p_IntegralType','LALR_parser.py',122),
  ('IntegralType -> INT','IntegralType',1,'p_IntegralType','LALR_parser.py',123),
  ('IntegralType -> LONG','IntegralType',1,'p_IntegralType','LALR_parser.py',124),
  ('IntegralType -> CHAR','IntegralType',1,'p_IntegralType','LALR_parser.py',125),
  ('FloatingPointType -> FLOAT','FloatingPointType',1,'p_FloatingPointType','LALR_parser.py',133),
  ('FloatingPointType -> DOUBLE','FloatingPointType',1,'p_FloatingPointType','LALR_parser.py',134),
  ('ReferenceType -> ArrayType','ReferenceType',1,'p_ReferenceType','LALR_parser.py',142),
  ('ReferenceType -> ClassType','ReferenceType',1,'p_ReferenceType','LALR_parser.py',143),
  ('ClassType -> Name','ClassType',1,'p_ClassType','LALR_parser.py',150),
  ('ArrayType -> PrimitiveType Dims','ArrayType',2,'p_ArrayType','LALR_parser.py',157),
  ('ArrayType -> Name Dims','ArrayType',2,'p_ArrayType','LALR_parser.py',158),
  ('Name -> SimpleName','Name',1,'p_Name','LALR_parser.py',174),
  ('Name -> QualifiedName','Name',1,'p_Name','LALR_parser.py',175),
  ('SimpleName -> Identifier','SimpleName',1,'p_SimpleName','LALR_parser.py',181),
  ('QualifiedName -> Name DOT Identifier','QualifiedName',3,'p_QualifiedName','LALR_parser.py',188),
  ('CompilationUnit -> PackageDeclaration ImportDeclarations TypeDeclarations','CompilationUnit',3,'p_CompilationUnit','LALR_parser.py',226),
  ('CompilationUnit -> PackageDeclaration ImportDeclarations','CompilationUnit',2,'p_CompilationUnit','LALR_parser.py',227),
  ('CompilationUnit -> PackageDeclaration TypeDeclarations','CompilationUnit',2,'p_CompilationUnit','LALR_parser.py',228),
  ('CompilationUnit -> ImportDeclarations TypeDeclarations','CompilationUnit',2,'p_CompilationUnit','LALR_parser.py',229),
  ('CompilationUnit -> PackageDeclaration','CompilationUnit',1,'p_CompilationUnit','LALR_parser.py',230),
  ('CompilationUnit -> ImportDeclarations','CompilationUnit',1,'p_CompilationUnit','LALR_parser.py',231),
  ('CompilationUnit -> TypeDeclarations','CompilationUnit',1,'p_CompilationUnit','LALR_parser.py',232),
  ('CompilationUnit -> <empty>','CompilationUnit',0,'p_CompilationUnit','LALR_parser.py',233),
  ('ImportDeclarations -> ImportDeclaration','ImportDeclarations',1,'p_ImportDeclarations','LALR_parser.py',239),
  ('ImportDeclarations -> ImportDeclarations ImportDeclaration','ImportDeclarations',2,'p_ImportDeclarations','LALR_parser.py',240),
  ('TypeDeclarations -> TypeDeclaration','TypeDeclarations',1,'p_TypeDeclarations','LALR_parser.py',246),
  ('TypeDeclarations -> TypeDeclarations TypeDeclaration','TypeDeclarations',2,'p_TypeDeclarations','LALR_parser.py',247),
  ('PackageDeclaration -> PACKAGE Name STMT_TERMINATOR','PackageDeclaration',3,'p_PackageDeclaration','LALR_parser.py',260),
  ('ImportDeclaration -> SingleTypeImportDeclaration','ImportDeclaration',1,'p_ImportDeclaration','LALR_parser.py',266),
  ('ImportDeclaration -> TypeImportOnDemandDeclaration','ImportDeclaration',1,'p_ImportDeclaration','LALR_parser.py',267),
  ('SingleTypeImportDeclaration -> IMPORT Name STMT_TERMINATOR','SingleTypeImportDeclaration',3,'p_SingleTypeImportDeclaration','LALR_parser.py',273),
  ('TypeImportOnDemandDeclaration -> IMPORT Name DOT MULT STMT_TERMINATOR','TypeImportOnDemandDeclaration',5,'p_TypeImportOnDemandDeclaration','LALR_parser.py',279),
  ('TypeDeclaration -> ClassDeclaration','TypeDeclaration',1,'p_TypeDeclaration','LALR_parser.py',285),
  ('TypeDeclaration -> STMT_TERMINATOR','TypeDeclaration',1,'p_TypeDeclaration','LALR_parser.py',286),
  ('Modifiers -> Modifier','Modifiers',1,'p_Modifiers','LALR_parser.py',293),
  ('Modifiers -> Modifiers Modifier','Modifiers',2,'p_Modifiers','LALR_parser.py',294),
  ('Modifier -> STATIC','Modifier',1,'p_Modifier','LALR_parser.py',304),
  ('Modifier -> FINAL','Modifier',1,'p_Modifier','LALR_parser.py',305),
  ('ClassDeclaration -> CLASS Identifier ClsMark Inherit ClassBody','ClassDeclaration',5,'p_ClassDeclaration','LALR_parser.py',314),
  ('ClassDeclaration -> CLASS Identifier ClsMark ClassBody','ClassDeclaration',4,'p_ClassDeclaration','LALR_parser.py',315),
  ('ClsMark -> <empty>','ClsMark',0,'p_ClsMark','LALR_parser.py',329),
  ('Inherit -> EXTENDS ClassType','Inherit',2,'p_Inherit','LALR_parser.py',336),
  ('ClassBody -> BLOCK_OPENER BLOCK_CLOSER','ClassBody',2,'p_ClassBody','LALR_parser.py',343),
  ('ClassBody -> BLOCK_OPENER ClassBodyDeclarations BLOCK_CLOSER','ClassBody',3,'p_ClassBody','LALR_parser.py',344),
  ('ClassBodyDeclarations -> ClassBodyDeclaration','ClassBodyDeclarations',1,'p_ClassBodyDeclarations','LALR_parser.py',357),
  ('ClassBodyDeclarations -> ClassBodyDeclarations ClassBodyDeclaration','ClassBodyDeclarations',2,'p_ClassBodyDeclarations','LALR_parser.py',358),
  ('ClassBodyDeclaration -> ClassMemberDeclaration FieldMark','ClassBodyDeclaration',2,'p_ClassBodyDeclaration','LALR_parser.py',369),
  ('ClassBodyDeclaration -> ConstructorDeclaration','ClassBodyDeclaration',1,'p_ClassBodyDeclaration','LALR_parser.py',370),
  ('ClassBodyDeclaration -> StaticInitializer','ClassBodyDeclaration',1,'p_ClassBodyDeclaration','LALR_parser.py',371),
  ('ClassMemberDeclaration -> FieldDeclaration','ClassMemberDeclaration',1,'p_ClassMemberDeclaration','LALR_parser.py',379),
  ('ClassMemberDeclaration -> MethodDeclaration','ClassMemberDeclaration',1,'p_ClassMemberDeclaration','LALR_parser.py',380),
  ('FieldMark -> <empty>','FieldMark',0,'p_FieldMark','LALR_parser.py',387),
  ('FieldDeclaration -> Modifiers Type VariableDeclaratorId STMT_TERMINATOR','FieldDeclaration',4,'p_FieldDeclaration','LALR_parser.py',394),
  ('FieldDeclaration -> Type VariableDeclaratorId STMT_TERMINATOR','FieldDeclaration',3,'p_FieldDeclaration','LALR_parser.py',395),
  ('VariableDeclarators -> VariableDeclarator','VariableDeclarators',1,'p_VariableDeclarators','LALR_parser.py',407),
  ('VariableDeclarators -> VariableDeclarators COMMA VariableDeclarator','VariableDeclarators',3,'p_VariableDeclarators','LALR_parser.py',408),
  ('VariableDeclarator -> VariableDeclaratorId','VariableDeclarator',1,'p_VariableDeclarator','LALR_parser.py',419),
  ('VariableDeclarator -> VariableDeclaratorId ASSIGN VariableInitializer','VariableDeclarator',3,'p_VariableDeclarator','LALR_parser.py',420),
  ('VariableDeclaratorId -> Identifier','VariableDeclaratorId',1,'p_VariableDeclaratorId','LALR_parser.py',478),
  ('VariableInitializer -> Expression','VariableInitializer',1,'p_VariableInitializer','LALR_parser.py',485),
  ('VariableInitializer -> ArrayInitializer classMark','VariableInitializer',2,'p_VariableInitializer','LALR_parser.py',486),
  ('classMark -> <empty>','classMark',0,'p_classMark','LALR_parser.py',493),
  ('MethodDeclaration -> MethodHeader MethodDeclMark2 MethodBody','MethodDeclaration',3,'p_MethodDeclaration','LALR_parser.py',497),
  ('MethodDeclMark2 -> <empty>','MethodDeclMark2',0,'p_MehodDeclMark2','LALR_parser.py',506),
  ('MethodHeader -> Modifiers Type MethodDeclarator Throws','MethodHeader',4,'p_MethodHeader','LALR_parser.py',513),
  ('MethodHeader -> Modifiers Type MethodDeclarator','MethodHeader',3,'p_MethodHeader','LALR_parser.py',514),
  ('MethodHeader -> Type MethodDeclarator Throws','MethodHeader',3,'p_MethodHeader','LALR_parser.py',515),
  ('MethodHeader -> Type MethodDeclarator','MethodHeader',2,'p_MethodHeader','LALR_parser.py',516),
  ('MethodHeader -> Modifiers VOID MethodDeclarator Throws','MethodHeader',4,'p_MethodHeader','LALR_parser.py',517),
  ('MethodHeader -> Modifiers VOID MethodDeclarator','MethodHeader',3,'p_MethodHeader','LALR_parser.py',518),
  ('MethodHeader -> VOID MethodDeclarator Throws','MethodHeader',3,'p_MethodHeader','LALR_parser.py',519),
  ('MethodHeader -> VOID MethodDeclarator','MethodHeader',2,'p_MethodHeader','LALR_parser.py',520),
  ('MethodDeclarator -> Identifier L_PAREN MethodDeclMark1 R_PAREN','MethodDeclarator',4,'p_MethodDeclarator','LALR_parser.py',545),
  ('MethodDeclarator -> Identifier L_PAREN MethodDeclMark1 FormalParameterList R_PAREN','MethodDeclarator',5,'p_MethodDeclarator','LALR_parser.py',546),
  ('MethodDeclMark1 -> <empty>','MethodDeclMark1',0,'p_MehodDeclMark1','LALR_parser.py',582),
  ('FormalParameterList -> FormalParameter','FormalParameterList',1,'p_FormalParametersList','LALR_parser.py',588),
  ('FormalParameterList -> FormalParameterList COMMA FormalParameter','FormalParameterList',3,'p_FormalParametersList','LALR_parser.py',589),
  ('FormalParameter -> Type VariableDeclaratorId','FormalParameter',2,'p_FormalParameter','LALR_parser.py',599),
  ('Throws -> THROWS ClassTypeList','Throws',2,'p_Throws','LALR_parser.py',612),
  ('ClassTypeList -> ClassType','ClassTypeList',1,'p_ClassTypeList','LALR_parser.py',618),
  ('ClassTypeList -> ClassTypeList COMMA ClassType','ClassTypeList',3,'p_ClassTypeList','LALR_parser.py',619),
  ('MethodBody -> Block','MethodBody',1,'p_MethodBody','LALR_parser.py',625),
  ('MethodBody -> STMT_TERMINATOR','MethodBody',1,'p_MethodBody','LALR_parser.py',626),
  ('StaticInitializer -> STATIC Block','StaticInitializer',2,'p_StaticInitializer','LALR_parser.py',632),
  ('ConstructorDeclaration -> Modifiers ConstructorDeclarator Throws ConstructorBody','ConstructorDeclaration',4,'p_ConstructorDeclaration','LALR_parser.py',638),
  ('ConstructorDeclaration -> Modifiers ConstructorDeclarator ConstructorBody','ConstructorDeclaration',3,'p_ConstructorDeclaration','LALR_parser.py',639),
  ('ConstructorDeclaration -> ConstructorDeclarator Throws ConstructorBody','ConstructorDeclaration',3,'p_ConstructorDeclaration','LALR_parser.py',640),
  ('ConstructorDeclaration -> ConstructorDeclarator ConstructorBody','ConstructorDeclaration',2,'p_ConstructorDeclaration','LALR_parser.py',641),
  ('ConstructorDeclarator -> SimpleName L_PAREN FormalParameterList R_PAREN','ConstructorDeclarator',4,'p_ConstructorDeclarator','LALR_parser.py',649),
  ('ConstructorDeclarator -> SimpleName L_PAREN R_PAREN','ConstructorDeclarator',3,'p_ConstructorDeclarator','LALR_parser.py',650),
  ('ConstructorBody -> BLOCK_OPENER ExplicitConstructorInvocation BlockStatements BLOCK_CLOSER','ConstructorBody',4,'p_ConstructorBody','LALR_parser.py',656),
  ('ConstructorBody -> BLOCK_OPENER BlockStatements BLOCK_CLOSER','ConstructorBody',3,'p_ConstructorBody','LALR_parser.py',657),
  ('ConstructorBody -> BLOCK_OPENER BLOCK_CLOSER','ConstructorBody',2,'p_ConstructorBody','LALR_parser.py',658),
  ('ExplicitConstructorInvocation -> THIS L_PAREN ArgumentList R_PAREN STMT_TERMINATOR','ExplicitConstructorInvocation',5,'p_ExplicitConstructorInvocation','LALR_parser.py',665),
  ('ExplicitConstructorInvocation -> THIS L_PAREN R_PAREN STMT_TERMINATOR','ExplicitConstructorInvocation',4,'p_ExplicitConstructorInvocation','LALR_parser.py',666),
  ('ExplicitConstructorInvocation -> SUPER L_PAREN ArgumentList R_PAREN STMT_TERMINATOR','ExplicitConstructorInvocation',5,'p_ExplicitConstructorInvocation','LALR_parser.py',667),
  ('ExplicitConstructorInvocation -> SUPER L_PAREN R_PAREN STMT_TERMINATOR','ExplicitConstructorInvocation',4,'p_ExplicitConstructorInvocation','LALR_parser.py',668),
  ('ArrayInitializer -> BLOCK_OPENER VariableInitializers BLOCK_CLOSER','ArrayInitializer',3,'p_ArrayInitializer','LALR_parser.py',675),
  ('ArrayInitializer -> BLOCK_OPENER BLOCK_CLOSER','ArrayInitializer',2,'p_ArrayInitializer','LALR_parser.py',676),
  ('VariableInitializers -> VariableInitializer','VariableInitializers',1,'p_VariableInitializers','LALR_parser.py',683),
  ('VariableInitializers -> VariableInitializers COMMA VariableInitializer','VariableInitializers',3,'p_VariableInitializers','LALR_parser.py',684),
  ('Block -> BLOCK_OPENER BLOCK_CLOSER','Block',2,'p_Block','LALR_parser.py',691),
  ('Block -> BLOCK_OPENER BlockStatements BLOCK_CLOSER','Block',3,'p_Block','LALR_parser.py',692),
  ('BlockStatements -> BlockStatement','BlockStatements',1,'p_BlockStatements','LALR_parser.py',698),
  ('BlockStatements -> BlockStatements BlockStatement','BlockStatements',2,'p_BlockStatements','LALR_parser.py',699),
  ('BlockStatement -> LocalVariableDeclarationStatement','BlockStatement',1,'p_BlockStatement','LALR_parser.py',705),
  ('BlockStatement -> Statement','BlockStatement',1,'p_BlockStatement','LALR_parser.py',706),
  ('LocalVariableDeclarationStatement -> LocalVariableDeclaration STMT_TERMINATOR','LocalVariableDeclarationStatement',2,'p_LocalVariableDeclarationStatement','LALR_parser.py',713),
  ('LocalVariableDeclaration -> Type VariableDeclarators','LocalVariableDeclaration',2,'p_LocalVariableDeclaration','LALR_parser.py',720),
  ('Statement -> StatementWithoutTrailingSubstatement','Statement',1,'p_Statement','LALR_parser.py',781),
  ('Statement -> LabeledStatement','Statement',1,'p_Statement','LALR_parser.py',782),
  ('Statement -> IfThenStatement','Statement',1,'p_Statement','LALR_parser.py',783),
  ('Statement -> IfThenElseStatement','Statement',1,'p_Statement','LALR_parser.py',784),
  ('Statement -> WhileStatement','Statement',1,'p_Statement','LALR_parser.py',785),
  ('Statement -> ForStatement','Statement',1,'p_Statement','LALR_parser.py',786),
  ('StatementNoShortIf -> StatementWithoutTrailingSubstatement','StatementNoShortIf',1,'p_StatementNoShortIf','LALR_parser.py',793),
  ('StatementNoShortIf -> LabeledStatementNoShortIf','StatementNoShortIf',1,'p_StatementNoShortIf','LALR_parser.py',794),
  ('StatementNoShortIf -> IfThenElseStatementNoShortIf','StatementNoShortIf',1,'p_StatementNoShortIf','LALR_parser.py',795),
  ('StatementNoShortIf -> WhileStatementNoShortIf','StatementNoShortIf',1,'p_StatementNoShortIf','LALR_parser.py',796),
  ('StatementNoShortIf -> ForStatementNoShortIf','StatementNoShortIf',1,'p_StatementNoShortIf','LALR_parser.py',797),
  ('StatementWithoutTrailingSubstatement -> Block','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','LALR_parser.py',804),
  ('StatementWithoutTrailingSubstatement -> EmptyStatement','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','LALR_parser.py',805),
  ('StatementWithoutTrailingSubstatement -> ExpressionStatement','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','LALR_parser.py',806),
  ('StatementWithoutTrailingSubstatement -> SwitchStatement','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','LALR_parser.py',807),
  ('StatementWithoutTrailingSubstatement -> DoStatement','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','LALR_parser.py',808),
  ('StatementWithoutTrailingSubstatement -> BreakStatement','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','LALR_parser.py',809),
  ('StatementWithoutTrailingSubstatement -> ContinueStatement','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','LALR_parser.py',810),
  ('StatementWithoutTrailingSubstatement -> ReturnStatement','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','LALR_parser.py',811),
  ('StatementWithoutTrailingSubstatement -> ThrowStatement','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','LALR_parser.py',812),
  ('StatementWithoutTrailingSubstatement -> TryStatement','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','LALR_parser.py',813),
  ('EmptyStatement -> STMT_TERMINATOR','EmptyStatement',1,'p_EmptyStatement','LALR_parser.py',820),
  ('LabeledStatement -> Identifier COLON Statement','LabeledStatement',3,'p_LabeledStatement','LALR_parser.py',826),
  ('LabeledStatementNoShortIf -> Identifier COLON StatementNoShortIf','LabeledStatementNoShortIf',3,'p_LabeledStatementNoShortIf','LALR_parser.py',832),
  ('ExpressionStatement -> StatementExpression STMT_TERMINATOR','ExpressionStatement',2,'p_ExpressionStatement','LALR_parser.py',838),
  ('StatementExpression -> Assignment','StatementExpression',1,'p_StatementExpression','LALR_parser.py',845),
  ('StatementExpression -> PreIncrementExpression','StatementExpression',1,'p_StatementExpression','LALR_parser.py',846),
  ('StatementExpression -> PreDecrementExpression','StatementExpression',1,'p_StatementExpression','LALR_parser.py',847),
  ('StatementExpression -> PostIncrementExpression','StatementExpression',1,'p_StatementExpression','LALR_parser.py',848),
  ('StatementExpression -> PostDecrementExpression','StatementExpression',1,'p_StatementExpression','LALR_parser.py',849),
  ('StatementExpression -> MethodInvocation','StatementExpression',1,'p_StatementExpression','LALR_parser.py',850),
  ('StatementExpression -> ClassInstanceCreationExpression','StatementExpression',1,'p_StatementExpression','LALR_parser.py',851),
  ('IfThenStatement -> IF L_PAREN Expression R_PAREN IfMark1 Statement IfMark2','IfThenStatement',7,'p_IfThenStatement','LALR_parser.py',858),
  ('IfThenElseStatement -> IF L_PAREN Expression R_PAREN IfMark1 StatementNoShortIf IfMark5 ELSE IfMark3 Statement IfMark4','IfThenElseStatement',11,'p_IfThenElseStatement','LALR_parser.py',864),
  ('IfThenElseStatementNoShortIf -> IF L_PAREN Expression R_PAREN IfMark1 StatementNoShortIf IfMark5 ELSE IfMark3 StatementNoShortIf IfMark4','IfThenElseStatementNoShortIf',11,'p_IfThenElseStatementNoShortIf','LALR_parser.py',870),
  ('IfMark1 -> <empty>','IfMark1',0,'p_IfMark1','LALR_parser.py',875),
  ('IfMark2 -> <empty>','IfMark2',0,'p_IfMark2','LALR_parser.py',885),
  ('IfMark3 -> <empty>','IfMark3',0,'p_IfMark3','LALR_parser.py',890),
  ('IfMark4 -> <empty>','IfMark4',0,'p_IfMark4','LALR_parser.py',898),
  ('IfMark5 -> <empty>','IfMark5',0,'p_IfMark5','LALR_parser.py',903),
  ('SwitchStatement -> SWITCH L_PAREN Expression R_PAREN SwMark2 SwitchBlock SwMark3','SwitchStatement',7,'p_SwitchStatement','LALR_parser.py',908),
  ('SwMark2 -> <empty>','SwMark2',0,'p_SwMark2','LALR_parser.py',915),
  ('SwMark3 -> <empty>','SwMark3',0,'p_SwMark3','LALR_parser.py',924),
  ('SwitchBlock -> BLOCK_OPENER BLOCK_CLOSER','SwitchBlock',2,'p_SwitchBlock','LALR_parser.py',939),
  ('SwitchBlock -> BLOCK_OPENER SwitchBlockStatementGroups BLOCK_CLOSER','SwitchBlock',3,'p_SwitchBlock','LALR_parser.py',940),
  ('SwitchBlockStatementGroups -> SwitchBlockStatementGroup','SwitchBlockStatementGroups',1,'p_SwitchBlockStatementGroups','LALR_parser.py',947),
  ('SwitchBlockStatementGroups -> SwitchBlockStatementGroups SwitchBlockStatementGroup','SwitchBlockStatementGroups',2,'p_SwitchBlockStatementGroups','LALR_parser.py',948),
  ('SwitchBlockStatementGroup -> SwitchLabel BlockStatements','SwitchBlockStatementGroup',2,'p_SwitchBlockStatementGroup','LALR_parser.py',964),
  ('SwitchLabel -> SwMark1 CASE ConstantExpression COLON','SwitchLabel',4,'p_SwitchLabel','LALR_parser.py',971),
  ('SwitchLabel -> SwMark1 DEFAULT COLON','SwitchLabel',3,'p_SwitchLabel','LALR_parser.py',972),
  ('SwMark1 -> <empty>','SwMark1',0,'p_SwMark1','LALR_parser.py',985),
  ('WhileStatement -> WHILE WhMark1 L_PAREN Expression R_PAREN WhMark2 Statement WhMark3','WhileStatement',8,'p_WhileStatement','LALR_parser.py',992),
  ('WhileStatementNoShortIf -> WHILE WhMark1 L_PAREN Expression R_PAREN WhMark2 StatementNoShortIf WhMark3','WhileStatementNoShortIf',8,'p_WhileStatementNoShortIf','LALR_parser.py',998),
  ('WhMark1 -> <empty>','WhMark1',0,'p_WhMark1','LALR_parser.py',1003),
  ('WhMark2 -> <empty>','WhMark2',0,'p_WhMark2','LALR_parser.py',1014),
  ('WhMark3 -> <empty>','WhMark3',0,'p_WhMark3','LALR_parser.py',1020),
  ('DoStatement -> DO doWhMark1 Statement WHILE doWhMark2 L_PAREN Expression R_PAREN doWhMark3 STMT_TERMINATOR','DoStatement',10,'p_DoStatement','LALR_parser.py',1029),
  ('doWhMark1 -> <empty>','doWhMark1',0,'p_doWhMark1','LALR_parser.py',1034),
  ('doWhMark3 -> <empty>','doWhMark3',0,'p_doWhMark3','LALR_parser.py',1045),
  ('doWhMark2 -> <empty>','doWhMark2',0,'p_doWhMark2','LALR_parser.py',1051),
  ('ForStatement -> FOR FoMark0 L_PAREN ForInit STMT_TERMINATOR FoMark1 Expression STMT_TERMINATOR FoMark6 ForUpdate R_PAREN FoMark2 Statement FoMark3','ForStatement',14,'p_ForStatement','LALR_parser.py',1060),
  ('ForStatement -> FOR FoMark0 L_PAREN STMT_TERMINATOR FoMark1 Expression STMT_TERMINATOR FoMark6 ForUpdate R_PAREN FoMark2 Statement FoMark3','ForStatement',13,'p_ForStatement','LALR_parser.py',1061),
  ('ForStatement -> FOR FoMark0 L_PAREN ForInit STMT_TERMINATOR FoMark1 STMT_TERMINATOR FoMark6 ForUpdate R_PAREN FoMark2 Statement FoMark3','ForStatement',13,'p_ForStatement','LALR_parser.py',1062),
  ('ForStatement -> FOR FoMark0 L_PAREN ForInit STMT_TERMINATOR FoMark1 Expression STMT_TERMINATOR R_PAREN FoMark4 Statement FoMark5','ForStatement',12,'p_ForStatement','LALR_parser.py',1063),
  ('ForStatement -> FOR FoMark0 L_PAREN ForInit STMT_TERMINATOR FoMark1 STMT_TERMINATOR R_PAREN FoMark4 Statement FoMark5','ForStatement',11,'p_ForStatement','LALR_parser.py',1064),
  ('ForStatement -> FOR FoMark0 L_PAREN STMT_TERMINATOR FoMark1 Expression STMT_TERMINATOR R_PAREN FoMark4 Statement FoMark5','ForStatement',11,'p_ForStatement','LALR_parser.py',1065),
  ('ForStatement -> FOR FoMark0 L_PAREN STMT_TERMINATOR FoMark1 STMT_TERMINATOR FoMark6 ForUpdate R_PAREN FoMark2 Statement FoMark3','ForStatement',12,'p_ForStatement','LALR_parser.py',1066),
  ('ForStatement -> FOR FoMark0 L_PAREN STMT_TERMINATOR FoMark1 STMT_TERMINATOR R_PAREN FoMark4 Statement FoMark5','ForStatement',10,'p_ForStatement','LALR_parser.py',1067),
  ('ForStatementNoShortIf -> FOR FoMark0 L_PAREN ForInit STMT_TERMINATOR FoMark1 Expression STMT_TERMINATOR FoMark6 ForUpdate R_PAREN FoMark2 StatementNoShortIf FoMark3','ForStatementNoShortIf',14,'p_ForStatementNoShortIf','LALR_parser.py',1073),
  ('ForStatementNoShortIf -> FOR FoMark0 L_PAREN STMT_TERMINATOR FoMark1 Expression STMT_TERMINATOR FoMark6 ForUpdate R_PAREN FoMark2 StatementNoShortIf FoMark3','ForStatementNoShortIf',13,'p_ForStatementNoShortIf','LALR_parser.py',1074),
  ('ForStatementNoShortIf -> FOR FoMark0 L_PAREN ForInit STMT_TERMINATOR FoMark1 STMT_TERMINATOR FoMark6 ForUpdate R_PAREN FoMark2 StatementNoShortIf FoMark3','ForStatementNoShortIf',13,'p_ForStatementNoShortIf','LALR_parser.py',1075),
  ('ForStatementNoShortIf -> FOR FoMark0 L_PAREN ForInit STMT_TERMINATOR FoMark1 Expression STMT_TERMINATOR R_PAREN FoMark4 StatementNoShortIf FoMark5','ForStatementNoShortIf',12,'p_ForStatementNoShortIf','LALR_parser.py',1076),
  ('ForStatementNoShortIf -> FOR FoMark0 L_PAREN ForInit STMT_TERMINATOR FoMark1 STMT_TERMINATOR R_PAREN FoMark4 StatementNoShortIf FoMark5','ForStatementNoShortIf',11,'p_ForStatementNoShortIf','LALR_parser.py',1077),
  ('ForStatementNoShortIf -> FOR FoMark0 L_PAREN STMT_TERMINATOR FoMark1 Expression STMT_TERMINATOR R_PAREN FoMark4 StatementNoShortIf FoMark5','ForStatementNoShortIf',11,'p_ForStatementNoShortIf','LALR_parser.py',1078),
  ('ForStatementNoShortIf -> FOR FoMark0 L_PAREN STMT_TERMINATOR FoMark1 STMT_TERMINATOR FoMark6 ForUpdate R_PAREN FoMark2 StatementNoShortIf FoMark3','ForStatementNoShortIf',12,'p_ForStatementNoShortIf','LALR_parser.py',1079),
  ('ForStatementNoShortIf -> FOR FoMark0 L_PAREN STMT_TERMINATOR FoMark1 STMT_TERMINATOR R_PAREN FoMark4 StatementNoShortIf FoMark5','ForStatementNoShortIf',10,'p_ForStatementNoShortIf','LALR_parser.py',1080),
  ('FoMark0 -> <empty>','FoMark0',0,'p_FoMark0','LALR_parser.py',1085),
  ('FoMark1 -> <empty>','FoMark1',0,'p_FoMark1','LALR_parser.py',1090),
  ('FoMark2 -> <empty>','FoMark2',0,'p_FoMark2','LALR_parser.py',1101),
  ('FoMark6 -> <empty>','FoMark6',0,'p_FoMark6','LALR_parser.py',1109),
  ('FoMark4 -> <empty>','FoMark4',0,'p_FoMark4','LALR_parser.py',1114),
  ('FoMark3 -> <empty>','FoMark3',0,'p_FoMark3','LALR_parser.py',1120),
  ('FoMark5 -> <empty>','FoMark5',0,'p_FoMark5','LALR_parser.py',1130),
  ('ForInit -> StatementExpressionList','ForInit',1,'p_ForInit','LALR_parser.py',1139),
  ('ForInit -> LocalVariableDeclaration','ForInit',1,'p_ForInit','LALR_parser.py',1140),
  ('ForUpdate -> StatementExpressionList','ForUpdate',1,'p_ForUpdate','LALR_parser.py',1146),
  ('StatementExpressionList -> StatementExpression','StatementExpressionList',1,'p_StatementExpressionList','LALR_parser.py',1152),
  ('StatementExpressionList -> StatementExpressionList COMMA StatementExpression','StatementExpressionList',3,'p_StatementExpressionList','LALR_parser.py',1153),
  ('BreakStatement -> BREAK Identifier STMT_TERMINATOR','BreakStatement',3,'p_BreakStatement','LALR_parser.py',1159),
  ('BreakStatement -> BREAK STMT_TERMINATOR','BreakStatement',2,'p_BreakStatement','LALR_parser.py',1160),
  ('ContinueStatement -> CONTINUE Identifier STMT_TERMINATOR','ContinueStatement',3,'p_ContinueStatement','LALR_parser.py',1168),
  ('ContinueStatement -> CONTINUE STMT_TERMINATOR','ContinueStatement',2,'p_ContinueStatement','LALR_parser.py',1169),
  ('ReturnStatement -> RETURN Expression STMT_TERMINATOR','ReturnStatement',3,'p_ReturnStatement','LALR_parser.py',1177),
  ('ReturnStatement -> RETURN STMT_TERMINATOR','ReturnStatement',2,'p_ReturnStatement','LALR_parser.py',1178),
  ('ThrowStatement -> THROW Expression STMT_TERMINATOR','ThrowStatement',3,'p_ThrowStatement','LALR_parser.py',1199),
  ('TryStatement -> TRY Block Catches','TryStatement',3,'p_TryStatement','LALR_parser.py',1205),
  ('TryStatement -> TRY Block Catches Finally','TryStatement',4,'p_TryStatement','LALR_parser.py',1206),
  ('TryStatement -> TRY Block Finally','TryStatement',3,'p_TryStatement','LALR_parser.py',1207),
  ('Catches -> CatchClause','Catches',1,'p_Catches','LALR_parser.py',1213),
  ('Catches -> Catches CatchClause','Catches',2,'p_Catches','LALR_parser.py',1214),
  ('CatchClause -> CATCH L_PAREN FormalParameter R_PAREN Block','CatchClause',5,'p_CatchClause','LALR_parser.py',1220),
  ('Finally -> FINALLY Block','Finally',2,'p_Finally','LALR_parser.py',1226),
  ('Primary -> PrimaryNoNewArray','Primary',1,'p_Primary','LALR_parser.py',1233),
  ('Primary -> ArrayCreationExpression','Primary',1,'p_Primary','LALR_parser.py',1234),
  ('PrimaryNoNewArray -> Literal','PrimaryNoNewArray',1,'p_PrimaryNoNewArray','LALR_parser.py',1241),
  ('PrimaryNoNewArray -> THIS','PrimaryNoNewArray',1,'p_PrimaryNoNewArray','LALR_parser.py',1242),
  ('PrimaryNoNewArray -> L_PAREN Expression R_PAREN','PrimaryNoNewArray',3,'p_PrimaryNoNewArray','LALR_parser.py',1243),
  ('PrimaryNoNewArray -> ClassInstanceCreationExpression','PrimaryNoNewArray',1,'p_PrimaryNoNewArray','LALR_parser.py',1244),
  ('PrimaryNoNewArray -> FieldAccess','PrimaryNoNewArray',1,'p_PrimaryNoNewArray','LALR_parser.py',1245),
  ('PrimaryNoNewArray -> MethodInvocation','PrimaryNoNewArray',1,'p_PrimaryNoNewArray','LALR_parser.py',1246),
  ('PrimaryNoNewArray -> ArrayAccess','PrimaryNoNewArray',1,'p_PrimaryNoNewArray','LALR_parser.py',1247),
  ('ClassInstanceCreationExpression -> NEW ClassType L_PAREN R_PAREN','ClassInstanceCreationExpression',4,'p_ClassInstanceCreationExpression','LALR_parser.py',1257),
  ('ClassInstanceCreationExpression -> NEW ClassType L_PAREN ArgumentList R_PAREN','ClassInstanceCreationExpression',5,'p_ClassInstanceCreationExpression','LALR_parser.py',1258),
  ('ArgumentList -> Expression','ArgumentList',1,'p_ArgumentList','LALR_parser.py',1267),
  ('ArgumentList -> ArgumentList COMMA Expression','ArgumentList',3,'p_ArgumentList','LALR_parser.py',1268),
  ('ArrayCreationExpression -> NEW PrimitiveType DimExprs','ArrayCreationExpression',3,'p_ArrayCreationExpression','LALR_parser.py',1278),
  ('ArrayCreationExpression -> NEW ClassType DimExprs','ArrayCreationExpression',3,'p_ArrayCreationExpression','LALR_parser.py',1279),
  ('DimExprs -> DimExpr','DimExprs',1,'p_DimExprs','LALR_parser.py',1291),
  ('DimExprs -> DimExprs DimExpr','DimExprs',2,'p_DimExprs','LALR_parser.py',1292),
  ('DimExpr -> L_SQBR Expression R_SQBR','DimExpr',3,'p_DimExpr','LALR_parser.py',1302),
  ('Dims -> L_SQBR R_SQBR','Dims',2,'p_Dims','LALR_parser.py',1312),
  ('Dims -> Dims L_SQBR R_SQBR','Dims',3,'p_Dims','LALR_parser.py',1313),
  ('FieldAccess -> Primary DOT Identifier','FieldAccess',3,'p_FieldAccess','LALR_parser.py',1323),
  ('FieldAccess -> SUPER DOT Identifier','FieldAccess',3,'p_FieldAccess','LALR_parser.py',1324),
  ('MethodInvocation -> Name L_PAREN ArgumentList R_PAREN','MethodInvocation',4,'p_MethodInvocation','LALR_parser.py',1351),
  ('MethodInvocation -> Name L_PAREN R_PAREN','MethodInvocation',3,'p_MethodInvocation','LALR_parser.py',1352),
  ('MethodInvocation -> Primary DOT Identifier L_PAREN ArgumentList R_PAREN','MethodInvocation',6,'p_MethodInvocation','LALR_parser.py',1353),
  ('MethodInvocation -> Primary DOT Identifier L_PAREN R_PAREN','MethodInvocation',5,'p_MethodInvocation','LALR_parser.py',1354),
  ('MethodInvocation -> SUPER DOT Identifier L_PAREN ArgumentList R_PAREN','MethodInvocation',6,'p_MethodInvocation','LALR_parser.py',1355),
  ('MethodInvocation -> SUPER DOT Identifier L_PAREN R_PAREN','MethodInvocation',5,'p_MethodInvocation','LALR_parser.py',1356),
  ('ArrayAccess -> Name DimExprs','ArrayAccess',2,'p_ArrayAccess','LALR_parser.py',1405),
  ('PostfixExpression -> Primary','PostfixExpression',1,'p_PostfixExpression','LALR_parser.py',1441),
  ('PostfixExpression -> Name','PostfixExpression',1,'p_PostfixExpression','LALR_parser.py',1442),
  ('PostfixExpression -> PostIncrementExpression','PostfixExpression',1,'p_PostfixExpression','LALR_parser.py',1443),
  ('PostfixExpression -> PostDecrementExpression','PostfixExpression',1,'p_PostfixExpression','LALR_parser.py',1444),
  ('PostIncrementExpression -> PostfixExpression INCREMENT','PostIncrementExpression',2,'p_PostIncrementExpression','LALR_parser.py',1483),
  ('PostDecrementExpression -> PostfixExpression DECREMENT','PostDecrementExpression',2,'p_PostDecrementExpression','LALR_parser.py',1497),
  ('UnaryExpression -> PreIncrementExpression','UnaryExpression',1,'p_UnaryExpression','LALR_parser.py',1511),
  ('UnaryExpression -> PreDecrementExpression','UnaryExpression',1,'p_UnaryExpression','LALR_parser.py',1512),
  ('UnaryExpression -> PLUS UnaryExpression','UnaryExpression',2,'p_UnaryExpression','LALR_parser.py',1513),
  ('UnaryExpression -> MINUS UnaryExpression','UnaryExpression',2,'p_UnaryExpression','LALR_parser.py',1514),
  ('UnaryExpression -> UnaryExpressionNotPlusMinus','UnaryExpression',1,'p_UnaryExpression','LALR_parser.py',1515),
  ('PreIncrementExpression -> INCREMENT UnaryExpression','PreIncrementExpression',2,'p_PreIncrementExpression','LALR_parser.py',1527),
  ('PreDecrementExpression -> DECREMENT UnaryExpression','PreDecrementExpression',2,'p_PreDecrementExpression','LALR_parser.py',1543),
  ('UnaryExpressionNotPlusMinus -> PostfixExpression','UnaryExpressionNotPlusMinus',1,'p_UnaryExpressionNotPlusMinus','LALR_parser.py',1557),
  ('UnaryExpressionNotPlusMinus -> BITWISE_NOT UnaryExpression','UnaryExpressionNotPlusMinus',2,'p_UnaryExpressionNotPlusMinus','LALR_parser.py',1558),
  ('UnaryExpressionNotPlusMinus -> LOGICAL_NOT UnaryExpression','UnaryExpressionNotPlusMinus',2,'p_UnaryExpressionNotPlusMinus','LALR_parser.py',1559),
  ('UnaryExpressionNotPlusMinus -> CastExpression','UnaryExpressionNotPlusMinus',1,'p_UnaryExpressionNotPlusMinus','LALR_parser.py',1560),
  ('CastExpression -> L_PAREN PrimitiveType Dims R_PAREN UnaryExpression','CastExpression',5,'p_CastExpression','LALR_parser.py',1573),
  ('CastExpression -> L_PAREN PrimitiveType R_PAREN UnaryExpression','CastExpression',4,'p_CastExpression','LALR_parser.py',1574),
  ('CastExpression -> L_PAREN Expression R_PAREN UnaryExpressionNotPlusMinus','CastExpression',4,'p_CastExpression','LALR_parser.py',1575),
  ('CastExpression -> L_PAREN Name Dims R_PAREN UnaryExpressionNotPlusMinus','CastExpression',5,'p_CastExpression','LALR_parser.py',1576),
  ('MultiplicativeExpression -> UnaryExpression','MultiplicativeExpression',1,'p_MultiplicativeExpression','LALR_parser.py',1583),
  ('MultiplicativeExpression -> MultiplicativeExpression MULT UnaryExpression','MultiplicativeExpression',3,'p_MultiplicativeExpression','LALR_parser.py',1584),
  ('MultiplicativeExpression -> MultiplicativeExpression DIVIDE UnaryExpression','MultiplicativeExpression',3,'p_MultiplicativeExpression','LALR_parser.py',1585),
  ('MultiplicativeExpression -> MultiplicativeExpression MODULO UnaryExpression','MultiplicativeExpression',3,'p_MultiplicativeExpression','LALR_parser.py',1586),
  ('AdditiveExpression -> MultiplicativeExpression','AdditiveExpression',1,'p_AdditiveExpression','LALR_parser.py',1633),
  ('AdditiveExpression -> AdditiveExpression PLUS MultiplicativeExpression','AdditiveExpression',3,'p_AdditiveExpression','LALR_parser.py',1634),
  ('AdditiveExpression -> AdditiveExpression MINUS MultiplicativeExpression','AdditiveExpression',3,'p_AdditiveExpression','LALR_parser.py',1635),
  ('ShiftExpression -> AdditiveExpression','ShiftExpression',1,'p_ShiftExpression','LALR_parser.py',1678),
  ('ShiftExpression -> ShiftExpression L_SHIFT AdditiveExpression','ShiftExpression',3,'p_ShiftExpression','LALR_parser.py',1679),
  ('ShiftExpression -> ShiftExpression R_SHIFT AdditiveExpression','ShiftExpression',3,'p_ShiftExpression','LALR_parser.py',1680),
  ('RelationalExpression -> ShiftExpression','RelationalExpression',1,'p_RelationalExpression','LALR_parser.py',1715),
  ('RelationalExpression -> RelationalExpression LST ShiftExpression','RelationalExpression',3,'p_RelationalExpression','LALR_parser.py',1716),
  ('RelationalExpression -> RelationalExpression GRT ShiftExpression','RelationalExpression',3,'p_RelationalExpression','LALR_parser.py',1717),
  ('RelationalExpression -> RelationalExpression LEQ ShiftExpression','RelationalExpression',3,'p_RelationalExpression','LALR_parser.py',1718),
  ('RelationalExpression -> RelationalExpression GEQ ShiftExpression','RelationalExpression',3,'p_RelationalExpression','LALR_parser.py',1719),
  ('RelationalExpression -> RelationalExpression INSTANCEOF ReferenceType','RelationalExpression',3,'p_RelationalExpression','LALR_parser.py',1720),
  ('EqualityExpression -> RelationalExpression','EqualityExpression',1,'p_EqualityExpression','LALR_parser.py',1791),
  ('EqualityExpression -> EqualityExpression EQUALS RelationalExpression','EqualityExpression',3,'p_EqualityExpression','LALR_parser.py',1792),
  ('EqualityExpression -> EqualityExpression NOT_EQUAL RelationalExpression','EqualityExpression',3,'p_EqualityExpression','LALR_parser.py',1793),
  ('AndExpression -> EqualityExpression','AndExpression',1,'p_AndExpression','LALR_parser.py',1844),
  ('AndExpression -> AndExpression BITWISE_AND EqualityExpression','AndExpression',3,'p_AndExpression','LALR_parser.py',1845),
  ('ExclusiveOrExpression -> AndExpression','ExclusiveOrExpression',1,'p_ExclusiveOrExpression','LALR_parser.py',1877),
  ('ExclusiveOrExpression -> ExclusiveOrExpression BITWISE_XOR AndExpression','ExclusiveOrExpression',3,'p_ExclusiveOrExpression','LALR_parser.py',1878),
  ('InclusiveOrExpression -> ExclusiveOrExpression','InclusiveOrExpression',1,'p_InclusiveOrExpression','LALR_parser.py',1910),
  ('InclusiveOrExpression -> InclusiveOrExpression BITWISE_OR ExclusiveOrExpression','InclusiveOrExpression',3,'p_InclusiveOrExpression','LALR_parser.py',1911),
  ('ConditionalAndExpression -> InclusiveOrExpression','ConditionalAndExpression',1,'p_ConditionalAndExpression','LALR_parser.py',1943),
  ('ConditionalAndExpression -> ConditionalAndExpression LOGICAL_AND InclusiveOrExpression','ConditionalAndExpression',3,'p_ConditionalAndExpression','LALR_parser.py',1944),
  ('ConditionalOrExpression -> ConditionalAndExpression','ConditionalOrExpression',1,'p_ConditionalOrExpression','LALR_parser.py',1980),
  ('ConditionalOrExpression -> ConditionalOrExpression LOGICAL_OR ConditionalAndExpression','ConditionalOrExpression',3,'p_ConditionalOrExpression','LALR_parser.py',1981),
  ('ConditionalExpression -> ConditionalOrExpression','ConditionalExpression',1,'p_ConditionalExpression','LALR_parser.py',2017),
  ('ConditionalExpression -> ConditionalOrExpression QUESTION Expression COLON ConditionalExpression','ConditionalExpression',5,'p_ConditionalExpression','LALR_parser.py',2018),
  ('AssignmentExpression -> ConditionalExpression','AssignmentExpression',1,'p_AssignmentExpression','LALR_parser.py',2026),
  ('AssignmentExpression -> Assignment','AssignmentExpression',1,'p_AssignmentExpression','LALR_parser.py',2027),
  ('AssignmentExpression -> LAMBDA LambdaExpression','AssignmentExpression',2,'p_AssignmentExpression','LALR_parser.py',2028),
  ('Assignment -> LeftHandSide AssignmentOperator AssignmentExpression','Assignment',3,'p_Assignment','LALR_parser.py',2036),
  ('LeftHandSide -> Name','LeftHandSide',1,'p_LeftHandSide','LALR_parser.py',2059),
  ('LeftHandSide -> FieldAccess','LeftHandSide',1,'p_LeftHandSide','LALR_parser.py',2060),
  ('LeftHandSide -> ArrayAccess','LeftHandSide',1,'p_LeftHandSide','LALR_parser.py',2061),
  ('AssignmentOperator -> ASSIGN','AssignmentOperator',1,'p_AssignmentOperator','LALR_parser.py',2068),
  ('AssignmentOperator -> MULTEQ','AssignmentOperator',1,'p_AssignmentOperator','LALR_parser.py',2069),
  ('AssignmentOperator -> DIVEQ','AssignmentOperator',1,'p_AssignmentOperator','LALR_parser.py',2070),
  ('AssignmentOperator -> MODEQ','AssignmentOperator',1,'p_AssignmentOperator','LALR_parser.py',2071),
  ('AssignmentOperator -> PLUSEQ','AssignmentOperator',1,'p_AssignmentOperator','LALR_parser.py',2072),
  ('AssignmentOperator -> MINUSEQ','AssignmentOperator',1,'p_AssignmentOperator','LALR_parser.py',2073),
  ('AssignmentOperator -> LSHIFTEQ','AssignmentOperator',1,'p_AssignmentOperator','LALR_parser.py',2074),
  ('AssignmentOperator -> RSHIFTEQ','AssignmentOperator',1,'p_AssignmentOperator','LALR_parser.py',2075),
  ('Expression -> AssignmentExpression','Expression',1,'p_Expression','LALR_parser.py',2084),
  ('LambdaExpression -> L_PAREN FormalParameterList R_PAREN LAMBDA_TOKEN Block','LambdaExpression',5,'p_LambdaExpression','LALR_parser.py',2091),
  ('LambdaExpression -> L_PAREN R_PAREN LAMBDA_TOKEN Block','LambdaExpression',4,'p_LambdaExpression','LALR_parser.py',2092),
  ('ConstantExpression -> Expression','ConstantExpression',1,'p_ConstantExpression','LALR_parser.py',2098),
]
