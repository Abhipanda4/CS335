
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASSIGN BITWISE_AND BITWISE_NOT BITWISE_OR BITWISE_XOR BLOCK_CLOSER BLOCK_COMMENT BLOCK_OPENER BOOLEAN BREAK BYTE CASE CATCH CHAR CHAR_CONSTANT CLASS COLON COMMA CONST CONTINUE DECREMENT DEFAULT DIVEQ DIVIDE DO DOT DOUBLE ELSE EQUALS EXTENDS FINAL FINALLY FLOAT FLOAT_CONSTANT FOR GEQ GRT IDENTIFIER IF IMPORT INCREMENT INLINE_COMMENT INSTANCEOF INT INT_CONSTANT LAMBDA LAMBDA_TOKEN LEQ LOGICAL_AND LOGICAL_NOT LOGICAL_OR LONG LSHIFTEQ LST L_PAREN L_SHIFT L_SQBR MINUS MINUSEQ MODEQ MODULO MULT MULTEQ NEW NOT_EQUAL NULL PACKAGE PLUS PLUSEQ QUESTION RETURN RSHIFTEQ R_PAREN R_SHIFT R_SQBR SHORT STATIC STMT_TERMINATOR STR_CONSTANT SUPER SWITCH THIS THROW THROWS TRY VOID WHILEGoal : CompilationUnitIdentifier : IDENTIFIER Literal : IntegerConst\n    | FloatConst\n    | CharConst\n    | StringConst\n    | NullConst\n    \n    IntegerConst : INT_CONSTANT\n    \n    FloatConst : FLOAT_CONSTANT\n    \n    CharConst : CHAR_CONSTANT\n    \n    StringConst : STR_CONSTANT\n    \n    NullConst : NULL\n     Type : PrimitiveType\n    | ReferenceType\n     PrimitiveType : NumericType\n    | BOOLEAN\n     NumericType : IntegralType\n    | FloatingPointType\n     IntegralType : BYTE\n    | SHORT\n    | INT\n    | LONG\n    | CHAR\n     FloatingPointType : FLOAT\n    | DOUBLE\n     ReferenceType : ArrayType\n    | ClassType\n    \n    ClassType : Name\n     ArrayType : PrimitiveType Dims\n    | Name Dims\n     Name : SimpleName\n    | QualifiedName SimpleName : Identifier QualifiedName : Name DOT Identifier\n    CompilationUnit : PackageDeclaration ImportDeclarations TypeDeclarations\n    | PackageDeclaration ImportDeclarations\n    | PackageDeclaration TypeDeclarations\n    | ImportDeclarations TypeDeclarations\n    | PackageDeclaration\n    | ImportDeclarations\n    | TypeDeclarations\n    |\n    \n    ImportDeclarations : ImportDeclaration\n    | ImportDeclarations ImportDeclaration\n    \n    TypeDeclarations : TypeDeclaration\n    | TypeDeclarations TypeDeclaration\n    \n    PackageDeclaration : PACKAGE Name STMT_TERMINATOR\n    \n    ImportDeclaration : SingleTypeImportDeclaration\n    | TypeImportOnDemandDeclaration\n    \n    SingleTypeImportDeclaration : IMPORT Name STMT_TERMINATOR\n    \n    TypeImportOnDemandDeclaration : IMPORT Name DOT MULT STMT_TERMINATOR\n    \n    TypeDeclaration : ClassDeclaration\n    | STMT_TERMINATOR\n    \n    Modifiers : Modifier\n    | Modifiers Modifier\n    \n    Modifier : STATIC\n    | FINAL\n    \n    ClassDeclaration : CLASS Identifier Inherit ClassBody \n    | CLASS Identifier ClassBody\n    \n    Inherit : EXTENDS ClassType\n    \n    ClassBody : BLOCK_OPENER BLOCK_CLOSER\n    | BLOCK_OPENER ClassBodyDeclarations BLOCK_CLOSER\n    \n    ClassBodyDeclarations : ClassBodyDeclaration\n    | ClassBodyDeclarations ClassBodyDeclaration\n    \n    ClassBodyDeclaration : ClassMemberDeclaration FieldMark\n    | ConstructorDeclaration\n    | StaticInitializer\n    \n    ClassMemberDeclaration : FieldDeclaration\n    | MethodDeclaration\n    \n    FieldMark :\n    \n    FieldDeclaration : Modifiers Type VariableDeclaratorId STMT_TERMINATOR\n    | Type VariableDeclaratorId STMT_TERMINATOR\n    \n    VariableDeclarators : VariableDeclarator\n    | VariableDeclarators COMMA VariableDeclarator\n    \n    VariableDeclarator : VariableDeclaratorId\n    | VariableDeclaratorId ASSIGN VariableInitializer\n    \n    VariableDeclaratorId : Identifier\n    \n    VariableInitializer : Expression\n    | ArrayInitializer\n    \n    MethodDeclaration : MethodHeader MethodDeclMark2 MethodBody\n    \n    MethodDeclMark2 :\n    \n    MethodHeader : Modifiers Type MethodDeclarator Throws\n    | Modifiers Type MethodDeclarator\n    | Type MethodDeclarator Throws\n    | Type MethodDeclarator\n    | Modifiers VOID MethodDeclarator Throws\n    | Modifiers VOID MethodDeclarator\n    | VOID MethodDeclarator Throws\n    | VOID MethodDeclarator\n    \n    MethodDeclarator : Identifier L_PAREN MethodDeclMark1 R_PAREN\n    | Identifier L_PAREN MethodDeclMark1 FormalParameterList R_PAREN\n    \n    MethodDeclMark1 :\n    \n    FormalParameterList : FormalParameter\n    | FormalParameterList COMMA FormalParameter\n    \n    FormalParameter : Type VariableDeclaratorId\n    \n    Throws : THROWS ClassTypeList\n    \n    ClassTypeList : ClassType\n    | ClassTypeList COMMA ClassType\n    \n    MethodBody : Block\n    | STMT_TERMINATOR\n    \n    StaticInitializer : STATIC Block\n    \n    ConstructorDeclaration : Modifiers ConstructorDeclarator Throws ConstructorBody\n    | Modifiers ConstructorDeclarator ConstructorBody\n    | ConstructorDeclarator Throws ConstructorBody\n    | ConstructorDeclarator ConstructorBody\n    \n    ConstructorDeclarator : SimpleName L_PAREN FormalParameterList R_PAREN\n    | SimpleName L_PAREN R_PAREN\n    \n    ConstructorBody : BLOCK_OPENER ExplicitConstructorInvocation BlockStatements BLOCK_CLOSER\n    | BLOCK_OPENER ExplicitConstructorInvocation BLOCK_CLOSER\n    | BLOCK_OPENER BlockStatements BLOCK_CLOSER\n    | BLOCK_OPENER BLOCK_CLOSER\n    \n    ExplicitConstructorInvocation : THIS L_PAREN ArgumentList R_PAREN STMT_TERMINATOR\n    | THIS L_PAREN R_PAREN STMT_TERMINATOR\n    | SUPER L_PAREN ArgumentList R_PAREN STMT_TERMINATOR\n    | SUPER L_PAREN R_PAREN STMT_TERMINATOR\n    \n    ArrayInitializer : BLOCK_OPENER VariableInitializers BLOCK_CLOSER\n    | BLOCK_OPENER BLOCK_CLOSER\n    \n    VariableInitializers : VariableInitializer\n    | VariableInitializers COMMA VariableInitializer\n    \n    Block : BLOCK_OPENER BLOCK_CLOSER\n    | BLOCK_OPENER BlockStatements BLOCK_CLOSER\n    \n    BlockStatements : BlockStatement\n    | BlockStatements BlockStatement\n    \n    BlockStatement : LocalVariableDeclarationStatement\n    | Statement\n    \n    LocalVariableDeclarationStatement : LocalVariableDeclaration STMT_TERMINATOR\n    \n    LocalVariableDeclaration : Type VariableDeclarators\n    \n    Statement : StatementWithoutTrailingSubstatement\n    | LabeledStatement\n    | IfThenStatement\n    | IfThenElseStatement\n    | WhileStatement\n    | ForStatement\n    \n    StatementNoShortIf : StatementWithoutTrailingSubstatement\n    | LabeledStatementNoShortIf\n    | IfThenElseStatementNoShortIf\n    | WhileStatementNoShortIf\n    | ForStatementNoShortIf\n    \n    StatementWithoutTrailingSubstatement : Block\n    | EmptyStatement\n    | ExpressionStatement\n    | SwitchStatement\n    | DoStatement\n    | BreakStatement\n    | ContinueStatement\n    | ReturnStatement\n    | ThrowStatement\n    | TryStatement\n    \n    EmptyStatement : STMT_TERMINATOR\n    \n    LabeledStatement : Identifier COLON Statement\n    \n    LabeledStatementNoShortIf : Identifier COLON StatementNoShortIf\n    \n    ExpressionStatement : StatementExpression STMT_TERMINATOR\n    \n    StatementExpression : Assignment\n    | PreIncrementExpression\n    | PreDecrementExpression\n    | PostIncrementExpression\n    | PostDecrementExpression\n    | MethodInvocation\n    | ClassInstanceCreationExpression\n    \n    IfThenStatement : IF L_PAREN Expression R_PAREN IfMark1 Statement IfMark2\n    \n    IfThenElseStatement : IF L_PAREN Expression R_PAREN IfMark1 StatementNoShortIf IfMark5 ELSE IfMark3 Statement IfMark4\n    \n    IfThenElseStatementNoShortIf : IF L_PAREN Expression R_PAREN IfMark1 StatementNoShortIf IfMark5 ELSE IfMark3 StatementNoShortIf IfMark4\n     IfMark1 :  IfMark2 :  IfMark3 :  IfMark4 :  IfMark5 : \n    SwitchStatement : SWITCH L_PAREN Expression R_PAREN SwMark2 SwitchBlock SwMark3\n     SwMark2 :  SwMark3 : \n    SwitchBlock : BLOCK_OPENER BLOCK_CLOSER\n    | BLOCK_OPENER SwitchBlockStatementGroups BLOCK_CLOSER\n    \n    SwitchBlockStatementGroups : SwitchBlockStatementGroup\n    | SwitchBlockStatementGroups SwitchBlockStatementGroup\n    \n    SwitchBlockStatementGroup : SwitchLabel BlockStatements\n    \n    SwitchLabel : SwMark1 CASE ConstantExpression COLON\n    | SwMark1 DEFAULT COLON\n     SwMark1 : \n    WhileStatement : WHILE WhMark1 L_PAREN Expression R_PAREN WhMark2 Statement WhMark3\n    \n    WhileStatementNoShortIf : WHILE WhMark1 L_PAREN Expression R_PAREN WhMark2 StatementNoShortIf WhMark3\n    WhMark1 : WhMark2 : WhMark3 : \n    DoStatement : DO doWhMark1 Statement WHILE doWhMark2 L_PAREN Expression R_PAREN doWhMark3 STMT_TERMINATOR\n    doWhMark1 : doWhMark3 : doWhMark2 : \n    ForStatement : FOR FoMark0 L_PAREN ForInit STMT_TERMINATOR FoMark1 Expression STMT_TERMINATOR ForUpdate R_PAREN FoMark2 Statement FoMark3\n    | FOR FoMark0 L_PAREN STMT_TERMINATOR FoMark1 Expression STMT_TERMINATOR ForUpdate R_PAREN FoMark2 Statement FoMark3\n    | FOR FoMark0 L_PAREN ForInit STMT_TERMINATOR FoMark1 STMT_TERMINATOR ForUpdate R_PAREN FoMark2 Statement FoMark3\n    | FOR FoMark0 L_PAREN ForInit STMT_TERMINATOR FoMark1 Expression STMT_TERMINATOR R_PAREN FoMark4 Statement FoMark5\n    | FOR FoMark0 L_PAREN ForInit STMT_TERMINATOR FoMark1 STMT_TERMINATOR R_PAREN FoMark4 Statement FoMark5\n    | FOR FoMark0 L_PAREN STMT_TERMINATOR FoMark1 Expression STMT_TERMINATOR R_PAREN FoMark4 Statement FoMark5\n    | FOR FoMark0 L_PAREN STMT_TERMINATOR FoMark1 STMT_TERMINATOR ForUpdate R_PAREN FoMark2 Statement FoMark3\n    | FOR FoMark0 L_PAREN STMT_TERMINATOR FoMark1 STMT_TERMINATOR R_PAREN FoMark4 Statement FoMark5\n    \n    ForStatementNoShortIf : FOR FoMark0 L_PAREN ForInit STMT_TERMINATOR FoMark1 Expression STMT_TERMINATOR ForUpdate R_PAREN FoMark2 StatementNoShortIf FoMark3\n    | FOR FoMark0 L_PAREN STMT_TERMINATOR FoMark1 Expression STMT_TERMINATOR ForUpdate R_PAREN FoMark2 StatementNoShortIf FoMark3\n    | FOR FoMark0 L_PAREN ForInit STMT_TERMINATOR FoMark1 STMT_TERMINATOR ForUpdate R_PAREN FoMark2 StatementNoShortIf FoMark3\n    | FOR FoMark0 L_PAREN ForInit STMT_TERMINATOR FoMark1 Expression STMT_TERMINATOR R_PAREN FoMark4 StatementNoShortIf FoMark5\n    | FOR FoMark0 L_PAREN ForInit STMT_TERMINATOR FoMark1 STMT_TERMINATOR R_PAREN FoMark4 StatementNoShortIf FoMark5\n    | FOR FoMark0 L_PAREN STMT_TERMINATOR FoMark1 Expression STMT_TERMINATOR R_PAREN FoMark4 StatementNoShortIf FoMark5\n    | FOR FoMark0 L_PAREN STMT_TERMINATOR FoMark1 STMT_TERMINATOR ForUpdate R_PAREN FoMark2 StatementNoShortIf FoMark3\n    | FOR FoMark0 L_PAREN STMT_TERMINATOR FoMark1 STMT_TERMINATOR R_PAREN FoMark4 StatementNoShortIf FoMark5\n    FoMark0 : FoMark1 : FoMark2 : FoMark4 : FoMark3 : FoMark5 : \n    ForInit : StatementExpressionList\n    | LocalVariableDeclaration\n    \n    ForUpdate : StatementExpressionList\n    \n    StatementExpressionList : StatementExpression\n    | StatementExpressionList COMMA StatementExpression\n    \n    BreakStatement : BREAK Identifier STMT_TERMINATOR\n    | BREAK STMT_TERMINATOR\n    \n    ContinueStatement : CONTINUE Identifier STMT_TERMINATOR\n    | CONTINUE STMT_TERMINATOR\n    \n    ReturnStatement : RETURN Expression STMT_TERMINATOR\n    | RETURN STMT_TERMINATOR\n    \n    ThrowStatement : THROW Expression STMT_TERMINATOR\n    \n    TryStatement : TRY Block Catches\n    | TRY Block Catches Finally\n    | TRY Block Finally\n    \n    Catches : CatchClause\n    | Catches CatchClause\n    \n    CatchClause : CATCH L_PAREN FormalParameter R_PAREN Block\n    \n    Finally : FINALLY Block\n    \n    Primary : PrimaryNoNewArray\n    | ArrayCreationExpression\n    \n    PrimaryNoNewArray : Literal\n    | THIS\n    | L_PAREN Expression R_PAREN\n    | ClassInstanceCreationExpression\n    | FieldAccess\n    | MethodInvocation\n    | ArrayAccess\n    \n    ClassInstanceCreationExpression : NEW ClassType L_PAREN R_PAREN\n    | NEW ClassType L_PAREN ArgumentList R_PAREN\n    \n    ArgumentList : Expression\n    | ArgumentList COMMA Expression\n    \n    ArrayCreationExpression : NEW PrimitiveType DimExprs\n    | NEW ClassType DimExprs\n    \n    DimExprs : DimExpr\n    | DimExprs DimExpr\n    \n    DimExpr : L_SQBR Expression R_SQBR\n    \n    Dims : L_SQBR R_SQBR\n    | Dims L_SQBR R_SQBR\n    \n    FieldAccess : Primary DOT Identifier\n    | SUPER DOT Identifier\n    \n    MethodInvocation : Name L_PAREN ArgumentList R_PAREN\n    | Name L_PAREN R_PAREN\n    | Primary DOT Identifier L_PAREN ArgumentList R_PAREN\n    | Primary DOT Identifier L_PAREN R_PAREN\n    | SUPER DOT Identifier L_PAREN ArgumentList R_PAREN\n    | SUPER DOT Identifier L_PAREN R_PAREN\n    \n    ArrayAccess : Name DimExprs\n    \n    PostfixExpression : Primary\n    | Name\n    | PostIncrementExpression\n    | PostDecrementExpression\n    \n    PostIncrementExpression : PostfixExpression INCREMENT\n    \n    PostDecrementExpression : PostfixExpression DECREMENT\n    \n    UnaryExpression : PreIncrementExpression\n    | PreDecrementExpression\n    | PLUS UnaryExpression\n    | MINUS UnaryExpression\n    | UnaryExpressionNotPlusMinus\n    \n    PreIncrementExpression : INCREMENT UnaryExpression\n    \n    PreDecrementExpression : DECREMENT UnaryExpression\n    \n    UnaryExpressionNotPlusMinus : PostfixExpression\n    | BITWISE_NOT UnaryExpression\n    | LOGICAL_NOT UnaryExpression\n    | CastExpression\n    \n    CastExpression : L_PAREN PrimitiveType Dims R_PAREN UnaryExpression\n    | L_PAREN PrimitiveType R_PAREN UnaryExpression\n    | L_PAREN Expression R_PAREN UnaryExpressionNotPlusMinus\n    | L_PAREN Name Dims R_PAREN UnaryExpressionNotPlusMinus\n    \n    MultiplicativeExpression : UnaryExpression\n    | MultiplicativeExpression MULT UnaryExpression\n    | MultiplicativeExpression DIVIDE UnaryExpression\n    | MultiplicativeExpression MODULO UnaryExpression\n    \n    AdditiveExpression : MultiplicativeExpression\n    | AdditiveExpression PLUS MultiplicativeExpression\n    | AdditiveExpression MINUS MultiplicativeExpression\n    \n    ShiftExpression : AdditiveExpression\n    | ShiftExpression L_SHIFT AdditiveExpression\n    | ShiftExpression R_SHIFT AdditiveExpression\n    \n    RelationalExpression : ShiftExpression\n    | RelationalExpression LST ShiftExpression\n    | RelationalExpression GRT ShiftExpression\n    | RelationalExpression LEQ ShiftExpression\n    | RelationalExpression GEQ ShiftExpression\n    | RelationalExpression INSTANCEOF ReferenceType\n    \n    EqualityExpression : RelationalExpression\n    | EqualityExpression EQUALS RelationalExpression\n    | EqualityExpression NOT_EQUAL RelationalExpression\n    \n    AndExpression : EqualityExpression\n    | AndExpression BITWISE_AND EqualityExpression\n    \n    ExclusiveOrExpression : AndExpression\n    | ExclusiveOrExpression BITWISE_XOR AndExpression\n    \n    InclusiveOrExpression : ExclusiveOrExpression\n    | InclusiveOrExpression BITWISE_OR ExclusiveOrExpression\n    \n    ConditionalAndExpression : InclusiveOrExpression\n    | ConditionalAndExpression LOGICAL_AND InclusiveOrExpression\n    \n    ConditionalOrExpression : ConditionalAndExpression\n    | ConditionalOrExpression LOGICAL_OR ConditionalAndExpression\n    \n    ConditionalExpression : ConditionalOrExpression\n    | ConditionalOrExpression QUESTION Expression COLON ConditionalExpression\n    \n    AssignmentExpression : ConditionalExpression\n    | Assignment\n    | LAMBDA LambdaExpression\n    \n    Assignment : LeftHandSide AssignmentOperator AssignmentExpression\n    \n    LeftHandSide : Name\n    | FieldAccess\n    | ArrayAccess\n    \n    AssignmentOperator : ASSIGN\n    | MULTEQ\n    | DIVEQ\n    | MODEQ\n    | PLUSEQ\n    | MINUSEQ\n    | LSHIFTEQ\n    | RSHIFTEQ\n    \n    Expression : AssignmentExpression\n    \n    LambdaExpression : L_PAREN FormalParameterList R_PAREN LAMBDA_TOKEN Block\n    | L_PAREN R_PAREN LAMBDA_TOKEN Block\n    \n    ConstantExpression : Expression\n    '
    
_lr_action_items = {'$end':([0,1,2,3,4,5,7,8,9,10,11,12,15,16,17,18,19,27,28,30,33,38,41,74,75,],[-42,0,-1,-39,-40,-41,-53,-43,-45,-48,-49,-52,-36,-37,-38,-44,-46,-35,-47,-50,-59,-58,-61,-51,-62,]),'PACKAGE':([0,],[6,]),'STMT_TERMINATOR':([0,3,4,5,7,8,9,10,11,12,15,16,17,18,19,20,21,22,23,24,25,27,28,30,33,36,37,38,40,41,53,62,63,66,74,75,86,88,89,90,91,92,94,96,98,101,102,103,105,106,107,108,112,114,115,116,117,118,119,120,121,122,123,125,126,127,128,129,130,131,132,133,134,139,141,142,143,144,147,148,149,150,151,152,153,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,179,181,191,192,195,196,198,201,205,206,207,209,210,211,212,213,215,216,217,218,220,221,222,223,224,227,228,229,230,231,234,235,236,239,240,241,242,243,244,248,250,251,252,253,254,255,256,257,260,262,272,273,274,276,277,278,279,280,284,289,290,293,299,325,326,327,328,330,334,338,341,342,343,344,345,346,347,351,352,354,358,359,360,363,365,366,373,374,375,376,377,378,379,380,381,382,383,384,385,386,388,389,390,391,392,393,394,395,396,398,399,400,401,403,405,406,407,408,409,413,414,415,417,418,419,421,423,424,426,428,433,435,437,439,440,441,442,448,449,450,451,453,454,455,456,459,461,469,470,472,473,474,478,479,482,484,487,489,491,494,495,498,501,503,506,507,509,511,512,514,515,517,520,521,522,524,525,526,527,529,530,531,532,533,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,554,555,556,558,559,560,561,562,563,564,565,569,571,573,574,575,576,577,580,582,583,585,586,587,588,589,591,592,594,595,597,599,600,603,608,],[7,7,7,7,-53,-43,-45,-48,-49,-52,7,7,7,-44,-46,28,-31,-32,-33,-2,30,7,-47,-50,-59,-34,74,-58,-28,-61,-81,-26,-27,-28,-51,-62,112,112,180,-85,-77,185,-29,-89,-30,194,-83,-87,-96,-97,112,112,-149,-122,-124,-125,239,-128,-129,-130,-131,-132,-133,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,248,-185,252,254,256,-153,-154,-155,-156,-157,-158,-159,-235,-237,-229,-230,-231,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-120,112,-232,-84,-247,-88,-82,-86,112,-123,-325,-310,-311,-308,-306,-259,-304,-258,-302,-300,-234,-236,-298,-295,-289,-286,-283,-279,-264,-265,-268,-271,-274,-260,-261,-126,-127,-73,-75,-77,112,-152,112,341,-216,342,-218,343,-220,344,-257,-244,-269,-258,-259,-235,-237,-270,-262,-263,-121,-248,-98,365,-312,-266,-267,-272,-273,396,-150,406,-215,-217,-219,-221,-222,-224,-225,-252,-245,-313,-243,-242,-90,424,-113,-233,-307,-305,-303,-249,-250,-301,-299,-296,-297,-290,-291,-292,-293,-294,-287,-288,-284,-285,-280,-281,-282,433,-115,-74,-76,-78,-79,-163,441,-205,-210,-211,-213,-223,-226,-228,-251,-246,-233,-238,-91,-112,-277,-276,-114,-256,-117,112,-182,-205,471,-254,-239,-275,-278,-327,-309,-255,-116,-164,-128,112,488,493,-214,-170,-253,-326,-160,112,-183,510,-207,-168,-171,112,-227,-165,525,-179,-207,-206,112,-207,-172,112,-186,-163,112,541,-205,-206,112,-207,112,-209,-206,112,-177,552,112,-166,-182,-205,557,112,-209,-206,112,-208,-195,112,-209,-176,-184,-161,112,568,572,-208,-192,112,-209,-194,-208,-193,581,-207,-190,-208,-191,-189,-165,-207,-206,112,-207,-188,112,-206,112,-207,112,-206,112,112,-206,112,112,112,]),'IMPORT':([0,3,4,8,10,11,15,18,28,30,74,],[13,13,13,-43,-48,-49,13,-44,-47,-50,-51,]),'CLASS':([0,3,4,5,7,8,9,10,11,12,15,16,17,18,19,27,28,30,33,38,41,74,75,],[14,14,14,14,-53,-43,-45,-48,-49,-52,14,14,14,-44,-46,14,-47,-50,-59,-58,-61,-51,-62,]),'IDENTIFIER':([6,13,14,21,22,23,24,29,31,34,35,36,42,43,44,45,46,47,48,49,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,76,77,79,80,81,82,84,85,86,87,88,93,94,98,100,104,107,108,109,111,112,114,115,116,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,141,142,143,144,145,154,156,157,160,176,177,180,182,183,184,185,189,191,193,194,197,198,199,200,201,202,203,219,225,226,232,233,237,238,239,244,245,248,249,250,252,254,256,259,261,263,264,265,266,267,268,269,270,271,275,281,284,285,287,289,291,300,301,302,303,304,305,306,307,308,309,311,312,313,314,315,316,317,318,319,320,321,322,323,324,332,333,334,337,338,341,342,343,344,345,346,347,357,364,365,366,368,396,397,402,403,406,410,413,414,415,416,419,420,424,427,429,432,433,439,440,441,442,443,457,459,461,469,470,471,474,476,481,482,484,487,488,491,493,494,495,498,501,503,505,506,507,509,510,511,512,514,515,517,518,521,522,525,526,527,529,530,531,532,533,536,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,554,555,556,557,559,560,561,562,563,564,565,568,571,572,573,574,575,576,577,580,581,582,583,585,586,587,588,589,591,592,594,595,597,599,600,603,608,],[24,24,24,-31,-32,-33,-2,24,24,24,24,-34,24,-63,-70,-66,-67,-68,-69,24,-56,24,-54,-31,-13,-14,24,-57,-15,-16,-26,-27,-17,-18,-28,-19,-20,-21,-22,-23,-24,-25,-64,-65,24,-55,24,-56,-105,24,24,-101,24,24,-29,-30,-103,-104,24,24,-111,24,-149,-122,-124,-125,-128,-129,-130,-131,-132,-133,24,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-33,-185,24,24,24,24,-28,24,24,24,-120,24,-72,-92,-80,-99,-100,24,-247,-102,-71,24,24,-109,-110,-123,24,24,24,24,24,24,24,24,24,-126,24,24,-152,24,24,-216,-218,-220,24,24,24,-317,-318,-319,-320,-321,-322,-323,-324,24,24,-121,24,24,-248,-108,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-150,24,24,-215,-217,-219,-221,-222,-224,-225,24,24,-113,24,24,-115,24,24,-163,-205,-28,-223,-226,-228,24,24,24,-112,24,24,24,-114,24,-182,-205,24,24,24,-164,-128,24,24,24,-170,24,24,-160,24,-183,24,-207,24,-168,-171,24,-227,-165,24,24,-179,-207,24,-206,24,-207,-172,24,24,-163,24,-205,-206,24,-207,24,-209,-206,24,-177,24,-166,-182,-205,24,24,-209,-206,24,-208,-195,24,-209,-176,-184,-161,24,24,24,-208,-192,24,-209,-194,-208,-193,24,-207,24,-190,-208,-191,-189,-165,-207,24,-206,24,-207,-188,24,-206,24,-207,24,-206,24,24,-206,24,24,24,]),'DOT':([20,21,22,23,24,25,36,40,55,66,110,113,135,152,153,154,159,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,178,179,211,213,214,217,218,260,262,273,274,276,277,297,298,331,335,351,352,356,358,359,366,376,377,410,417,418,419,421,435,448,449,455,466,478,],[29,-31,-32,-33,-2,31,-34,29,-31,29,-232,238,-33,-236,-234,29,281,-235,-237,-229,-230,-231,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,238,-232,29,306,307,-234,-236,-257,-244,306,29,-235,-237,29,-233,-250,29,-252,-245,-249,-243,-242,-233,-249,-250,29,-251,-246,-233,-238,-256,-254,-239,-255,-33,-253,]),'BLOCK_OPENER':([21,22,23,24,26,32,36,39,40,50,51,53,78,83,86,88,90,92,96,99,102,103,105,106,107,108,112,114,115,116,118,119,120,121,122,123,125,126,127,128,129,130,131,132,133,134,141,146,176,177,181,187,192,195,196,198,201,239,244,248,250,252,254,256,284,286,290,333,334,341,342,343,344,345,346,347,348,360,365,396,402,403,411,413,414,415,423,424,431,433,439,440,444,452,457,459,461,469,474,477,482,484,487,491,494,495,498,501,503,507,509,511,512,514,515,517,521,522,526,527,529,530,531,532,533,536,538,539,540,543,544,545,546,547,548,549,550,551,552,554,555,559,560,561,562,563,564,565,571,573,574,575,576,577,580,582,583,585,586,587,588,589,591,592,594,595,597,599,600,603,608,],[-31,-32,-33,-2,35,35,-34,-60,-28,86,88,-81,86,86,88,88,-85,88,-89,86,-83,-87,-96,-97,88,88,-149,-122,-124,-125,-128,-129,-130,-131,-132,-133,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-185,88,-120,88,-84,-107,-88,-82,-86,88,-123,-126,88,-152,88,-216,-218,-220,-121,-106,-98,402,-150,-215,-217,-219,-221,-222,-224,-225,88,-90,-113,-115,402,-163,-169,-223,-226,-228,-91,-112,88,-114,88,-182,475,88,402,-164,-128,88,-170,88,-160,88,-183,-207,-168,-171,88,-227,-165,-179,-207,-206,88,-207,-172,88,-163,88,-206,88,-207,88,-209,-206,88,-177,88,-166,-182,88,-209,-206,88,-208,-195,88,-209,-176,-184,-161,88,-208,-192,88,-209,-194,-208,-193,-207,-190,-208,-191,-189,-165,-207,-206,88,-207,-188,88,-206,88,-207,88,-206,88,88,-206,88,88,88,]),'COMMA':([21,22,23,24,36,40,62,63,66,94,98,105,106,147,148,149,150,151,152,153,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,179,186,188,191,205,206,207,209,210,211,212,213,215,216,217,218,220,221,222,223,224,227,228,229,230,231,234,235,236,240,241,242,243,260,262,272,273,274,276,277,278,279,280,284,288,289,290,292,294,299,325,326,327,328,329,350,351,352,354,358,359,361,362,366,370,373,374,375,376,377,378,379,380,381,382,383,384,385,386,388,389,390,391,392,393,394,398,399,400,401,407,409,417,418,419,421,422,425,426,428,434,435,436,437,438,447,448,449,450,451,453,454,455,456,473,478,479,480,492,],[-31,-32,-33,-2,-34,-28,-26,-27,-28,-29,-30,197,-97,-153,-154,-155,-156,-157,-158,-159,-235,-237,-229,-230,-231,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-120,-232,287,-93,-247,-325,-310,-311,-308,-306,-259,-304,-258,-302,-300,-234,-236,-298,-295,-289,-286,-283,-279,-264,-265,-268,-271,-274,-260,-261,332,-73,-75,-77,-257,-244,-269,-258,-259,-235,-237,-270,-262,-263,-121,-95,-248,-98,364,-240,-312,-266,-267,-272,-273,364,364,-252,-245,-313,-243,-242,287,-94,-233,287,-307,-305,-303,-249,-250,-301,-299,-296,-297,-290,-291,-292,-293,-294,-287,-288,-284,-285,-280,-281,-282,-74,-76,-78,-79,443,-213,-251,-246,-233,-238,364,-241,-277,-276,364,-256,457,-117,-118,364,-254,-239,-275,-278,-327,-309,-255,-116,-214,-253,-326,-119,443,]),'L_PAREN':([21,22,23,24,36,40,55,86,88,91,97,107,108,110,111,112,113,114,115,116,118,119,120,121,122,123,125,126,127,128,129,130,131,132,133,134,135,136,137,138,140,141,144,145,154,156,157,176,177,198,201,202,203,208,211,225,226,232,233,237,239,244,245,246,247,248,249,250,252,254,256,259,261,263,264,265,266,267,268,269,270,271,274,275,282,284,297,301,302,303,304,305,308,309,310,311,312,313,314,315,316,318,319,320,321,322,323,324,331,333,334,335,337,338,341,342,343,344,345,346,347,349,356,357,364,365,366,368,376,377,396,397,402,403,406,410,412,413,414,415,419,420,424,427,429,432,433,439,440,441,442,443,445,457,458,459,461,466,467,468,469,470,471,474,476,481,482,484,485,486,487,488,491,493,494,495,498,501,503,505,506,507,509,510,511,512,514,515,517,518,521,522,525,526,527,529,530,531,532,533,536,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,554,555,556,557,559,560,561,562,563,564,565,568,571,572,573,574,575,576,577,580,581,582,583,585,586,587,588,589,591,592,594,595,597,599,600,603,608,],[-31,-32,-33,-2,-34,-28,93,111,111,182,182,111,111,202,203,-149,237,-122,-124,-125,-128,-129,-130,-131,-132,-133,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-33,245,-181,-204,249,-185,203,203,259,275,275,-120,111,111,-123,203,203,300,259,275,275,275,275,203,-126,111,203,337,338,-152,203,111,-216,-218,-220,203,203,203,-317,-318,-319,-320,-321,-322,-323,-324,259,203,357,-121,259,203,275,275,203,275,275,275,357,275,275,275,275,275,275,275,275,275,275,275,275,275,397,203,-150,259,203,111,-215,-217,-219,-221,-222,-224,-225,416,420,203,203,-113,275,275,420,397,-115,203,203,-163,-205,259,-187,-223,-226,-228,275,203,-112,275,275,275,-114,111,-182,-205,203,111,476,203,481,-164,-128,-33,-181,-204,111,203,111,-170,203,203,-160,111,505,506,-183,111,-207,111,-168,-171,111,-227,-165,203,111,-179,-207,111,-206,111,-207,-172,111,203,-163,111,-205,-206,111,-207,111,-209,-206,111,-177,111,-166,-182,-205,203,111,-209,-206,111,-208,-195,111,-209,-176,-184,-161,111,203,111,-208,-192,111,-209,-194,-208,-193,111,-207,111,-190,-208,-191,-189,-165,-207,111,-206,111,-207,-188,111,-206,111,-207,111,-206,111,111,-206,111,111,111,]),'L_SQBR':([21,22,23,24,36,40,55,56,60,61,64,65,66,67,68,69,70,71,72,73,94,98,135,154,191,211,260,262,274,282,283,289,296,297,310,335,352,358,359,367,369,387,410,418,466,],[-31,-32,-33,-2,-34,-28,-31,95,-15,-16,-17,-18,95,-19,-20,-21,-22,-23,-24,-25,190,190,-33,261,-247,304,304,-244,304,304,304,-248,95,261,304,304,-245,304,304,190,190,95,261,-246,-33,]),'ASSIGN':([21,22,23,24,36,135,154,155,161,162,211,242,243,260,262,297,331,335,352,356,376,377,410,418,466,],[-31,-32,-33,-2,-34,-33,-314,264,-315,-316,-314,333,-77,-257,-244,-314,-250,-314,-245,-249,-249,-250,-314,-246,-33,]),'MULTEQ':([21,22,23,24,36,135,154,155,161,162,211,260,262,297,331,335,352,356,376,377,410,418,466,],[-31,-32,-33,-2,-34,-33,-314,265,-315,-316,-314,-257,-244,-314,-250,-314,-245,-249,-249,-250,-314,-246,-33,]),'DIVEQ':([21,22,23,24,36,135,154,155,161,162,211,260,262,297,331,335,352,356,376,377,410,418,466,],[-31,-32,-33,-2,-34,-33,-314,266,-315,-316,-314,-257,-244,-314,-250,-314,-245,-249,-249,-250,-314,-246,-33,]),'MODEQ':([21,22,23,24,36,135,154,155,161,162,211,260,262,297,331,335,352,356,376,377,410,418,466,],[-31,-32,-33,-2,-34,-33,-314,267,-315,-316,-314,-257,-244,-314,-250,-314,-245,-249,-249,-250,-314,-246,-33,]),'PLUSEQ':([21,22,23,24,36,135,154,155,161,162,211,260,262,297,331,335,352,356,376,377,410,418,466,],[-31,-32,-33,-2,-34,-33,-314,268,-315,-316,-314,-257,-244,-314,-250,-314,-245,-249,-249,-250,-314,-246,-33,]),'MINUSEQ':([21,22,23,24,36,135,154,155,161,162,211,260,262,297,331,335,352,356,376,377,410,418,466,],[-31,-32,-33,-2,-34,-33,-314,269,-315,-316,-314,-257,-244,-314,-250,-314,-245,-249,-249,-250,-314,-246,-33,]),'LSHIFTEQ':([21,22,23,24,36,135,154,155,161,162,211,260,262,297,331,335,352,356,376,377,410,418,466,],[-31,-32,-33,-2,-34,-33,-314,270,-315,-316,-314,-257,-244,-314,-250,-314,-245,-249,-249,-250,-314,-246,-33,]),'RSHIFTEQ':([21,22,23,24,36,135,154,155,161,162,211,260,262,297,331,335,352,356,376,377,410,418,466,],[-31,-32,-33,-2,-34,-33,-314,271,-315,-316,-314,-257,-244,-314,-250,-314,-245,-249,-249,-250,-314,-246,-33,]),'INCREMENT':([21,22,23,24,36,86,88,107,108,110,111,112,114,115,116,118,119,120,121,122,123,125,126,127,128,129,130,131,132,133,134,135,141,144,145,150,151,152,153,154,156,157,158,159,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,179,198,201,202,203,211,213,217,218,225,226,231,232,233,235,236,237,239,244,245,248,249,250,252,254,256,259,260,261,262,263,264,265,266,267,268,269,270,271,273,274,275,276,277,279,280,284,297,298,301,302,303,304,305,308,309,311,312,313,314,315,316,318,319,320,321,322,323,324,331,333,334,335,337,338,341,342,343,344,345,346,347,351,352,356,357,358,359,364,365,366,368,376,377,396,397,402,403,406,410,413,414,415,417,418,419,420,421,424,427,432,433,435,439,440,441,442,443,448,449,455,457,459,461,466,469,470,471,474,476,478,481,482,484,487,488,491,493,494,495,498,501,503,505,506,507,509,510,511,512,514,515,517,518,521,522,525,526,527,529,530,531,532,533,536,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,554,555,556,557,559,560,561,562,563,564,565,568,571,572,573,574,575,576,577,580,581,582,583,585,586,587,588,589,591,592,594,595,597,599,600,603,608,],[-31,-32,-33,-2,-34,156,156,156,156,-232,156,-149,-122,-124,-125,-128,-129,-130,-131,-132,-133,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-33,-185,156,156,-260,-261,-236,-234,-259,156,156,279,-258,-235,-237,-229,-230,-231,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-120,156,-232,156,-123,156,156,-259,-258,-234,-236,156,156,279,156,156,-260,-261,156,-126,156,156,-152,156,156,-216,-218,-220,156,-257,156,-244,156,-317,-318,-319,-320,-321,-322,-323,-324,-258,-259,156,-235,-237,-262,-263,-121,-259,-233,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,-250,156,-150,-259,156,156,-215,-217,-219,-221,-222,-224,-225,-252,-245,-249,156,-243,-242,156,-113,-233,156,-249,-250,-115,156,156,-163,-205,-259,-223,-226,-228,-251,-246,-233,156,-238,-112,156,156,-114,-256,156,-182,-205,156,156,-254,-239,-255,156,-164,-128,-33,156,156,156,-170,156,-253,156,-160,156,-183,156,-207,156,-168,-171,156,-227,-165,156,156,-179,-207,156,-206,156,-207,-172,156,156,-163,156,-205,-206,156,-207,156,-209,-206,156,-177,156,-166,-182,-205,156,156,-209,-206,156,-208,-195,156,-209,-176,-184,-161,156,156,156,-208,-192,156,-209,-194,-208,-193,156,-207,156,-190,-208,-191,-189,-165,-207,156,-206,156,-207,-188,156,-206,156,-207,156,-206,156,156,-206,156,156,156,]),'DECREMENT':([21,22,23,24,36,86,88,107,108,110,111,112,114,115,116,118,119,120,121,122,123,125,126,127,128,129,130,131,132,133,134,135,141,144,145,150,151,152,153,154,156,157,158,159,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,179,198,201,202,203,211,213,217,218,225,226,231,232,233,235,236,237,239,244,245,248,249,250,252,254,256,259,260,261,262,263,264,265,266,267,268,269,270,271,273,274,275,276,277,279,280,284,297,298,301,302,303,304,305,308,309,311,312,313,314,315,316,318,319,320,321,322,323,324,331,333,334,335,337,338,341,342,343,344,345,346,347,351,352,356,357,358,359,364,365,366,368,376,377,396,397,402,403,406,410,413,414,415,417,418,419,420,421,424,427,432,433,435,439,440,441,442,443,448,449,455,457,459,461,466,469,470,471,474,476,478,481,482,484,487,488,491,493,494,495,498,501,503,505,506,507,509,510,511,512,514,515,517,518,521,522,525,526,527,529,530,531,532,533,536,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,554,555,556,557,559,560,561,562,563,564,565,568,571,572,573,574,575,576,577,580,581,582,583,585,586,587,588,589,591,592,594,595,597,599,600,603,608,],[-31,-32,-33,-2,-34,157,157,157,157,-232,157,-149,-122,-124,-125,-128,-129,-130,-131,-132,-133,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-33,-185,157,157,-260,-261,-236,-234,-259,157,157,280,-258,-235,-237,-229,-230,-231,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-120,157,-232,157,-123,157,157,-259,-258,-234,-236,157,157,280,157,157,-260,-261,157,-126,157,157,-152,157,157,-216,-218,-220,157,-257,157,-244,157,-317,-318,-319,-320,-321,-322,-323,-324,-258,-259,157,-235,-237,-262,-263,-121,-259,-233,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,-250,157,-150,-259,157,157,-215,-217,-219,-221,-222,-224,-225,-252,-245,-249,157,-243,-242,157,-113,-233,157,-249,-250,-115,157,157,-163,-205,-259,-223,-226,-228,-251,-246,-233,157,-238,-112,157,157,-114,-256,157,-182,-205,157,157,-254,-239,-255,157,-164,-128,-33,157,157,157,-170,157,-253,157,-160,157,-183,157,-207,157,-168,-171,157,-227,-165,157,157,-179,-207,157,-206,157,-207,-172,157,157,-163,157,-205,-206,157,-207,157,-209,-206,157,-177,157,-166,-182,-205,157,157,-209,-206,157,-208,-195,157,-209,-176,-184,-161,157,157,157,-208,-192,157,-209,-194,-208,-193,157,-207,157,-190,-208,-191,-189,-165,-207,157,-206,157,-207,-188,157,-206,157,-207,157,-206,157,157,-206,157,157,157,]),'MULT':([21,22,23,24,31,36,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,179,211,213,217,218,224,227,228,229,230,231,234,235,236,260,262,272,273,274,276,277,278,279,280,297,325,326,327,328,351,352,358,359,366,376,377,390,391,392,393,394,417,418,419,421,426,428,435,448,449,450,451,455,478,],[-31,-32,-33,-2,37,-34,-235,-237,-229,-230,-231,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-232,-259,-258,-234,-236,322,-279,-264,-265,-268,-271,-274,-260,-261,-257,-244,-269,-258,-259,-235,-237,-270,-262,-263,-259,-266,-267,-272,-273,-252,-245,-243,-242,-233,-249,-250,322,322,-280,-281,-282,-251,-246,-233,-238,-277,-276,-256,-254,-239,-275,-278,-255,-253,]),'DIVIDE':([21,22,23,24,36,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,179,211,213,217,218,224,227,228,229,230,231,234,235,236,260,262,272,273,274,276,277,278,279,280,297,325,326,327,328,351,352,358,359,366,376,377,390,391,392,393,394,417,418,419,421,426,428,435,448,449,450,451,455,478,],[-31,-32,-33,-2,-34,-235,-237,-229,-230,-231,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-232,-259,-258,-234,-236,323,-279,-264,-265,-268,-271,-274,-260,-261,-257,-244,-269,-258,-259,-235,-237,-270,-262,-263,-259,-266,-267,-272,-273,-252,-245,-243,-242,-233,-249,-250,323,323,-280,-281,-282,-251,-246,-233,-238,-277,-276,-256,-254,-239,-275,-278,-255,-253,]),'MODULO':([21,22,23,24,36,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,179,211,213,217,218,224,227,228,229,230,231,234,235,236,260,262,272,273,274,276,277,278,279,280,297,325,326,327,328,351,352,358,359,366,376,377,390,391,392,393,394,417,418,419,421,426,428,435,448,449,450,451,455,478,],[-31,-32,-33,-2,-34,-235,-237,-229,-230,-231,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-232,-259,-258,-234,-236,324,-279,-264,-265,-268,-271,-274,-260,-261,-257,-244,-269,-258,-259,-235,-237,-270,-262,-263,-259,-266,-267,-272,-273,-252,-245,-243,-242,-233,-249,-250,324,324,-280,-281,-282,-251,-246,-233,-238,-277,-276,-256,-254,-239,-275,-278,-255,-253,]),'PLUS':([21,22,23,24,36,111,144,145,156,157,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,179,202,203,211,213,217,218,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,245,249,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,297,301,302,303,304,305,308,309,311,312,313,314,315,316,318,319,320,321,322,323,324,325,326,327,328,333,337,351,352,357,358,359,364,366,368,376,377,388,389,390,391,392,393,394,397,402,406,417,418,419,420,421,426,427,428,432,435,441,442,448,449,450,451,455,457,470,476,478,481,505,518,525,541,542,556,],[-31,-32,-33,-2,-34,225,225,225,225,225,-235,-237,-229,-230,-231,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-232,225,225,-259,-258,-234,-236,320,-283,225,225,-279,-264,-265,-268,-271,225,225,-274,-260,-261,225,225,225,225,-257,225,-244,225,-317,-318,-319,-320,-321,-322,-323,-324,-269,-258,-259,225,-235,-237,-270,-262,-263,-259,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,-266,-267,-272,-273,225,225,-252,-245,225,-243,-242,225,-233,225,-249,-250,320,320,-284,-285,-280,-281,-282,225,225,-205,-251,-246,-233,225,-238,-277,225,-276,225,-256,-205,225,-254,-239,-275,-278,-255,225,225,225,-253,225,225,225,-205,-205,225,225,]),'MINUS':([21,22,23,24,36,111,144,145,156,157,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,179,202,203,211,213,217,218,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,245,249,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,297,301,302,303,304,305,308,309,311,312,313,314,315,316,318,319,320,321,322,323,324,325,326,327,328,333,337,351,352,357,358,359,364,366,368,376,377,388,389,390,391,392,393,394,397,402,406,417,418,419,420,421,426,427,428,432,435,441,442,448,449,450,451,455,457,470,476,478,481,505,518,525,541,542,556,],[-31,-32,-33,-2,-34,226,226,226,226,226,-235,-237,-229,-230,-231,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-232,226,226,-259,-258,-234,-236,321,-283,226,226,-279,-264,-265,-268,-271,226,226,-274,-260,-261,226,226,226,226,-257,226,-244,226,-317,-318,-319,-320,-321,-322,-323,-324,-269,-258,-259,226,-235,-237,-270,-262,-263,-259,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,-266,-267,-272,-273,226,226,-252,-245,226,-243,-242,226,-233,226,-249,-250,321,321,-284,-285,-280,-281,-282,226,226,-205,-251,-246,-233,226,-238,-277,226,-276,226,-256,-205,226,-254,-239,-275,-278,-255,226,226,226,-253,226,226,226,-205,-205,226,226,]),'L_SHIFT':([21,22,23,24,36,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,179,211,213,217,218,222,223,224,227,228,229,230,231,234,235,236,260,262,272,273,274,276,277,278,279,280,297,325,326,327,328,351,352,358,359,366,376,377,382,383,384,385,388,389,390,391,392,393,394,417,418,419,421,426,428,435,448,449,450,451,455,478,],[-31,-32,-33,-2,-34,-235,-237,-229,-230,-231,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-232,-259,-258,-234,-236,318,-286,-283,-279,-264,-265,-268,-271,-274,-260,-261,-257,-244,-269,-258,-259,-235,-237,-270,-262,-263,-259,-266,-267,-272,-273,-252,-245,-243,-242,-233,-249,-250,318,318,318,318,-287,-288,-284,-285,-280,-281,-282,-251,-246,-233,-238,-277,-276,-256,-254,-239,-275,-278,-255,-253,]),'R_SHIFT':([21,22,23,24,36,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,179,211,213,217,218,222,223,224,227,228,229,230,231,234,235,236,260,262,272,273,274,276,277,278,279,280,297,325,326,327,328,351,352,358,359,366,376,377,382,383,384,385,388,389,390,391,392,393,394,417,418,419,421,426,428,435,448,449,450,451,455,478,],[-31,-32,-33,-2,-34,-235,-237,-229,-230,-231,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-232,-259,-258,-234,-236,319,-286,-283,-279,-264,-265,-268,-271,-274,-260,-261,-257,-244,-269,-258,-259,-235,-237,-270,-262,-263,-259,-266,-267,-272,-273,-252,-245,-243,-242,-233,-249,-250,319,319,319,319,-287,-288,-284,-285,-280,-281,-282,-251,-246,-233,-238,-277,-276,-256,-254,-239,-275,-278,-255,-253,]),'LST':([21,22,23,24,36,62,63,66,94,98,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,179,191,211,213,217,218,221,222,223,224,227,228,229,230,231,234,235,236,260,262,272,273,274,276,277,278,279,280,289,297,325,326,327,328,351,352,358,359,366,376,377,380,381,382,383,384,385,386,388,389,390,391,392,393,394,417,418,419,421,426,428,435,448,449,450,451,455,478,],[-31,-32,-33,-2,-34,-26,-27,-28,-29,-30,-235,-237,-229,-230,-231,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-232,-247,-259,-258,-234,-236,313,-289,-286,-283,-279,-264,-265,-268,-271,-274,-260,-261,-257,-244,-269,-258,-259,-235,-237,-270,-262,-263,-248,-259,-266,-267,-272,-273,-252,-245,-243,-242,-233,-249,-250,313,313,-290,-291,-292,-293,-294,-287,-288,-284,-285,-280,-281,-282,-251,-246,-233,-238,-277,-276,-256,-254,-239,-275,-278,-255,-253,]),'GRT':([21,22,23,24,36,62,63,66,94,98,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,179,191,211,213,217,218,221,222,223,224,227,228,229,230,231,234,235,236,260,262,272,273,274,276,277,278,279,280,289,297,325,326,327,328,351,352,358,359,366,376,377,380,381,382,383,384,385,386,388,389,390,391,392,393,394,417,418,419,421,426,428,435,448,449,450,451,455,478,],[-31,-32,-33,-2,-34,-26,-27,-28,-29,-30,-235,-237,-229,-230,-231,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-232,-247,-259,-258,-234,-236,314,-289,-286,-283,-279,-264,-265,-268,-271,-274,-260,-261,-257,-244,-269,-258,-259,-235,-237,-270,-262,-263,-248,-259,-266,-267,-272,-273,-252,-245,-243,-242,-233,-249,-250,314,314,-290,-291,-292,-293,-294,-287,-288,-284,-285,-280,-281,-282,-251,-246,-233,-238,-277,-276,-256,-254,-239,-275,-278,-255,-253,]),'LEQ':([21,22,23,24,36,62,63,66,94,98,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,179,191,211,213,217,218,221,222,223,224,227,228,229,230,231,234,235,236,260,262,272,273,274,276,277,278,279,280,289,297,325,326,327,328,351,352,358,359,366,376,377,380,381,382,383,384,385,386,388,389,390,391,392,393,394,417,418,419,421,426,428,435,448,449,450,451,455,478,],[-31,-32,-33,-2,-34,-26,-27,-28,-29,-30,-235,-237,-229,-230,-231,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-232,-247,-259,-258,-234,-236,315,-289,-286,-283,-279,-264,-265,-268,-271,-274,-260,-261,-257,-244,-269,-258,-259,-235,-237,-270,-262,-263,-248,-259,-266,-267,-272,-273,-252,-245,-243,-242,-233,-249,-250,315,315,-290,-291,-292,-293,-294,-287,-288,-284,-285,-280,-281,-282,-251,-246,-233,-238,-277,-276,-256,-254,-239,-275,-278,-255,-253,]),'GEQ':([21,22,23,24,36,62,63,66,94,98,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,179,191,211,213,217,218,221,222,223,224,227,228,229,230,231,234,235,236,260,262,272,273,274,276,277,278,279,280,289,297,325,326,327,328,351,352,358,359,366,376,377,380,381,382,383,384,385,386,388,389,390,391,392,393,394,417,418,419,421,426,428,435,448,449,450,451,455,478,],[-31,-32,-33,-2,-34,-26,-27,-28,-29,-30,-235,-237,-229,-230,-231,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-232,-247,-259,-258,-234,-236,316,-289,-286,-283,-279,-264,-265,-268,-271,-274,-260,-261,-257,-244,-269,-258,-259,-235,-237,-270,-262,-263,-248,-259,-266,-267,-272,-273,-252,-245,-243,-242,-233,-249,-250,316,316,-290,-291,-292,-293,-294,-287,-288,-284,-285,-280,-281,-282,-251,-246,-233,-238,-277,-276,-256,-254,-239,-275,-278,-255,-253,]),'INSTANCEOF':([21,22,23,24,36,62,63,66,94,98,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,179,191,211,213,217,218,221,222,223,224,227,228,229,230,231,234,235,236,260,262,272,273,274,276,277,278,279,280,289,297,325,326,327,328,351,352,358,359,366,376,377,380,381,382,383,384,385,386,388,389,390,391,392,393,394,417,418,419,421,426,428,435,448,449,450,451,455,478,],[-31,-32,-33,-2,-34,-26,-27,-28,-29,-30,-235,-237,-229,-230,-231,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-232,-247,-259,-258,-234,-236,317,-289,-286,-283,-279,-264,-265,-268,-271,-274,-260,-261,-257,-244,-269,-258,-259,-235,-237,-270,-262,-263,-248,-259,-266,-267,-272,-273,-252,-245,-243,-242,-233,-249,-250,317,317,-290,-291,-292,-293,-294,-287,-288,-284,-285,-280,-281,-282,-251,-246,-233,-238,-277,-276,-256,-254,-239,-275,-278,-255,-253,]),'EQUALS':([21,22,23,24,36,62,63,66,94,98,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,179,191,211,213,217,218,220,221,222,223,224,227,228,229,230,231,234,235,236,260,262,272,273,274,276,277,278,279,280,289,297,325,326,327,328,351,352,358,359,366,376,377,379,380,381,382,383,384,385,386,388,389,390,391,392,393,394,417,418,419,421,426,428,435,448,449,450,451,455,478,],[-31,-32,-33,-2,-34,-26,-27,-28,-29,-30,-235,-237,-229,-230,-231,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-232,-247,-259,-258,-234,-236,311,-295,-289,-286,-283,-279,-264,-265,-268,-271,-274,-260,-261,-257,-244,-269,-258,-259,-235,-237,-270,-262,-263,-248,-259,-266,-267,-272,-273,-252,-245,-243,-242,-233,-249,-250,311,-296,-297,-290,-291,-292,-293,-294,-287,-288,-284,-285,-280,-281,-282,-251,-246,-233,-238,-277,-276,-256,-254,-239,-275,-278,-255,-253,]),'NOT_EQUAL':([21,22,23,24,36,62,63,66,94,98,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,179,191,211,213,217,218,220,221,222,223,224,227,228,229,230,231,234,235,236,260,262,272,273,274,276,277,278,279,280,289,297,325,326,327,328,351,352,358,359,366,376,377,379,380,381,382,383,384,385,386,388,389,390,391,392,393,394,417,418,419,421,426,428,435,448,449,450,451,455,478,],[-31,-32,-33,-2,-34,-26,-27,-28,-29,-30,-235,-237,-229,-230,-231,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-232,-247,-259,-258,-234,-236,312,-295,-289,-286,-283,-279,-264,-265,-268,-271,-274,-260,-261,-257,-244,-269,-258,-259,-235,-237,-270,-262,-263,-248,-259,-266,-267,-272,-273,-252,-245,-243,-242,-233,-249,-250,312,-296,-297,-290,-291,-292,-293,-294,-287,-288,-284,-285,-280,-281,-282,-251,-246,-233,-238,-277,-276,-256,-254,-239,-275,-278,-255,-253,]),'BITWISE_AND':([21,22,23,24,36,62,63,66,94,98,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,179,191,211,213,216,217,218,220,221,222,223,224,227,228,229,230,231,234,235,236,260,262,272,273,274,276,277,278,279,280,289,297,325,326,327,328,351,352,358,359,366,376,377,378,379,380,381,382,383,384,385,386,388,389,390,391,392,393,394,417,418,419,421,426,428,435,448,449,450,451,455,478,],[-31,-32,-33,-2,-34,-26,-27,-28,-29,-30,-235,-237,-229,-230,-231,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-232,-247,-259,-258,309,-234,-236,-298,-295,-289,-286,-283,-279,-264,-265,-268,-271,-274,-260,-261,-257,-244,-269,-258,-259,-235,-237,-270,-262,-263,-248,-259,-266,-267,-272,-273,-252,-245,-243,-242,-233,-249,-250,309,-299,-296,-297,-290,-291,-292,-293,-294,-287,-288,-284,-285,-280,-281,-282,-251,-246,-233,-238,-277,-276,-256,-254,-239,-275,-278,-255,-253,]),'BITWISE_XOR':([21,22,23,24,36,62,63,66,94,98,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,179,191,211,213,215,216,217,218,220,221,222,223,224,227,228,229,230,231,234,235,236,260,262,272,273,274,276,277,278,279,280,289,297,325,326,327,328,351,352,358,359,366,375,376,377,378,379,380,381,382,383,384,385,386,388,389,390,391,392,393,394,417,418,419,421,426,428,435,448,449,450,451,455,478,],[-31,-32,-33,-2,-34,-26,-27,-28,-29,-30,-235,-237,-229,-230,-231,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-232,-247,-259,-258,308,-300,-234,-236,-298,-295,-289,-286,-283,-279,-264,-265,-268,-271,-274,-260,-261,-257,-244,-269,-258,-259,-235,-237,-270,-262,-263,-248,-259,-266,-267,-272,-273,-252,-245,-243,-242,-233,308,-249,-250,-301,-299,-296,-297,-290,-291,-292,-293,-294,-287,-288,-284,-285,-280,-281,-282,-251,-246,-233,-238,-277,-276,-256,-254,-239,-275,-278,-255,-253,]),'BITWISE_OR':([21,22,23,24,36,62,63,66,94,98,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,179,191,211,212,213,215,216,217,218,220,221,222,223,224,227,228,229,230,231,234,235,236,260,262,272,273,274,276,277,278,279,280,289,297,325,326,327,328,351,352,358,359,366,374,375,376,377,378,379,380,381,382,383,384,385,386,388,389,390,391,392,393,394,417,418,419,421,426,428,435,448,449,450,451,455,478,],[-31,-32,-33,-2,-34,-26,-27,-28,-29,-30,-235,-237,-229,-230,-231,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-232,-247,-259,305,-258,-302,-300,-234,-236,-298,-295,-289,-286,-283,-279,-264,-265,-268,-271,-274,-260,-261,-257,-244,-269,-258,-259,-235,-237,-270,-262,-263,-248,-259,-266,-267,-272,-273,-252,-245,-243,-242,-233,305,-303,-249,-250,-301,-299,-296,-297,-290,-291,-292,-293,-294,-287,-288,-284,-285,-280,-281,-282,-251,-246,-233,-238,-277,-276,-256,-254,-239,-275,-278,-255,-253,]),'LOGICAL_AND':([21,22,23,24,36,62,63,66,94,98,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,179,191,210,211,212,213,215,216,217,218,220,221,222,223,224,227,228,229,230,231,234,235,236,260,262,272,273,274,276,277,278,279,280,289,297,325,326,327,328,351,352,358,359,366,373,374,375,376,377,378,379,380,381,382,383,384,385,386,388,389,390,391,392,393,394,417,418,419,421,426,428,435,448,449,450,451,455,478,],[-31,-32,-33,-2,-34,-26,-27,-28,-29,-30,-235,-237,-229,-230,-231,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-232,-247,303,-259,-304,-258,-302,-300,-234,-236,-298,-295,-289,-286,-283,-279,-264,-265,-268,-271,-274,-260,-261,-257,-244,-269,-258,-259,-235,-237,-270,-262,-263,-248,-259,-266,-267,-272,-273,-252,-245,-243,-242,-233,303,-305,-303,-249,-250,-301,-299,-296,-297,-290,-291,-292,-293,-294,-287,-288,-284,-285,-280,-281,-282,-251,-246,-233,-238,-277,-276,-256,-254,-239,-275,-278,-255,-253,]),'QUESTION':([21,22,23,24,36,62,63,66,94,98,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,179,191,209,210,211,212,213,215,216,217,218,220,221,222,223,224,227,228,229,230,231,234,235,236,260,262,272,273,274,276,277,278,279,280,289,297,325,326,327,328,351,352,358,359,366,373,374,375,376,377,378,379,380,381,382,383,384,385,386,388,389,390,391,392,393,394,417,418,419,421,426,428,435,448,449,450,451,455,478,],[-31,-32,-33,-2,-34,-26,-27,-28,-29,-30,-235,-237,-229,-230,-231,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-232,-247,301,-306,-259,-304,-258,-302,-300,-234,-236,-298,-295,-289,-286,-283,-279,-264,-265,-268,-271,-274,-260,-261,-257,-244,-269,-258,-259,-235,-237,-270,-262,-263,-248,-259,-266,-267,-272,-273,-252,-245,-243,-242,-233,-307,-305,-303,-249,-250,-301,-299,-296,-297,-290,-291,-292,-293,-294,-287,-288,-284,-285,-280,-281,-282,-251,-246,-233,-238,-277,-276,-256,-254,-239,-275,-278,-255,-253,]),'LOGICAL_OR':([21,22,23,24,36,62,63,66,94,98,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,179,191,209,210,211,212,213,215,216,217,218,220,221,222,223,224,227,228,229,230,231,234,235,236,260,262,272,273,274,276,277,278,279,280,289,297,325,326,327,328,351,352,358,359,366,373,374,375,376,377,378,379,380,381,382,383,384,385,386,388,389,390,391,392,393,394,417,418,419,421,426,428,435,448,449,450,451,455,478,],[-31,-32,-33,-2,-34,-26,-27,-28,-29,-30,-235,-237,-229,-230,-231,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-232,-247,302,-306,-259,-304,-258,-302,-300,-234,-236,-298,-295,-289,-286,-283,-279,-264,-265,-268,-271,-274,-260,-261,-257,-244,-269,-258,-259,-235,-237,-270,-262,-263,-248,-259,-266,-267,-272,-273,-252,-245,-243,-242,-233,-307,-305,-303,-249,-250,-301,-299,-296,-297,-290,-291,-292,-293,-294,-287,-288,-284,-285,-280,-281,-282,-251,-246,-233,-238,-277,-276,-256,-254,-239,-275,-278,-255,-253,]),'R_PAREN':([21,22,23,24,36,60,61,62,63,64,65,66,67,68,69,70,71,72,73,93,94,98,147,148,149,150,151,152,153,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,179,182,186,188,191,202,204,205,206,207,209,210,211,212,213,215,216,217,218,220,221,222,223,224,227,228,229,230,231,234,235,236,237,243,259,260,262,272,273,274,276,277,278,279,280,284,285,288,289,292,294,295,296,297,299,300,325,326,327,328,329,336,339,350,351,352,354,355,357,358,359,361,362,366,367,369,370,373,374,375,376,377,378,379,380,381,382,383,384,385,386,388,389,390,391,392,393,394,397,404,409,417,418,419,420,421,422,425,426,428,434,435,446,447,448,449,450,451,453,454,455,471,473,478,479,488,490,492,493,500,502,508,510,513,523,528,557,568,570,572,579,581,584,590,],[-31,-32,-33,-2,-34,-15,-16,-26,-27,-17,-18,-28,-19,-20,-21,-22,-23,-24,-25,187,-29,-30,-153,-154,-155,-156,-157,-158,-159,-235,-237,-229,-230,-231,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-120,-232,-92,286,-93,-247,293,298,-325,-310,-311,-308,-306,-259,-304,-258,-302,-300,-234,-236,-298,-295,-289,-286,-283,-279,-264,-265,-268,-271,-274,-260,-261,330,-77,351,-257,-244,-269,-258,-259,-235,-237,-270,-262,-263,-121,360,-95,-248,363,-240,366,368,-259,-312,371,-266,-267,-272,-273,395,403,411,417,-252,-245,-313,419,421,-243,-242,423,-94,-233,427,429,430,-307,-305,-303,-249,-250,-301,-299,-296,-297,-290,-291,-292,-293,-294,-287,-288,-284,-285,-280,-281,-282,435,440,-213,-251,-246,-233,448,-238,449,-241,-277,-276,455,-256,477,478,-254,-239,-275,-278,-327,-309,-255,491,-214,-253,-326,509,511,-212,514,520,521,526,529,532,540,545,571,580,582,585,588,591,594,599,]),'R_SQBR':([21,22,23,24,36,62,63,66,94,95,98,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,179,190,191,205,206,207,209,210,211,212,213,215,216,217,218,220,221,222,223,224,227,228,229,230,231,234,235,236,260,261,262,272,273,274,276,277,278,279,280,284,289,299,325,326,327,328,351,352,353,354,358,359,366,373,374,375,376,377,378,379,380,381,382,383,384,385,386,388,389,390,391,392,393,394,417,418,419,421,426,428,435,448,449,450,451,453,454,455,478,479,],[-31,-32,-33,-2,-34,-26,-27,-28,-29,191,-30,-235,-237,-229,-230,-231,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-120,-232,289,-247,-325,-310,-311,-308,-306,-259,-304,-258,-302,-300,-234,-236,-298,-295,-289,-286,-283,-279,-264,-265,-268,-271,-274,-260,-261,-257,191,-244,-269,-258,-259,-235,-237,-270,-262,-263,-121,-248,-312,-266,-267,-272,-273,-252,-245,418,-313,-243,-242,-233,-307,-305,-303,-249,-250,-301,-299,-296,-297,-290,-291,-292,-293,-294,-287,-288,-284,-285,-280,-281,-282,-251,-246,-233,-238,-277,-276,-256,-254,-239,-275,-278,-327,-309,-255,-253,-326,]),'COLON':([21,22,23,24,36,62,63,66,94,98,135,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,179,191,205,206,207,209,210,211,212,213,215,216,217,218,220,221,222,223,224,227,228,229,230,231,234,235,236,260,262,272,273,274,276,277,278,279,280,284,289,299,325,326,327,328,351,352,354,358,359,366,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,388,389,390,391,392,393,394,417,418,419,421,426,428,435,448,449,450,451,453,454,455,466,478,479,519,534,535,],[-31,-32,-33,-2,-34,-26,-27,-28,-29,-30,244,-235,-237,-229,-230,-231,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-120,-232,-247,-325,-310,-311,-308,-306,-259,-304,-258,-302,-300,-234,-236,-298,-295,-289,-286,-283,-279,-264,-265,-268,-271,-274,-260,-261,-257,-244,-269,-258,-259,-235,-237,-270,-262,-263,-121,-248,-312,-266,-267,-272,-273,-252,-245,-313,-243,-242,-233,432,-307,-305,-303,-249,-250,-301,-299,-296,-297,-290,-291,-292,-293,-294,-287,-288,-284,-285,-280,-281,-282,-251,-246,-233,-238,-277,-276,-256,-254,-239,-275,-278,-327,-309,-255,484,-253,-326,536,551,-328,]),'BLOCK_CLOSER':([21,22,23,24,35,36,42,43,44,45,46,47,48,62,63,66,76,77,84,86,87,88,94,98,100,104,107,108,109,112,114,115,116,118,119,120,121,122,123,125,126,127,128,129,130,131,132,133,134,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,179,180,183,184,185,191,193,194,198,199,200,201,205,206,207,209,210,211,212,213,215,216,217,218,220,221,222,223,224,227,228,229,230,231,234,235,236,239,248,252,254,256,260,262,272,273,274,276,277,278,279,280,284,289,291,299,325,326,327,328,334,341,342,343,344,345,346,347,351,352,354,358,359,365,366,373,374,375,376,377,378,379,380,381,382,383,384,385,386,388,389,390,391,392,393,394,396,400,401,402,413,414,415,417,418,419,421,424,426,428,433,435,436,437,438,448,449,450,451,453,454,455,456,459,461,474,475,478,479,480,482,487,494,495,496,497,501,507,515,516,517,531,539,544,547,548,550,552,554,559,560,562,563,564,565,573,574,575,576,586,],[-31,-32,-33,-2,41,-34,75,-63,-70,-66,-67,-68,-69,-26,-27,-28,-64,-65,-105,109,-101,176,-29,-30,-103,-104,199,200,-111,-149,-122,-124,-125,-128,-129,-130,-131,-132,-133,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-235,-237,-229,-230,-231,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-120,284,-232,-72,-80,-99,-100,-247,-102,-71,291,-109,-110,-123,-325,-310,-311,-308,-306,-259,-304,-258,-302,-300,-234,-236,-298,-295,-289,-286,-283,-279,-264,-265,-268,-271,-274,-260,-261,-126,-152,-216,-218,-220,-257,-244,-269,-258,-259,-235,-237,-270,-262,-263,-121,-248,-108,-312,-266,-267,-272,-273,-150,-215,-217,-219,-221,-222,-224,-225,-252,-245,-313,-243,-242,-113,-233,-307,-305,-303,-249,-250,-301,-299,-296,-297,-290,-291,-292,-293,-294,-287,-288,-284,-285,-280,-281,-282,-115,-78,-79,437,-223,-226,-228,-251,-246,-233,-238,-112,-277,-276,-114,-256,456,-117,-118,-254,-239,-275,-278,-327,-309,-255,-116,-164,-128,-170,495,-253,-326,-119,-160,-183,-168,-171,515,-173,-227,-179,-172,-174,-175,-209,-166,-209,-208,-195,-209,-184,-161,-208,-192,-209,-194,-208,-193,-190,-208,-191,-189,-188,]),'EXTENDS':([24,26,],[-2,34,]),'STATIC':([35,42,43,44,45,46,47,48,49,51,54,59,76,77,80,82,84,87,100,104,109,176,180,183,184,185,193,194,199,200,284,291,],[51,51,-63,-70,-66,-67,-68,-69,82,-56,-54,-57,-64,-65,-55,-56,-105,-101,-103,-104,-111,-120,-72,-80,-99,-100,-102,-71,-109,-110,-121,-108,]),'VOID':([35,42,43,44,45,46,47,48,49,51,54,59,76,77,80,82,84,87,100,104,109,176,180,183,184,185,193,194,199,200,284,291,],[58,58,-63,-70,-66,-67,-68,-69,81,-56,-54,-57,-64,-65,-55,-56,-105,-101,-103,-104,-111,-120,-72,-80,-99,-100,-102,-71,-109,-110,-121,-108,]),'FINAL':([35,42,43,44,45,46,47,48,49,51,54,59,76,77,80,82,84,87,100,104,109,176,180,183,184,185,193,194,199,200,284,291,],[59,59,-63,-70,-66,-67,-68,-69,59,-56,-54,-57,-64,-65,-55,-56,-105,-101,-103,-104,-111,-120,-72,-80,-99,-100,-102,-71,-109,-110,-121,-108,]),'BOOLEAN':([35,42,43,44,45,46,47,48,49,51,54,59,76,77,80,82,84,86,87,88,93,100,104,107,108,109,112,114,115,116,118,119,120,121,122,123,125,126,127,128,129,130,131,132,133,134,160,176,177,180,182,183,184,185,193,194,198,199,200,201,203,219,239,248,252,254,256,275,284,285,287,291,300,317,334,338,341,342,343,344,345,346,347,365,396,413,414,415,416,424,433,459,461,474,482,487,494,495,498,501,506,507,515,517,531,536,539,544,547,548,550,551,552,554,559,560,562,563,564,565,573,574,575,576,586,],[61,61,-63,-70,-66,-67,-68,-69,61,-56,-54,-57,-64,-65,-55,-56,-105,61,-101,61,61,-103,-104,61,61,-111,-149,-122,-124,-125,-128,-129,-130,-131,-132,-133,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,61,-120,61,-72,-92,-80,-99,-100,-102,-71,61,-109,-110,-123,61,61,-126,-152,-216,-218,-220,61,-121,61,61,-108,61,61,-150,61,-215,-217,-219,-221,-222,-224,-225,-113,-115,-223,-226,-228,61,-112,-114,-164,-128,-170,-160,-183,-168,-171,61,-227,61,-179,-172,61,-209,-177,-166,-209,-208,-195,-209,-176,-184,-161,-208,-192,-209,-194,-208,-193,-190,-208,-191,-189,-188,]),'BYTE':([35,42,43,44,45,46,47,48,49,51,54,59,76,77,80,82,84,86,87,88,93,100,104,107,108,109,112,114,115,116,118,119,120,121,122,123,125,126,127,128,129,130,131,132,133,134,160,176,177,180,182,183,184,185,193,194,198,199,200,201,203,219,239,248,252,254,256,275,284,285,287,291,300,317,334,338,341,342,343,344,345,346,347,365,396,413,414,415,416,424,433,459,461,474,482,487,494,495,498,501,506,507,515,517,531,536,539,544,547,548,550,551,552,554,559,560,562,563,564,565,573,574,575,576,586,],[67,67,-63,-70,-66,-67,-68,-69,67,-56,-54,-57,-64,-65,-55,-56,-105,67,-101,67,67,-103,-104,67,67,-111,-149,-122,-124,-125,-128,-129,-130,-131,-132,-133,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,67,-120,67,-72,-92,-80,-99,-100,-102,-71,67,-109,-110,-123,67,67,-126,-152,-216,-218,-220,67,-121,67,67,-108,67,67,-150,67,-215,-217,-219,-221,-222,-224,-225,-113,-115,-223,-226,-228,67,-112,-114,-164,-128,-170,-160,-183,-168,-171,67,-227,67,-179,-172,67,-209,-177,-166,-209,-208,-195,-209,-176,-184,-161,-208,-192,-209,-194,-208,-193,-190,-208,-191,-189,-188,]),'SHORT':([35,42,43,44,45,46,47,48,49,51,54,59,76,77,80,82,84,86,87,88,93,100,104,107,108,109,112,114,115,116,118,119,120,121,122,123,125,126,127,128,129,130,131,132,133,134,160,176,177,180,182,183,184,185,193,194,198,199,200,201,203,219,239,248,252,254,256,275,284,285,287,291,300,317,334,338,341,342,343,344,345,346,347,365,396,413,414,415,416,424,433,459,461,474,482,487,494,495,498,501,506,507,515,517,531,536,539,544,547,548,550,551,552,554,559,560,562,563,564,565,573,574,575,576,586,],[68,68,-63,-70,-66,-67,-68,-69,68,-56,-54,-57,-64,-65,-55,-56,-105,68,-101,68,68,-103,-104,68,68,-111,-149,-122,-124,-125,-128,-129,-130,-131,-132,-133,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,68,-120,68,-72,-92,-80,-99,-100,-102,-71,68,-109,-110,-123,68,68,-126,-152,-216,-218,-220,68,-121,68,68,-108,68,68,-150,68,-215,-217,-219,-221,-222,-224,-225,-113,-115,-223,-226,-228,68,-112,-114,-164,-128,-170,-160,-183,-168,-171,68,-227,68,-179,-172,68,-209,-177,-166,-209,-208,-195,-209,-176,-184,-161,-208,-192,-209,-194,-208,-193,-190,-208,-191,-189,-188,]),'INT':([35,42,43,44,45,46,47,48,49,51,54,59,76,77,80,82,84,86,87,88,93,100,104,107,108,109,112,114,115,116,118,119,120,121,122,123,125,126,127,128,129,130,131,132,133,134,160,176,177,180,182,183,184,185,193,194,198,199,200,201,203,219,239,248,252,254,256,275,284,285,287,291,300,317,334,338,341,342,343,344,345,346,347,365,396,413,414,415,416,424,433,459,461,474,482,487,494,495,498,501,506,507,515,517,531,536,539,544,547,548,550,551,552,554,559,560,562,563,564,565,573,574,575,576,586,],[69,69,-63,-70,-66,-67,-68,-69,69,-56,-54,-57,-64,-65,-55,-56,-105,69,-101,69,69,-103,-104,69,69,-111,-149,-122,-124,-125,-128,-129,-130,-131,-132,-133,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,69,-120,69,-72,-92,-80,-99,-100,-102,-71,69,-109,-110,-123,69,69,-126,-152,-216,-218,-220,69,-121,69,69,-108,69,69,-150,69,-215,-217,-219,-221,-222,-224,-225,-113,-115,-223,-226,-228,69,-112,-114,-164,-128,-170,-160,-183,-168,-171,69,-227,69,-179,-172,69,-209,-177,-166,-209,-208,-195,-209,-176,-184,-161,-208,-192,-209,-194,-208,-193,-190,-208,-191,-189,-188,]),'LONG':([35,42,43,44,45,46,47,48,49,51,54,59,76,77,80,82,84,86,87,88,93,100,104,107,108,109,112,114,115,116,118,119,120,121,122,123,125,126,127,128,129,130,131,132,133,134,160,176,177,180,182,183,184,185,193,194,198,199,200,201,203,219,239,248,252,254,256,275,284,285,287,291,300,317,334,338,341,342,343,344,345,346,347,365,396,413,414,415,416,424,433,459,461,474,482,487,494,495,498,501,506,507,515,517,531,536,539,544,547,548,550,551,552,554,559,560,562,563,564,565,573,574,575,576,586,],[70,70,-63,-70,-66,-67,-68,-69,70,-56,-54,-57,-64,-65,-55,-56,-105,70,-101,70,70,-103,-104,70,70,-111,-149,-122,-124,-125,-128,-129,-130,-131,-132,-133,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,70,-120,70,-72,-92,-80,-99,-100,-102,-71,70,-109,-110,-123,70,70,-126,-152,-216,-218,-220,70,-121,70,70,-108,70,70,-150,70,-215,-217,-219,-221,-222,-224,-225,-113,-115,-223,-226,-228,70,-112,-114,-164,-128,-170,-160,-183,-168,-171,70,-227,70,-179,-172,70,-209,-177,-166,-209,-208,-195,-209,-176,-184,-161,-208,-192,-209,-194,-208,-193,-190,-208,-191,-189,-188,]),'CHAR':([35,42,43,44,45,46,47,48,49,51,54,59,76,77,80,82,84,86,87,88,93,100,104,107,108,109,112,114,115,116,118,119,120,121,122,123,125,126,127,128,129,130,131,132,133,134,160,176,177,180,182,183,184,185,193,194,198,199,200,201,203,219,239,248,252,254,256,275,284,285,287,291,300,317,334,338,341,342,343,344,345,346,347,365,396,413,414,415,416,424,433,459,461,474,482,487,494,495,498,501,506,507,515,517,531,536,539,544,547,548,550,551,552,554,559,560,562,563,564,565,573,574,575,576,586,],[71,71,-63,-70,-66,-67,-68,-69,71,-56,-54,-57,-64,-65,-55,-56,-105,71,-101,71,71,-103,-104,71,71,-111,-149,-122,-124,-125,-128,-129,-130,-131,-132,-133,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,71,-120,71,-72,-92,-80,-99,-100,-102,-71,71,-109,-110,-123,71,71,-126,-152,-216,-218,-220,71,-121,71,71,-108,71,71,-150,71,-215,-217,-219,-221,-222,-224,-225,-113,-115,-223,-226,-228,71,-112,-114,-164,-128,-170,-160,-183,-168,-171,71,-227,71,-179,-172,71,-209,-177,-166,-209,-208,-195,-209,-176,-184,-161,-208,-192,-209,-194,-208,-193,-190,-208,-191,-189,-188,]),'FLOAT':([35,42,43,44,45,46,47,48,49,51,54,59,76,77,80,82,84,86,87,88,93,100,104,107,108,109,112,114,115,116,118,119,120,121,122,123,125,126,127,128,129,130,131,132,133,134,160,176,177,180,182,183,184,185,193,194,198,199,200,201,203,219,239,248,252,254,256,275,284,285,287,291,300,317,334,338,341,342,343,344,345,346,347,365,396,413,414,415,416,424,433,459,461,474,482,487,494,495,498,501,506,507,515,517,531,536,539,544,547,548,550,551,552,554,559,560,562,563,564,565,573,574,575,576,586,],[72,72,-63,-70,-66,-67,-68,-69,72,-56,-54,-57,-64,-65,-55,-56,-105,72,-101,72,72,-103,-104,72,72,-111,-149,-122,-124,-125,-128,-129,-130,-131,-132,-133,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,72,-120,72,-72,-92,-80,-99,-100,-102,-71,72,-109,-110,-123,72,72,-126,-152,-216,-218,-220,72,-121,72,72,-108,72,72,-150,72,-215,-217,-219,-221,-222,-224,-225,-113,-115,-223,-226,-228,72,-112,-114,-164,-128,-170,-160,-183,-168,-171,72,-227,72,-179,-172,72,-209,-177,-166,-209,-208,-195,-209,-176,-184,-161,-208,-192,-209,-194,-208,-193,-190,-208,-191,-189,-188,]),'DOUBLE':([35,42,43,44,45,46,47,48,49,51,54,59,76,77,80,82,84,86,87,88,93,100,104,107,108,109,112,114,115,116,118,119,120,121,122,123,125,126,127,128,129,130,131,132,133,134,160,176,177,180,182,183,184,185,193,194,198,199,200,201,203,219,239,248,252,254,256,275,284,285,287,291,300,317,334,338,341,342,343,344,345,346,347,365,396,413,414,415,416,424,433,459,461,474,482,487,494,495,498,501,506,507,515,517,531,536,539,544,547,548,550,551,552,554,559,560,562,563,564,565,573,574,575,576,586,],[73,73,-63,-70,-66,-67,-68,-69,73,-56,-54,-57,-64,-65,-55,-56,-105,73,-101,73,73,-103,-104,73,73,-111,-149,-122,-124,-125,-128,-129,-130,-131,-132,-133,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,73,-120,73,-72,-92,-80,-99,-100,-102,-71,73,-109,-110,-123,73,73,-126,-152,-216,-218,-220,73,-121,73,73,-108,73,73,-150,73,-215,-217,-219,-221,-222,-224,-225,-113,-115,-223,-226,-228,73,-112,-114,-164,-128,-170,-160,-183,-168,-171,73,-227,73,-179,-172,73,-209,-177,-166,-209,-208,-195,-209,-176,-184,-161,-208,-192,-209,-194,-208,-193,-190,-208,-191,-189,-188,]),'THROWS':([50,78,90,96,102,103,187,286,360,423,],[85,85,85,85,85,85,-107,-106,-90,-91,]),'THIS':([86,88,107,108,111,112,114,115,116,118,119,120,121,122,123,125,126,127,128,129,130,131,132,133,134,141,144,145,156,157,176,177,198,201,202,203,225,226,232,233,237,239,244,245,248,249,250,252,254,256,259,261,263,264,265,266,267,268,269,270,271,275,284,301,302,303,304,305,308,309,311,312,313,314,315,316,318,319,320,321,322,323,324,333,334,337,338,341,342,343,344,345,346,347,357,364,365,366,368,396,397,402,403,406,413,414,415,419,420,424,427,429,432,433,439,440,441,442,443,457,459,461,469,470,471,474,476,481,482,484,487,488,491,493,494,495,498,501,503,505,506,507,509,510,511,512,514,515,517,518,521,522,525,526,527,529,530,531,532,533,536,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,554,555,556,557,559,560,561,562,563,564,565,568,571,572,573,574,575,576,577,580,581,582,583,585,586,587,588,589,591,592,594,595,597,599,600,603,608,],[110,179,179,179,179,-149,-122,-124,-125,-128,-129,-130,-131,-132,-133,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-185,179,179,179,179,-120,179,179,-123,179,179,179,179,179,179,179,-126,179,179,-152,179,179,-216,-218,-220,179,179,179,-317,-318,-319,-320,-321,-322,-323,-324,179,-121,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,-150,179,179,-215,-217,-219,-221,-222,-224,-225,179,179,-113,179,179,-115,179,179,-163,-205,-223,-226,-228,179,179,-112,179,179,179,-114,179,-182,-205,179,179,179,-164,-128,179,179,179,-170,179,179,-160,179,-183,179,-207,179,-168,-171,179,-227,-165,179,179,-179,-207,179,-206,179,-207,-172,179,179,-163,179,-205,-206,179,-207,179,-209,-206,179,-177,179,-166,-182,-205,179,179,-209,-206,179,-208,-195,179,-209,-176,-184,-161,179,179,179,-208,-192,179,-209,-194,-208,-193,179,-207,179,-190,-208,-191,-189,-165,-207,179,-206,179,-207,-188,179,-206,179,-207,179,-206,179,179,-206,179,179,179,]),'SUPER':([86,88,107,108,111,112,114,115,116,118,119,120,121,122,123,125,126,127,128,129,130,131,132,133,134,141,144,145,156,157,176,177,198,201,202,203,225,226,232,233,237,239,244,245,248,249,250,252,254,256,259,261,263,264,265,266,267,268,269,270,271,275,284,301,302,303,304,305,308,309,311,312,313,314,315,316,318,319,320,321,322,323,324,333,334,337,338,341,342,343,344,345,346,347,357,364,365,366,368,396,397,402,403,406,413,414,415,419,420,424,427,429,432,433,439,440,441,442,443,457,459,461,469,470,471,474,476,481,482,484,487,488,491,493,494,495,498,501,503,505,506,507,509,510,511,512,514,515,517,518,521,522,525,526,527,529,530,531,532,533,536,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,554,555,556,557,559,560,561,562,563,564,565,568,571,572,573,574,575,576,577,580,581,582,583,585,586,587,588,589,591,592,594,595,597,599,600,603,608,],[113,178,178,178,214,-149,-122,-124,-125,-128,-129,-130,-131,-132,-133,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-185,214,214,214,214,-120,178,178,-123,214,214,214,214,214,214,214,-126,178,214,-152,214,178,-216,-218,-220,214,214,214,-317,-318,-319,-320,-321,-322,-323,-324,214,-121,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,-150,214,178,-215,-217,-219,-221,-222,-224,-225,214,214,-113,214,214,-115,214,214,-163,-205,-223,-226,-228,214,214,-112,214,214,214,-114,178,-182,-205,214,178,214,-164,-128,178,214,178,-170,214,214,-160,178,-183,178,-207,178,-168,-171,178,-227,-165,214,178,-179,-207,178,-206,178,-207,-172,178,214,-163,178,-205,-206,178,-207,178,-209,-206,178,-177,178,-166,-182,-205,214,178,-209,-206,178,-208,-195,178,-209,-176,-184,-161,178,214,178,-208,-192,178,-209,-194,-208,-193,178,-207,178,-190,-208,-191,-189,-165,-207,178,-206,178,-207,-188,178,-206,178,-207,178,-206,178,178,-206,178,178,178,]),'IF':([86,88,107,108,112,114,115,116,118,119,120,121,122,123,125,126,127,128,129,130,131,132,133,134,141,176,177,198,201,239,244,248,250,252,254,256,284,334,341,342,343,344,345,346,347,365,396,403,413,414,415,424,433,439,440,459,461,469,474,482,484,487,491,494,495,498,501,503,507,509,511,512,514,515,517,521,522,526,527,529,530,531,532,533,536,538,539,540,543,544,545,546,547,548,549,550,551,552,554,555,559,560,561,562,563,564,565,571,573,574,575,576,577,580,582,583,585,586,587,588,589,591,592,594,595,597,599,600,603,608,],[136,136,136,136,-149,-122,-124,-125,-128,-129,-130,-131,-132,-133,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-185,-120,136,136,-123,-126,136,-152,136,-216,-218,-220,-121,-150,-215,-217,-219,-221,-222,-224,-225,-113,-115,-163,-223,-226,-228,-112,-114,458,-182,-164,-128,136,-170,-160,458,-183,-207,-168,-171,136,-227,-165,-179,-207,-206,136,-207,-172,136,-163,136,-206,136,-207,136,-209,-206,136,-177,458,-166,-182,136,-209,-206,136,-208,-195,136,-209,-176,-184,-161,458,-208,-192,136,-209,-194,-208,-193,-207,-190,-208,-191,-189,-165,-207,-206,458,-207,-188,458,-206,458,-207,458,-206,458,458,-206,458,458,458,]),'WHILE':([86,88,107,108,112,114,115,116,118,119,120,121,122,123,125,126,127,128,129,130,131,132,133,134,141,176,177,198,201,239,244,248,250,252,254,256,284,334,340,341,342,343,344,345,346,347,365,396,403,413,414,415,424,433,439,440,459,461,469,474,482,484,487,491,494,495,498,501,503,507,509,511,512,514,515,517,521,522,526,527,529,530,531,532,533,536,538,539,540,543,544,545,546,547,548,549,550,551,552,554,555,559,560,561,562,563,564,565,571,573,574,575,576,577,580,582,583,585,586,587,588,589,591,592,594,595,597,599,600,603,608,],[137,137,137,137,-149,-122,-124,-125,-128,-129,-130,-131,-132,-133,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-185,-120,137,137,-123,-126,137,-152,137,-216,-218,-220,-121,-150,412,-215,-217,-219,-221,-222,-224,-225,-113,-115,-163,-223,-226,-228,-112,-114,467,-182,-164,-128,137,-170,-160,467,-183,-207,-168,-171,137,-227,-165,-179,-207,-206,137,-207,-172,137,-163,137,-206,137,-207,137,-209,-206,137,-177,467,-166,-182,137,-209,-206,137,-208,-195,137,-209,-176,-184,-161,467,-208,-192,137,-209,-194,-208,-193,-207,-190,-208,-191,-189,-165,-207,-206,467,-207,-188,467,-206,467,-207,467,-206,467,467,-206,467,467,467,]),'FOR':([86,88,107,108,112,114,115,116,118,119,120,121,122,123,125,126,127,128,129,130,131,132,133,134,141,176,177,198,201,239,244,248,250,252,254,256,284,334,341,342,343,344,345,346,347,365,396,403,413,414,415,424,433,439,440,459,461,469,474,482,484,487,491,494,495,498,501,503,507,509,511,512,514,515,517,521,522,526,527,529,530,531,532,533,536,538,539,540,543,544,545,546,547,548,549,550,551,552,554,555,559,560,561,562,563,564,565,571,573,574,575,576,577,580,582,583,585,586,587,588,589,591,592,594,595,597,599,600,603,608,],[138,138,138,138,-149,-122,-124,-125,-128,-129,-130,-131,-132,-133,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-185,-120,138,138,-123,-126,138,-152,138,-216,-218,-220,-121,-150,-215,-217,-219,-221,-222,-224,-225,-113,-115,-163,-223,-226,-228,-112,-114,468,-182,-164,-128,138,-170,-160,468,-183,-207,-168,-171,138,-227,-165,-179,-207,-206,138,-207,-172,138,-163,138,-206,138,-207,138,-209,-206,138,-177,468,-166,-182,138,-209,-206,138,-208,-195,138,-209,-176,-184,-161,468,-208,-192,138,-209,-194,-208,-193,-207,-190,-208,-191,-189,-165,-207,-206,468,-207,-188,468,-206,468,-207,468,-206,468,468,-206,468,468,468,]),'SWITCH':([86,88,107,108,112,114,115,116,118,119,120,121,122,123,125,126,127,128,129,130,131,132,133,134,141,176,177,198,201,239,244,248,250,252,254,256,284,334,341,342,343,344,345,346,347,365,396,403,413,414,415,424,433,439,440,459,461,469,474,482,484,487,491,494,495,498,501,503,507,509,511,512,514,515,517,521,522,526,527,529,530,531,532,533,536,538,539,540,543,544,545,546,547,548,549,550,551,552,554,555,559,560,561,562,563,564,565,571,573,574,575,576,577,580,582,583,585,586,587,588,589,591,592,594,595,597,599,600,603,608,],[140,140,140,140,-149,-122,-124,-125,-128,-129,-130,-131,-132,-133,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-185,-120,140,140,-123,-126,140,-152,140,-216,-218,-220,-121,-150,-215,-217,-219,-221,-222,-224,-225,-113,-115,-163,-223,-226,-228,-112,-114,140,-182,-164,-128,140,-170,-160,140,-183,-207,-168,-171,140,-227,-165,-179,-207,-206,140,-207,-172,140,-163,140,-206,140,-207,140,-209,-206,140,-177,140,-166,-182,140,-209,-206,140,-208,-195,140,-209,-176,-184,-161,140,-208,-192,140,-209,-194,-208,-193,-207,-190,-208,-191,-189,-165,-207,-206,140,-207,-188,140,-206,140,-207,140,-206,140,140,-206,140,140,140,]),'DO':([86,88,107,108,112,114,115,116,118,119,120,121,122,123,125,126,127,128,129,130,131,132,133,134,141,176,177,198,201,239,244,248,250,252,254,256,284,334,341,342,343,344,345,346,347,365,396,403,413,414,415,424,433,439,440,459,461,469,474,482,484,487,491,494,495,498,501,503,507,509,511,512,514,515,517,521,522,526,527,529,530,531,532,533,536,538,539,540,543,544,545,546,547,548,549,550,551,552,554,555,559,560,561,562,563,564,565,571,573,574,575,576,577,580,582,583,585,586,587,588,589,591,592,594,595,597,599,600,603,608,],[141,141,141,141,-149,-122,-124,-125,-128,-129,-130,-131,-132,-133,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-185,-120,141,141,-123,-126,141,-152,141,-216,-218,-220,-121,-150,-215,-217,-219,-221,-222,-224,-225,-113,-115,-163,-223,-226,-228,-112,-114,141,-182,-164,-128,141,-170,-160,141,-183,-207,-168,-171,141,-227,-165,-179,-207,-206,141,-207,-172,141,-163,141,-206,141,-207,141,-209,-206,141,-177,141,-166,-182,141,-209,-206,141,-208,-195,141,-209,-176,-184,-161,141,-208,-192,141,-209,-194,-208,-193,-207,-190,-208,-191,-189,-165,-207,-206,141,-207,-188,141,-206,141,-207,141,-206,141,141,-206,141,141,141,]),'BREAK':([86,88,107,108,112,114,115,116,118,119,120,121,122,123,125,126,127,128,129,130,131,132,133,134,141,176,177,198,201,239,244,248,250,252,254,256,284,334,341,342,343,344,345,346,347,365,396,403,413,414,415,424,433,439,440,459,461,469,474,482,484,487,491,494,495,498,501,503,507,509,511,512,514,515,517,521,522,526,527,529,530,531,532,533,536,538,539,540,543,544,545,546,547,548,549,550,551,552,554,555,559,560,561,562,563,564,565,571,573,574,575,576,577,580,582,583,585,586,587,588,589,591,592,594,595,597,599,600,603,608,],[142,142,142,142,-149,-122,-124,-125,-128,-129,-130,-131,-132,-133,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-185,-120,142,142,-123,-126,142,-152,142,-216,-218,-220,-121,-150,-215,-217,-219,-221,-222,-224,-225,-113,-115,-163,-223,-226,-228,-112,-114,142,-182,-164,-128,142,-170,-160,142,-183,-207,-168,-171,142,-227,-165,-179,-207,-206,142,-207,-172,142,-163,142,-206,142,-207,142,-209,-206,142,-177,142,-166,-182,142,-209,-206,142,-208,-195,142,-209,-176,-184,-161,142,-208,-192,142,-209,-194,-208,-193,-207,-190,-208,-191,-189,-165,-207,-206,142,-207,-188,142,-206,142,-207,142,-206,142,142,-206,142,142,142,]),'CONTINUE':([86,88,107,108,112,114,115,116,118,119,120,121,122,123,125,126,127,128,129,130,131,132,133,134,141,176,177,198,201,239,244,248,250,252,254,256,284,334,341,342,343,344,345,346,347,365,396,403,413,414,415,424,433,439,440,459,461,469,474,482,484,487,491,494,495,498,501,503,507,509,511,512,514,515,517,521,522,526,527,529,530,531,532,533,536,538,539,540,543,544,545,546,547,548,549,550,551,552,554,555,559,560,561,562,563,564,565,571,573,574,575,576,577,580,582,583,585,586,587,588,589,591,592,594,595,597,599,600,603,608,],[143,143,143,143,-149,-122,-124,-125,-128,-129,-130,-131,-132,-133,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-185,-120,143,143,-123,-126,143,-152,143,-216,-218,-220,-121,-150,-215,-217,-219,-221,-222,-224,-225,-113,-115,-163,-223,-226,-228,-112,-114,143,-182,-164,-128,143,-170,-160,143,-183,-207,-168,-171,143,-227,-165,-179,-207,-206,143,-207,-172,143,-163,143,-206,143,-207,143,-209,-206,143,-177,143,-166,-182,143,-209,-206,143,-208,-195,143,-209,-176,-184,-161,143,-208,-192,143,-209,-194,-208,-193,-207,-190,-208,-191,-189,-165,-207,-206,143,-207,-188,143,-206,143,-207,143,-206,143,143,-206,143,143,143,]),'RETURN':([86,88,107,108,112,114,115,116,118,119,120,121,122,123,125,126,127,128,129,130,131,132,133,134,141,176,177,198,201,239,244,248,250,252,254,256,284,334,341,342,343,344,345,346,347,365,396,403,413,414,415,424,433,439,440,459,461,469,474,482,484,487,491,494,495,498,501,503,507,509,511,512,514,515,517,521,522,526,527,529,530,531,532,533,536,538,539,540,543,544,545,546,547,548,549,550,551,552,554,555,559,560,561,562,563,564,565,571,573,574,575,576,577,580,582,583,585,586,587,588,589,591,592,594,595,597,599,600,603,608,],[144,144,144,144,-149,-122,-124,-125,-128,-129,-130,-131,-132,-133,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-185,-120,144,144,-123,-126,144,-152,144,-216,-218,-220,-121,-150,-215,-217,-219,-221,-222,-224,-225,-113,-115,-163,-223,-226,-228,-112,-114,144,-182,-164,-128,144,-170,-160,144,-183,-207,-168,-171,144,-227,-165,-179,-207,-206,144,-207,-172,144,-163,144,-206,144,-207,144,-209,-206,144,-177,144,-166,-182,144,-209,-206,144,-208,-195,144,-209,-176,-184,-161,144,-208,-192,144,-209,-194,-208,-193,-207,-190,-208,-191,-189,-165,-207,-206,144,-207,-188,144,-206,144,-207,144,-206,144,144,-206,144,144,144,]),'THROW':([86,88,107,108,112,114,115,116,118,119,120,121,122,123,125,126,127,128,129,130,131,132,133,134,141,176,177,198,201,239,244,248,250,252,254,256,284,334,341,342,343,344,345,346,347,365,396,403,413,414,415,424,433,439,440,459,461,469,474,482,484,487,491,494,495,498,501,503,507,509,511,512,514,515,517,521,522,526,527,529,530,531,532,533,536,538,539,540,543,544,545,546,547,548,549,550,551,552,554,555,559,560,561,562,563,564,565,571,573,574,575,576,577,580,582,583,585,586,587,588,589,591,592,594,595,597,599,600,603,608,],[145,145,145,145,-149,-122,-124,-125,-128,-129,-130,-131,-132,-133,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-185,-120,145,145,-123,-126,145,-152,145,-216,-218,-220,-121,-150,-215,-217,-219,-221,-222,-224,-225,-113,-115,-163,-223,-226,-228,-112,-114,145,-182,-164,-128,145,-170,-160,145,-183,-207,-168,-171,145,-227,-165,-179,-207,-206,145,-207,-172,145,-163,145,-206,145,-207,145,-209,-206,145,-177,145,-166,-182,145,-209,-206,145,-208,-195,145,-209,-176,-184,-161,145,-208,-192,145,-209,-194,-208,-193,-207,-190,-208,-191,-189,-165,-207,-206,145,-207,-188,145,-206,145,-207,145,-206,145,145,-206,145,145,145,]),'TRY':([86,88,107,108,112,114,115,116,118,119,120,121,122,123,125,126,127,128,129,130,131,132,133,134,141,176,177,198,201,239,244,248,250,252,254,256,284,334,341,342,343,344,345,346,347,365,396,403,413,414,415,424,433,439,440,459,461,469,474,482,484,487,491,494,495,498,501,503,507,509,511,512,514,515,517,521,522,526,527,529,530,531,532,533,536,538,539,540,543,544,545,546,547,548,549,550,551,552,554,555,559,560,561,562,563,564,565,571,573,574,575,576,577,580,582,583,585,586,587,588,589,591,592,594,595,597,599,600,603,608,],[146,146,146,146,-149,-122,-124,-125,-128,-129,-130,-131,-132,-133,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-185,-120,146,146,-123,-126,146,-152,146,-216,-218,-220,-121,-150,-215,-217,-219,-221,-222,-224,-225,-113,-115,-163,-223,-226,-228,-112,-114,146,-182,-164,-128,146,-170,-160,146,-183,-207,-168,-171,146,-227,-165,-179,-207,-206,146,-207,-172,146,-163,146,-206,146,-207,146,-209,-206,146,-177,146,-166,-182,146,-209,-206,146,-208,-195,146,-209,-176,-184,-161,146,-208,-192,146,-209,-194,-208,-193,-207,-190,-208,-191,-189,-165,-207,-206,146,-207,-188,146,-206,146,-207,146,-206,146,146,-206,146,146,146,]),'NEW':([86,88,107,108,111,112,114,115,116,118,119,120,121,122,123,125,126,127,128,129,130,131,132,133,134,141,144,145,156,157,176,177,198,201,202,203,225,226,232,233,237,239,244,245,248,249,250,252,254,256,259,261,263,264,265,266,267,268,269,270,271,275,284,301,302,303,304,305,308,309,311,312,313,314,315,316,318,319,320,321,322,323,324,333,334,337,338,341,342,343,344,345,346,347,357,364,365,366,368,396,397,402,403,406,413,414,415,419,420,424,427,429,432,433,439,440,441,442,443,457,459,461,469,470,471,474,476,481,482,484,487,488,491,493,494,495,498,501,503,505,506,507,509,510,511,512,514,515,517,518,521,522,525,526,527,529,530,531,532,533,536,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,554,555,556,557,559,560,561,562,563,564,565,568,571,572,573,574,575,576,577,580,581,582,583,585,586,587,588,589,591,592,594,595,597,599,600,603,608,],[160,160,160,160,219,-149,-122,-124,-125,-128,-129,-130,-131,-132,-133,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-185,219,219,219,219,-120,160,160,-123,219,219,219,219,219,219,219,-126,160,219,-152,219,160,-216,-218,-220,219,219,219,-317,-318,-319,-320,-321,-322,-323,-324,219,-121,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,-150,219,160,-215,-217,-219,-221,-222,-224,-225,219,219,-113,219,219,-115,219,219,-163,-205,-223,-226,-228,219,219,-112,219,219,219,-114,160,-182,-205,219,160,219,-164,-128,160,219,160,-170,219,219,-160,160,-183,160,-207,160,-168,-171,160,-227,-165,219,160,-179,-207,160,-206,160,-207,-172,160,219,-163,160,-205,-206,160,-207,160,-209,-206,160,-177,160,-166,-182,-205,219,160,-209,-206,160,-208,-195,160,-209,-176,-184,-161,160,219,160,-208,-192,160,-209,-194,-208,-193,160,-207,160,-190,-208,-191,-189,-165,-207,160,-206,160,-207,-188,160,-206,160,-207,160,-206,160,160,-206,160,160,160,]),'INT_CONSTANT':([86,88,107,108,111,112,114,115,116,118,119,120,121,122,123,125,126,127,128,129,130,131,132,133,134,141,144,145,156,157,176,177,198,201,202,203,225,226,232,233,237,239,244,245,248,249,250,252,254,256,259,261,263,264,265,266,267,268,269,270,271,275,284,301,302,303,304,305,308,309,311,312,313,314,315,316,318,319,320,321,322,323,324,333,334,337,338,341,342,343,344,345,346,347,357,364,365,366,368,396,397,402,403,406,413,414,415,419,420,424,427,429,432,433,439,440,441,442,443,457,459,461,469,470,471,474,476,481,482,484,487,488,491,493,494,495,498,501,503,505,506,507,509,510,511,512,514,515,517,518,521,522,525,526,527,529,530,531,532,533,536,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,554,555,556,557,559,560,561,562,563,564,565,568,571,572,573,574,575,576,577,580,581,582,583,585,586,587,588,589,591,592,594,595,597,599,600,603,608,],[171,171,171,171,171,-149,-122,-124,-125,-128,-129,-130,-131,-132,-133,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-185,171,171,171,171,-120,171,171,-123,171,171,171,171,171,171,171,-126,171,171,-152,171,171,-216,-218,-220,171,171,171,-317,-318,-319,-320,-321,-322,-323,-324,171,-121,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,-150,171,171,-215,-217,-219,-221,-222,-224,-225,171,171,-113,171,171,-115,171,171,-163,-205,-223,-226,-228,171,171,-112,171,171,171,-114,171,-182,-205,171,171,171,-164,-128,171,171,171,-170,171,171,-160,171,-183,171,-207,171,-168,-171,171,-227,-165,171,171,-179,-207,171,-206,171,-207,-172,171,171,-163,171,-205,-206,171,-207,171,-209,-206,171,-177,171,-166,-182,-205,171,171,-209,-206,171,-208,-195,171,-209,-176,-184,-161,171,171,171,-208,-192,171,-209,-194,-208,-193,171,-207,171,-190,-208,-191,-189,-165,-207,171,-206,171,-207,-188,171,-206,171,-207,171,-206,171,171,-206,171,171,171,]),'FLOAT_CONSTANT':([86,88,107,108,111,112,114,115,116,118,119,120,121,122,123,125,126,127,128,129,130,131,132,133,134,141,144,145,156,157,176,177,198,201,202,203,225,226,232,233,237,239,244,245,248,249,250,252,254,256,259,261,263,264,265,266,267,268,269,270,271,275,284,301,302,303,304,305,308,309,311,312,313,314,315,316,318,319,320,321,322,323,324,333,334,337,338,341,342,343,344,345,346,347,357,364,365,366,368,396,397,402,403,406,413,414,415,419,420,424,427,429,432,433,439,440,441,442,443,457,459,461,469,470,471,474,476,481,482,484,487,488,491,493,494,495,498,501,503,505,506,507,509,510,511,512,514,515,517,518,521,522,525,526,527,529,530,531,532,533,536,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,554,555,556,557,559,560,561,562,563,564,565,568,571,572,573,574,575,576,577,580,581,582,583,585,586,587,588,589,591,592,594,595,597,599,600,603,608,],[172,172,172,172,172,-149,-122,-124,-125,-128,-129,-130,-131,-132,-133,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-185,172,172,172,172,-120,172,172,-123,172,172,172,172,172,172,172,-126,172,172,-152,172,172,-216,-218,-220,172,172,172,-317,-318,-319,-320,-321,-322,-323,-324,172,-121,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,-150,172,172,-215,-217,-219,-221,-222,-224,-225,172,172,-113,172,172,-115,172,172,-163,-205,-223,-226,-228,172,172,-112,172,172,172,-114,172,-182,-205,172,172,172,-164,-128,172,172,172,-170,172,172,-160,172,-183,172,-207,172,-168,-171,172,-227,-165,172,172,-179,-207,172,-206,172,-207,-172,172,172,-163,172,-205,-206,172,-207,172,-209,-206,172,-177,172,-166,-182,-205,172,172,-209,-206,172,-208,-195,172,-209,-176,-184,-161,172,172,172,-208,-192,172,-209,-194,-208,-193,172,-207,172,-190,-208,-191,-189,-165,-207,172,-206,172,-207,-188,172,-206,172,-207,172,-206,172,172,-206,172,172,172,]),'CHAR_CONSTANT':([86,88,107,108,111,112,114,115,116,118,119,120,121,122,123,125,126,127,128,129,130,131,132,133,134,141,144,145,156,157,176,177,198,201,202,203,225,226,232,233,237,239,244,245,248,249,250,252,254,256,259,261,263,264,265,266,267,268,269,270,271,275,284,301,302,303,304,305,308,309,311,312,313,314,315,316,318,319,320,321,322,323,324,333,334,337,338,341,342,343,344,345,346,347,357,364,365,366,368,396,397,402,403,406,413,414,415,419,420,424,427,429,432,433,439,440,441,442,443,457,459,461,469,470,471,474,476,481,482,484,487,488,491,493,494,495,498,501,503,505,506,507,509,510,511,512,514,515,517,518,521,522,525,526,527,529,530,531,532,533,536,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,554,555,556,557,559,560,561,562,563,564,565,568,571,572,573,574,575,576,577,580,581,582,583,585,586,587,588,589,591,592,594,595,597,599,600,603,608,],[173,173,173,173,173,-149,-122,-124,-125,-128,-129,-130,-131,-132,-133,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-185,173,173,173,173,-120,173,173,-123,173,173,173,173,173,173,173,-126,173,173,-152,173,173,-216,-218,-220,173,173,173,-317,-318,-319,-320,-321,-322,-323,-324,173,-121,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,-150,173,173,-215,-217,-219,-221,-222,-224,-225,173,173,-113,173,173,-115,173,173,-163,-205,-223,-226,-228,173,173,-112,173,173,173,-114,173,-182,-205,173,173,173,-164,-128,173,173,173,-170,173,173,-160,173,-183,173,-207,173,-168,-171,173,-227,-165,173,173,-179,-207,173,-206,173,-207,-172,173,173,-163,173,-205,-206,173,-207,173,-209,-206,173,-177,173,-166,-182,-205,173,173,-209,-206,173,-208,-195,173,-209,-176,-184,-161,173,173,173,-208,-192,173,-209,-194,-208,-193,173,-207,173,-190,-208,-191,-189,-165,-207,173,-206,173,-207,-188,173,-206,173,-207,173,-206,173,173,-206,173,173,173,]),'STR_CONSTANT':([86,88,107,108,111,112,114,115,116,118,119,120,121,122,123,125,126,127,128,129,130,131,132,133,134,141,144,145,156,157,176,177,198,201,202,203,225,226,232,233,237,239,244,245,248,249,250,252,254,256,259,261,263,264,265,266,267,268,269,270,271,275,284,301,302,303,304,305,308,309,311,312,313,314,315,316,318,319,320,321,322,323,324,333,334,337,338,341,342,343,344,345,346,347,357,364,365,366,368,396,397,402,403,406,413,414,415,419,420,424,427,429,432,433,439,440,441,442,443,457,459,461,469,470,471,474,476,481,482,484,487,488,491,493,494,495,498,501,503,505,506,507,509,510,511,512,514,515,517,518,521,522,525,526,527,529,530,531,532,533,536,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,554,555,556,557,559,560,561,562,563,564,565,568,571,572,573,574,575,576,577,580,581,582,583,585,586,587,588,589,591,592,594,595,597,599,600,603,608,],[174,174,174,174,174,-149,-122,-124,-125,-128,-129,-130,-131,-132,-133,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-185,174,174,174,174,-120,174,174,-123,174,174,174,174,174,174,174,-126,174,174,-152,174,174,-216,-218,-220,174,174,174,-317,-318,-319,-320,-321,-322,-323,-324,174,-121,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,-150,174,174,-215,-217,-219,-221,-222,-224,-225,174,174,-113,174,174,-115,174,174,-163,-205,-223,-226,-228,174,174,-112,174,174,174,-114,174,-182,-205,174,174,174,-164,-128,174,174,174,-170,174,174,-160,174,-183,174,-207,174,-168,-171,174,-227,-165,174,174,-179,-207,174,-206,174,-207,-172,174,174,-163,174,-205,-206,174,-207,174,-209,-206,174,-177,174,-166,-182,-205,174,174,-209,-206,174,-208,-195,174,-209,-176,-184,-161,174,174,174,-208,-192,174,-209,-194,-208,-193,174,-207,174,-190,-208,-191,-189,-165,-207,174,-206,174,-207,-188,174,-206,174,-207,174,-206,174,174,-206,174,174,174,]),'NULL':([86,88,107,108,111,112,114,115,116,118,119,120,121,122,123,125,126,127,128,129,130,131,132,133,134,141,144,145,156,157,176,177,198,201,202,203,225,226,232,233,237,239,244,245,248,249,250,252,254,256,259,261,263,264,265,266,267,268,269,270,271,275,284,301,302,303,304,305,308,309,311,312,313,314,315,316,318,319,320,321,322,323,324,333,334,337,338,341,342,343,344,345,346,347,357,364,365,366,368,396,397,402,403,406,413,414,415,419,420,424,427,429,432,433,439,440,441,442,443,457,459,461,469,470,471,474,476,481,482,484,487,488,491,493,494,495,498,501,503,505,506,507,509,510,511,512,514,515,517,518,521,522,525,526,527,529,530,531,532,533,536,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,554,555,556,557,559,560,561,562,563,564,565,568,571,572,573,574,575,576,577,580,581,582,583,585,586,587,588,589,591,592,594,595,597,599,600,603,608,],[175,175,175,175,175,-149,-122,-124,-125,-128,-129,-130,-131,-132,-133,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-185,175,175,175,175,-120,175,175,-123,175,175,175,175,175,175,175,-126,175,175,-152,175,175,-216,-218,-220,175,175,175,-317,-318,-319,-320,-321,-322,-323,-324,175,-121,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,-150,175,175,-215,-217,-219,-221,-222,-224,-225,175,175,-113,175,175,-115,175,175,-163,-205,-223,-226,-228,175,175,-112,175,175,175,-114,175,-182,-205,175,175,175,-164,-128,175,175,175,-170,175,175,-160,175,-183,175,-207,175,-168,-171,175,-227,-165,175,175,-179,-207,175,-206,175,-207,-172,175,175,-163,175,-205,-206,175,-207,175,-209,-206,175,-177,175,-166,-182,-205,175,175,-209,-206,175,-208,-195,175,-209,-176,-184,-161,175,175,175,-208,-192,175,-209,-194,-208,-193,175,-207,175,-190,-208,-191,-189,-165,-207,175,-206,175,-207,-188,175,-206,175,-207,175,-206,175,175,-206,175,175,175,]),'LAMBDA':([111,144,145,202,203,237,245,249,259,261,263,264,265,266,267,268,269,270,271,275,301,304,333,337,357,364,397,402,406,420,441,442,457,470,476,481,505,518,525,541,542,556,],[208,208,208,208,208,208,208,208,208,208,208,-317,-318,-319,-320,-321,-322,-323,-324,208,208,208,208,208,208,208,208,208,-205,208,-205,208,208,208,208,208,208,208,-205,-205,208,208,]),'BITWISE_NOT':([111,144,145,156,157,202,203,225,226,232,233,237,245,249,259,261,263,264,265,266,267,268,269,270,271,275,301,302,303,304,305,308,309,311,312,313,314,315,316,318,319,320,321,322,323,324,333,337,357,364,366,368,397,402,406,419,420,427,429,432,441,442,457,470,476,481,505,518,525,541,542,556,],[232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,-317,-318,-319,-320,-321,-322,-323,-324,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,-205,232,232,232,232,232,-205,232,232,232,232,232,232,232,-205,-205,232,232,]),'LOGICAL_NOT':([111,144,145,156,157,202,203,225,226,232,233,237,245,249,259,261,263,264,265,266,267,268,269,270,271,275,301,302,303,304,305,308,309,311,312,313,314,315,316,318,319,320,321,322,323,324,333,337,357,364,366,368,397,402,406,419,420,427,429,432,441,442,457,470,476,481,505,518,525,541,542,556,],[233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,-317,-318,-319,-320,-321,-322,-323,-324,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,-205,233,233,233,233,233,-205,233,233,233,233,233,233,233,-205,-205,233,233,]),'CASE':([112,114,115,116,118,119,120,121,122,123,125,126,127,128,129,130,131,132,133,134,176,201,239,248,252,254,256,284,334,341,342,343,344,345,346,347,413,414,415,459,461,474,475,482,487,494,495,496,497,499,501,507,515,516,517,531,539,544,547,548,550,552,554,559,560,562,563,564,565,573,574,575,576,586,],[-149,-122,-124,-125,-128,-129,-130,-131,-132,-133,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-120,-123,-126,-152,-216,-218,-220,-121,-150,-215,-217,-219,-221,-222,-224,-225,-223,-226,-228,-164,-128,-170,-178,-160,-183,-168,-171,-178,-173,518,-227,-179,-172,-174,-175,-209,-166,-209,-208,-195,-209,-184,-161,-208,-192,-209,-194,-208,-193,-190,-208,-191,-189,-188,]),'DEFAULT':([112,114,115,116,118,119,120,121,122,123,125,126,127,128,129,130,131,132,133,134,176,201,239,248,252,254,256,284,334,341,342,343,344,345,346,347,413,414,415,459,461,474,475,482,487,494,495,496,497,499,501,507,515,516,517,531,539,544,547,548,550,552,554,559,560,562,563,564,565,573,574,575,576,586,],[-149,-122,-124,-125,-128,-129,-130,-131,-132,-133,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-120,-123,-126,-152,-216,-218,-220,-121,-150,-215,-217,-219,-221,-222,-224,-225,-223,-226,-228,-164,-128,-170,-178,-160,-183,-168,-171,-178,-173,519,-227,-179,-172,-174,-175,-209,-166,-209,-208,-195,-209,-184,-161,-208,-192,-209,-194,-208,-193,-190,-208,-191,-189,-188,]),'ELSE':([112,125,126,127,128,129,130,131,132,133,134,176,248,252,254,256,284,341,342,343,344,345,346,347,413,414,415,460,461,462,463,464,465,474,483,494,495,501,504,515,552,553,566,567,578,593,596,598,601,602,604,605,606,607,609,610,611,612,613,614,615,616,617,],[-149,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-120,-152,-216,-218,-220,-121,-215,-217,-219,-221,-222,-224,-225,-223,-226,-228,-167,-134,-135,-136,-137,-138,-170,503,-168,-171,-227,-151,-172,-184,-167,577,-183,-180,-209,-166,-209,-208,-203,-209,-162,-208,-200,-209,-202,-208,-201,-198,-208,-199,-197,-196,]),'FINALLY':([176,258,284,345,347,414,501,],[-120,348,-121,348,-225,-226,-227,]),'CATCH':([176,258,284,345,347,414,501,],[-120,349,-121,349,-225,-226,-227,]),'LAMBDA_TOKEN':([371,430,],[431,452,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Goal':([0,],[1,]),'CompilationUnit':([0,],[2,]),'PackageDeclaration':([0,],[3,]),'ImportDeclarations':([0,3,],[4,15,]),'TypeDeclarations':([0,3,4,15,],[5,16,17,27,]),'ImportDeclaration':([0,3,4,15,],[8,8,18,18,]),'TypeDeclaration':([0,3,4,5,15,16,17,27,],[9,9,9,19,9,19,19,19,]),'SingleTypeImportDeclaration':([0,3,4,15,],[10,10,10,10,]),'TypeImportOnDemandDeclaration':([0,3,4,15,],[11,11,11,11,]),'ClassDeclaration':([0,3,4,5,15,16,17,27,],[12,12,12,12,12,12,12,12,]),'Name':([6,13,34,35,42,49,85,86,88,93,107,108,111,144,145,156,157,160,177,197,198,202,203,219,225,226,232,233,237,244,245,249,250,259,261,263,275,285,287,300,301,302,303,304,305,308,309,311,312,313,314,315,316,317,318,319,320,321,322,323,324,333,337,338,357,364,366,368,397,402,416,419,420,427,429,432,439,442,443,457,469,470,471,476,481,484,488,493,498,505,506,510,512,517,518,522,527,530,533,538,542,543,546,549,555,556,557,561,568,572,581,583,587,589,592,595,597,600,603,608,],[20,25,40,66,66,66,40,154,154,66,154,154,211,211,211,274,274,40,154,40,154,211,297,40,274,274,274,274,211,335,211,211,335,211,211,211,297,66,66,66,211,274,274,211,274,274,274,274,274,274,274,274,274,66,274,274,274,274,274,274,274,211,211,410,211,211,274,274,211,211,66,274,211,274,274,274,335,211,335,211,335,211,335,211,211,335,335,335,154,211,410,335,335,154,211,335,335,335,335,335,211,335,335,335,335,211,335,335,335,335,335,335,335,335,335,335,335,335,335,335,]),'SimpleName':([6,13,34,35,42,49,85,86,88,93,107,108,111,144,145,156,157,160,177,197,198,202,203,219,225,226,232,233,237,244,245,249,250,259,261,263,275,285,287,300,301,302,303,304,305,308,309,311,312,313,314,315,316,317,318,319,320,321,322,323,324,333,337,338,357,364,366,368,397,402,416,419,420,427,429,432,439,442,443,457,469,470,471,476,481,484,488,493,498,505,506,510,512,517,518,522,527,530,533,538,542,543,546,549,555,556,557,561,568,572,581,583,587,589,592,595,597,600,603,608,],[21,21,21,55,55,55,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'QualifiedName':([6,13,34,35,42,49,85,86,88,93,107,108,111,144,145,156,157,160,177,197,198,202,203,219,225,226,232,233,237,244,245,249,250,259,261,263,275,285,287,300,301,302,303,304,305,308,309,311,312,313,314,315,316,317,318,319,320,321,322,323,324,333,337,338,357,364,366,368,397,402,416,419,420,427,429,432,439,442,443,457,469,470,471,476,481,484,488,493,498,505,506,510,512,517,518,522,527,530,533,538,542,543,546,549,555,556,557,561,568,572,581,583,587,589,592,595,597,600,603,608,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'Identifier':([6,13,14,29,31,34,35,42,49,52,58,79,81,85,86,88,93,107,108,111,124,142,143,144,145,156,157,160,177,189,197,198,202,203,219,225,226,232,233,237,238,244,245,249,250,259,261,263,275,281,285,287,300,301,302,303,304,305,306,307,308,309,311,312,313,314,315,316,317,318,319,320,321,322,323,324,332,333,337,338,357,364,366,368,397,402,416,419,420,427,429,432,439,442,443,457,469,470,471,476,481,484,488,493,498,505,506,510,512,517,518,522,527,530,533,538,542,543,546,549,555,556,557,561,568,572,581,583,587,589,592,595,597,600,603,608,],[23,23,26,36,36,23,23,23,23,91,97,91,97,23,135,135,23,135,135,23,243,251,253,23,23,23,23,23,135,243,23,135,23,23,23,23,23,23,23,23,331,135,23,23,135,23,23,23,23,356,23,23,23,23,23,23,23,23,376,377,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,243,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,466,23,23,23,135,23,23,23,23,466,23,23,135,23,23,23,135,135,23,135,135,135,135,466,23,135,135,135,466,23,23,135,23,23,23,466,466,466,466,466,466,466,466,466,]),'Inherit':([26,],[32,]),'ClassBody':([26,32,],[33,38,]),'ClassType':([34,35,42,49,85,86,88,93,107,108,160,177,197,198,219,285,287,300,317,338,416,498,506,517,],[39,63,63,63,106,63,63,63,63,63,282,63,290,63,310,63,63,63,63,63,63,63,63,63,]),'ClassBodyDeclarations':([35,],[42,]),'ClassBodyDeclaration':([35,42,],[43,76,]),'ClassMemberDeclaration':([35,42,],[44,44,]),'ConstructorDeclaration':([35,42,],[45,45,]),'StaticInitializer':([35,42,],[46,46,]),'FieldDeclaration':([35,42,],[47,47,]),'MethodDeclaration':([35,42,],[48,48,]),'Modifiers':([35,42,],[49,49,]),'ConstructorDeclarator':([35,42,49,],[50,50,78,]),'Type':([35,42,49,86,88,93,107,108,177,198,285,287,300,338,416,498,506,517,],[52,52,79,124,124,189,124,124,124,124,189,189,189,124,189,124,124,124,]),'MethodHeader':([35,42,],[53,53,]),'Modifier':([35,42,49,],[54,54,80,]),'PrimitiveType':([35,42,49,86,88,93,107,108,160,177,198,203,219,275,285,287,300,317,338,416,498,506,517,],[56,56,56,56,56,56,56,56,283,56,56,296,283,296,56,56,56,387,56,56,56,56,56,]),'ReferenceType':([35,42,49,86,88,93,107,108,177,198,285,287,300,317,338,416,498,506,517,],[57,57,57,57,57,57,57,57,57,57,57,57,57,386,57,57,57,57,57,]),'NumericType':([35,42,49,86,88,93,107,108,160,177,198,203,219,275,285,287,300,317,338,416,498,506,517,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'ArrayType':([35,42,49,86,88,93,107,108,177,198,285,287,300,317,338,416,498,506,517,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'IntegralType':([35,42,49,86,88,93,107,108,160,177,198,203,219,275,285,287,300,317,338,416,498,506,517,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'FloatingPointType':([35,42,49,86,88,93,107,108,160,177,198,203,219,275,285,287,300,317,338,416,498,506,517,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'FieldMark':([44,],[77,]),'Throws':([50,78,90,96,102,103,],[83,99,181,192,195,196,]),'ConstructorBody':([50,78,83,99,],[84,100,104,193,]),'Block':([51,86,88,92,107,108,146,177,198,244,250,348,431,439,452,469,477,484,498,512,517,522,527,530,533,538,543,546,549,555,561,583,587,589,592,595,597,600,603,608,],[87,125,125,184,125,125,258,125,125,125,125,415,453,125,479,125,501,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,]),'VariableDeclaratorId':([52,79,124,189,332,],[89,101,242,288,242,]),'MethodDeclarator':([52,58,79,81,],[90,96,102,103,]),'MethodDeclMark2':([53,],[92,]),'Dims':([56,66,154,296,297,387,410,],[94,98,98,367,369,94,98,]),'ClassTypeList':([85,],[105,]),'ExplicitConstructorInvocation':([86,],[107,]),'BlockStatements':([86,88,107,498,],[108,177,198,517,]),'BlockStatement':([86,88,107,108,177,198,498,517,],[114,114,114,201,201,201,114,201,]),'LocalVariableDeclarationStatement':([86,88,107,108,177,198,498,517,],[115,115,115,115,115,115,115,115,]),'Statement':([86,88,107,108,177,198,244,250,439,469,484,498,512,517,522,527,530,533,538,543,546,549,555,561,583,587,589,592,595,597,600,603,608,],[116,116,116,116,116,116,334,340,459,487,334,116,531,116,539,544,547,550,459,559,562,564,487,574,531,539,544,547,550,559,562,564,574,]),'LocalVariableDeclaration':([86,88,107,108,177,198,338,498,506,517,],[117,117,117,117,117,117,408,117,408,117,]),'StatementWithoutTrailingSubstatement':([86,88,107,108,177,198,244,250,439,469,484,498,512,517,522,527,530,533,538,543,546,549,555,561,583,587,589,592,595,597,600,603,608,],[118,118,118,118,118,118,118,118,461,118,461,118,118,118,118,118,118,118,461,118,118,118,461,118,461,461,461,461,461,461,461,461,461,]),'LabeledStatement':([86,88,107,108,177,198,244,250,439,469,484,498,512,517,522,527,530,533,538,543,546,549,555,561,583,587,589,592,595,597,600,603,608,],[119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,]),'IfThenStatement':([86,88,107,108,177,198,244,250,439,469,484,498,512,517,522,527,530,533,538,543,546,549,555,561,583,587,589,592,595,597,600,603,608,],[120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,]),'IfThenElseStatement':([86,88,107,108,177,198,244,250,439,469,484,498,512,517,522,527,530,533,538,543,546,549,555,561,583,587,589,592,595,597,600,603,608,],[121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,]),'WhileStatement':([86,88,107,108,177,198,244,250,439,469,484,498,512,517,522,527,530,533,538,543,546,549,555,561,583,587,589,592,595,597,600,603,608,],[122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,]),'ForStatement':([86,88,107,108,177,198,244,250,439,469,484,498,512,517,522,527,530,533,538,543,546,549,555,561,583,587,589,592,595,597,600,603,608,],[123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,]),'EmptyStatement':([86,88,107,108,177,198,244,250,439,469,484,498,512,517,522,527,530,533,538,543,546,549,555,561,583,587,589,592,595,597,600,603,608,],[126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,]),'ExpressionStatement':([86,88,107,108,177,198,244,250,439,469,484,498,512,517,522,527,530,533,538,543,546,549,555,561,583,587,589,592,595,597,600,603,608,],[127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,]),'SwitchStatement':([86,88,107,108,177,198,244,250,439,469,484,498,512,517,522,527,530,533,538,543,546,549,555,561,583,587,589,592,595,597,600,603,608,],[128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,]),'DoStatement':([86,88,107,108,177,198,244,250,439,469,484,498,512,517,522,527,530,533,538,543,546,549,555,561,583,587,589,592,595,597,600,603,608,],[129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,]),'BreakStatement':([86,88,107,108,177,198,244,250,439,469,484,498,512,517,522,527,530,533,538,543,546,549,555,561,583,587,589,592,595,597,600,603,608,],[130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,]),'ContinueStatement':([86,88,107,108,177,198,244,250,439,469,484,498,512,517,522,527,530,533,538,543,546,549,555,561,583,587,589,592,595,597,600,603,608,],[131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,]),'ReturnStatement':([86,88,107,108,177,198,244,250,439,469,484,498,512,517,522,527,530,533,538,543,546,549,555,561,583,587,589,592,595,597,600,603,608,],[132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,]),'ThrowStatement':([86,88,107,108,177,198,244,250,439,469,484,498,512,517,522,527,530,533,538,543,546,549,555,561,583,587,589,592,595,597,600,603,608,],[133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,]),'TryStatement':([86,88,107,108,177,198,244,250,439,469,484,498,512,517,522,527,530,533,538,543,546,549,555,561,583,587,589,592,595,597,600,603,608,],[134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,]),'StatementExpression':([86,88,107,108,177,198,244,250,338,439,443,469,471,484,488,493,498,506,510,512,517,522,527,530,533,538,543,546,549,555,557,561,568,572,581,583,587,589,592,595,597,600,603,608,],[139,139,139,139,139,139,139,139,409,139,473,139,409,139,409,409,139,409,409,139,139,139,139,139,139,139,139,139,139,139,409,139,409,409,409,139,139,139,139,139,139,139,139,139,]),'Assignment':([86,88,107,108,111,144,145,177,198,202,203,237,244,245,249,250,259,261,263,275,301,304,333,337,338,357,364,397,402,420,439,442,443,457,469,470,471,476,481,484,488,493,498,505,506,510,512,517,518,522,527,530,533,538,542,543,546,549,555,556,557,561,568,572,581,583,587,589,592,595,597,600,603,608,],[147,147,147,147,207,207,207,147,147,207,207,207,147,207,207,147,207,207,207,207,207,207,207,207,147,207,207,207,207,207,147,207,147,207,147,207,147,207,207,147,147,147,147,207,147,147,147,147,207,147,147,147,147,147,207,147,147,147,147,207,147,147,147,147,147,147,147,147,147,147,147,147,147,147,]),'PreIncrementExpression':([86,88,107,108,111,144,145,156,157,177,198,202,203,225,226,232,233,237,244,245,249,250,259,261,263,275,301,302,303,304,305,308,309,311,312,313,314,315,316,318,319,320,321,322,323,324,333,337,338,357,364,368,397,402,420,427,432,439,442,443,457,469,470,471,476,481,484,488,493,498,505,506,510,512,517,518,522,527,530,533,538,542,543,546,549,555,556,557,561,568,572,581,583,587,589,592,595,597,600,603,608,],[148,148,148,148,228,228,228,228,228,148,148,228,228,228,228,228,228,228,148,228,228,148,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,148,228,228,228,228,228,228,228,228,148,228,148,228,148,228,148,228,228,148,148,148,148,228,148,148,148,148,228,148,148,148,148,148,228,148,148,148,148,228,148,148,148,148,148,148,148,148,148,148,148,148,148,148,]),'PreDecrementExpression':([86,88,107,108,111,144,145,156,157,177,198,202,203,225,226,232,233,237,244,245,249,250,259,261,263,275,301,302,303,304,305,308,309,311,312,313,314,315,316,318,319,320,321,322,323,324,333,337,338,357,364,368,397,402,420,427,432,439,442,443,457,469,470,471,476,481,484,488,493,498,505,506,510,512,517,518,522,527,530,533,538,542,543,546,549,555,556,557,561,568,572,581,583,587,589,592,595,597,600,603,608,],[149,149,149,149,229,229,229,229,229,149,149,229,229,229,229,229,229,229,149,229,229,149,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,149,229,229,229,229,229,229,229,229,149,229,149,229,149,229,149,229,229,149,149,149,149,229,149,149,149,149,229,149,149,149,149,149,229,149,149,149,149,229,149,149,149,149,149,149,149,149,149,149,149,149,149,149,]),'PostIncrementExpression':([86,88,107,108,111,144,145,156,157,177,198,202,203,225,226,232,233,237,244,245,249,250,259,261,263,275,301,302,303,304,305,308,309,311,312,313,314,315,316,318,319,320,321,322,323,324,333,337,338,357,364,366,368,397,402,419,420,427,429,432,439,442,443,457,469,470,471,476,481,484,488,493,498,505,506,510,512,517,518,522,527,530,533,538,542,543,546,549,555,556,557,561,568,572,581,583,587,589,592,595,597,600,603,608,],[150,150,150,150,235,235,235,235,235,150,150,235,235,235,235,235,235,235,150,235,235,150,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,150,235,235,235,235,235,235,235,235,235,235,235,150,235,150,235,150,235,150,235,235,150,150,150,150,235,150,150,150,150,235,150,150,150,150,150,235,150,150,150,150,235,150,150,150,150,150,150,150,150,150,150,150,150,150,150,]),'PostDecrementExpression':([86,88,107,108,111,144,145,156,157,177,198,202,203,225,226,232,233,237,244,245,249,250,259,261,263,275,301,302,303,304,305,308,309,311,312,313,314,315,316,318,319,320,321,322,323,324,333,337,338,357,364,366,368,397,402,419,420,427,429,432,439,442,443,457,469,470,471,476,481,484,488,493,498,505,506,510,512,517,518,522,527,530,533,538,542,543,546,549,555,556,557,561,568,572,581,583,587,589,592,595,597,600,603,608,],[151,151,151,151,236,236,236,236,236,151,151,236,236,236,236,236,236,236,151,236,236,151,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,151,236,236,236,236,236,236,236,236,236,236,236,151,236,151,236,151,236,151,236,236,151,151,151,151,236,151,151,151,151,236,151,151,151,151,151,236,151,151,151,151,236,151,151,151,151,151,151,151,151,151,151,151,151,151,151,]),'MethodInvocation':([86,88,107,108,111,144,145,156,157,177,198,202,203,225,226,232,233,237,244,245,249,250,259,261,263,275,301,302,303,304,305,308,309,311,312,313,314,315,316,318,319,320,321,322,323,324,333,337,338,357,364,366,368,397,402,419,420,427,429,432,439,442,443,457,469,470,471,476,481,484,488,493,498,505,506,510,512,517,518,522,527,530,533,538,542,543,546,549,555,556,557,561,568,572,581,583,587,589,592,595,597,600,603,608,],[152,152,152,152,218,218,218,218,218,152,152,218,218,218,218,218,218,218,152,218,218,152,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,152,218,218,218,218,218,218,218,218,218,218,218,152,218,152,218,152,218,152,218,218,152,152,152,152,218,152,152,152,152,218,152,152,152,152,152,218,152,152,152,152,218,152,152,152,152,152,152,152,152,152,152,152,152,152,152,]),'ClassInstanceCreationExpression':([86,88,107,108,111,144,145,156,157,177,198,202,203,225,226,232,233,237,244,245,249,250,259,261,263,275,301,302,303,304,305,308,309,311,312,313,314,315,316,318,319,320,321,322,323,324,333,337,338,357,364,366,368,397,402,419,420,427,429,432,439,442,443,457,469,470,471,476,481,484,488,493,498,505,506,510,512,517,518,522,527,530,533,538,542,543,546,549,555,556,557,561,568,572,581,583,587,589,592,595,597,600,603,608,],[153,153,153,153,217,217,217,217,217,153,153,217,217,217,217,217,217,217,153,217,217,153,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,153,217,217,217,217,217,217,217,217,217,217,217,153,217,153,217,153,217,153,217,217,153,153,153,153,217,153,153,153,153,217,153,153,153,153,153,217,153,153,153,153,217,153,153,153,153,153,153,153,153,153,153,153,153,153,153,]),'LeftHandSide':([86,88,107,108,111,144,145,177,198,202,203,237,244,245,249,250,259,261,263,275,301,304,333,337,338,357,364,397,402,420,439,442,443,457,469,470,471,476,481,484,488,493,498,505,506,510,512,517,518,522,527,530,533,538,542,543,546,549,555,556,557,561,568,572,581,583,587,589,592,595,597,600,603,608,],[155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,]),'PostfixExpression':([86,88,107,108,111,144,145,156,157,177,198,202,203,225,226,232,233,237,244,245,249,250,259,261,263,275,301,302,303,304,305,308,309,311,312,313,314,315,316,318,319,320,321,322,323,324,333,337,338,357,364,366,368,397,402,419,420,427,429,432,439,442,443,457,469,470,471,476,481,484,488,493,498,505,506,510,512,517,518,522,527,530,533,538,542,543,546,549,555,556,557,561,568,572,581,583,587,589,592,595,597,600,603,608,],[158,158,158,158,231,231,231,231,231,158,158,231,231,231,231,231,231,231,158,231,231,158,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,158,231,231,231,231,231,231,231,231,231,231,231,158,231,158,231,158,231,158,231,231,158,158,158,158,231,158,158,158,158,231,158,158,158,158,158,231,158,158,158,158,231,158,158,158,158,158,158,158,158,158,158,158,158,158,158,]),'Primary':([86,88,107,108,111,144,145,156,157,177,198,202,203,225,226,232,233,237,244,245,249,250,259,261,263,275,301,302,303,304,305,308,309,311,312,313,314,315,316,318,319,320,321,322,323,324,333,337,338,357,364,366,368,397,402,419,420,427,429,432,439,442,443,457,469,470,471,476,481,484,488,493,498,505,506,510,512,517,518,522,527,530,533,538,542,543,546,549,555,556,557,561,568,572,581,583,587,589,592,595,597,600,603,608,],[159,159,159,159,213,213,213,273,273,159,159,213,213,273,273,273,273,213,159,213,213,159,213,213,213,213,213,273,273,213,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,213,213,159,213,213,273,273,213,213,273,213,273,273,273,159,213,159,213,159,213,159,213,213,159,159,159,159,213,159,159,159,159,213,159,159,159,159,159,213,159,159,159,159,213,159,159,159,159,159,159,159,159,159,159,159,159,159,159,]),'FieldAccess':([86,88,107,108,111,144,145,156,157,177,198,202,203,225,226,232,233,237,244,245,249,250,259,261,263,275,301,302,303,304,305,308,309,311,312,313,314,315,316,318,319,320,321,322,323,324,333,337,338,357,364,366,368,397,402,419,420,427,429,432,439,442,443,457,469,470,471,476,481,484,488,493,498,505,506,510,512,517,518,522,527,530,533,538,542,543,546,549,555,556,557,561,568,572,581,583,587,589,592,595,597,600,603,608,],[161,161,161,161,161,161,161,276,276,161,161,161,161,276,276,276,276,161,161,161,161,161,161,161,161,161,161,276,276,161,276,276,276,276,276,276,276,276,276,276,276,276,276,276,276,276,161,161,161,161,161,276,276,161,161,276,161,276,276,276,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,]),'ArrayAccess':([86,88,107,108,111,144,145,156,157,177,198,202,203,225,226,232,233,237,244,245,249,250,259,261,263,275,301,302,303,304,305,308,309,311,312,313,314,315,316,318,319,320,321,322,323,324,333,337,338,357,364,366,368,397,402,419,420,427,429,432,439,442,443,457,469,470,471,476,481,484,488,493,498,505,506,510,512,517,518,522,527,530,533,538,542,543,546,549,555,556,557,561,568,572,581,583,587,589,592,595,597,600,603,608,],[162,162,162,162,162,162,162,277,277,162,162,162,162,277,277,277,277,162,162,162,162,162,162,162,162,162,162,277,277,162,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,162,162,162,162,162,277,277,162,162,277,162,277,277,277,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,]),'PrimaryNoNewArray':([86,88,107,108,111,144,145,156,157,177,198,202,203,225,226,232,233,237,244,245,249,250,259,261,263,275,301,302,303,304,305,308,309,311,312,313,314,315,316,318,319,320,321,322,323,324,333,337,338,357,364,366,368,397,402,419,420,427,429,432,439,442,443,457,469,470,471,476,481,484,488,493,498,505,506,510,512,517,518,522,527,530,533,538,542,543,546,549,555,556,557,561,568,572,581,583,587,589,592,595,597,600,603,608,],[163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,]),'ArrayCreationExpression':([86,88,107,108,111,144,145,156,157,177,198,202,203,225,226,232,233,237,244,245,249,250,259,261,263,275,301,302,303,304,305,308,309,311,312,313,314,315,316,318,319,320,321,322,323,324,333,337,338,357,364,366,368,397,402,419,420,427,429,432,439,442,443,457,469,470,471,476,481,484,488,493,498,505,506,510,512,517,518,522,527,530,533,538,542,543,546,549,555,556,557,561,568,572,581,583,587,589,592,595,597,600,603,608,],[164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,]),'Literal':([86,88,107,108,111,144,145,156,157,177,198,202,203,225,226,232,233,237,244,245,249,250,259,261,263,275,301,302,303,304,305,308,309,311,312,313,314,315,316,318,319,320,321,322,323,324,333,337,338,357,364,366,368,397,402,419,420,427,429,432,439,442,443,457,469,470,471,476,481,484,488,493,498,505,506,510,512,517,518,522,527,530,533,538,542,543,546,549,555,556,557,561,568,572,581,583,587,589,592,595,597,600,603,608,],[165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,]),'IntegerConst':([86,88,107,108,111,144,145,156,157,177,198,202,203,225,226,232,233,237,244,245,249,250,259,261,263,275,301,302,303,304,305,308,309,311,312,313,314,315,316,318,319,320,321,322,323,324,333,337,338,357,364,366,368,397,402,419,420,427,429,432,439,442,443,457,469,470,471,476,481,484,488,493,498,505,506,510,512,517,518,522,527,530,533,538,542,543,546,549,555,556,557,561,568,572,581,583,587,589,592,595,597,600,603,608,],[166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,]),'FloatConst':([86,88,107,108,111,144,145,156,157,177,198,202,203,225,226,232,233,237,244,245,249,250,259,261,263,275,301,302,303,304,305,308,309,311,312,313,314,315,316,318,319,320,321,322,323,324,333,337,338,357,364,366,368,397,402,419,420,427,429,432,439,442,443,457,469,470,471,476,481,484,488,493,498,505,506,510,512,517,518,522,527,530,533,538,542,543,546,549,555,556,557,561,568,572,581,583,587,589,592,595,597,600,603,608,],[167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,]),'CharConst':([86,88,107,108,111,144,145,156,157,177,198,202,203,225,226,232,233,237,244,245,249,250,259,261,263,275,301,302,303,304,305,308,309,311,312,313,314,315,316,318,319,320,321,322,323,324,333,337,338,357,364,366,368,397,402,419,420,427,429,432,439,442,443,457,469,470,471,476,481,484,488,493,498,505,506,510,512,517,518,522,527,530,533,538,542,543,546,549,555,556,557,561,568,572,581,583,587,589,592,595,597,600,603,608,],[168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,]),'StringConst':([86,88,107,108,111,144,145,156,157,177,198,202,203,225,226,232,233,237,244,245,249,250,259,261,263,275,301,302,303,304,305,308,309,311,312,313,314,315,316,318,319,320,321,322,323,324,333,337,338,357,364,366,368,397,402,419,420,427,429,432,439,442,443,457,469,470,471,476,481,484,488,493,498,505,506,510,512,517,518,522,527,530,533,538,542,543,546,549,555,556,557,561,568,572,581,583,587,589,592,595,597,600,603,608,],[169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,]),'NullConst':([86,88,107,108,111,144,145,156,157,177,198,202,203,225,226,232,233,237,244,245,249,250,259,261,263,275,301,302,303,304,305,308,309,311,312,313,314,315,316,318,319,320,321,322,323,324,333,337,338,357,364,366,368,397,402,419,420,427,429,432,439,442,443,457,469,470,471,476,481,484,488,493,498,505,506,510,512,517,518,522,527,530,533,538,542,543,546,549,555,556,557,561,568,572,581,583,587,589,592,595,597,600,603,608,],[170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,]),'MethodBody':([92,],[183,]),'FormalParameterList':([93,285,300,],[186,361,370,]),'FormalParameter':([93,285,287,300,416,],[188,188,362,188,446,]),'Expression':([111,144,145,202,203,237,245,249,259,261,275,301,304,333,337,357,364,397,402,420,442,457,470,476,481,505,518,542,556,],[204,255,257,294,295,294,336,339,294,353,355,372,353,400,404,294,425,294,400,294,472,400,489,500,502,523,535,558,569,]),'AssignmentExpression':([111,144,145,202,203,237,245,249,259,261,263,275,301,304,333,337,357,364,397,402,420,442,457,470,476,481,505,518,542,556,],[205,205,205,205,205,205,205,205,205,205,354,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,]),'ConditionalExpression':([111,144,145,202,203,237,245,249,259,261,263,275,301,304,333,337,357,364,397,402,420,432,442,457,470,476,481,505,518,542,556,],[206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,454,206,206,206,206,206,206,206,206,206,]),'ConditionalOrExpression':([111,144,145,202,203,237,245,249,259,261,263,275,301,304,333,337,357,364,397,402,420,432,442,457,470,476,481,505,518,542,556,],[209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,]),'ConditionalAndExpression':([111,144,145,202,203,237,245,249,259,261,263,275,301,302,304,333,337,357,364,397,402,420,432,442,457,470,476,481,505,518,542,556,],[210,210,210,210,210,210,210,210,210,210,210,210,210,373,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,]),'InclusiveOrExpression':([111,144,145,202,203,237,245,249,259,261,263,275,301,302,303,304,333,337,357,364,397,402,420,432,442,457,470,476,481,505,518,542,556,],[212,212,212,212,212,212,212,212,212,212,212,212,212,212,374,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,]),'ExclusiveOrExpression':([111,144,145,202,203,237,245,249,259,261,263,275,301,302,303,304,305,333,337,357,364,397,402,420,432,442,457,470,476,481,505,518,542,556,],[215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,375,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,]),'AndExpression':([111,144,145,202,203,237,245,249,259,261,263,275,301,302,303,304,305,308,333,337,357,364,397,402,420,432,442,457,470,476,481,505,518,542,556,],[216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,378,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,]),'EqualityExpression':([111,144,145,202,203,237,245,249,259,261,263,275,301,302,303,304,305,308,309,333,337,357,364,397,402,420,432,442,457,470,476,481,505,518,542,556,],[220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,379,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,]),'RelationalExpression':([111,144,145,202,203,237,245,249,259,261,263,275,301,302,303,304,305,308,309,311,312,333,337,357,364,397,402,420,432,442,457,470,476,481,505,518,542,556,],[221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,380,381,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,]),'ShiftExpression':([111,144,145,202,203,237,245,249,259,261,263,275,301,302,303,304,305,308,309,311,312,313,314,315,316,333,337,357,364,397,402,420,432,442,457,470,476,481,505,518,542,556,],[222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,382,383,384,385,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,]),'AdditiveExpression':([111,144,145,202,203,237,245,249,259,261,263,275,301,302,303,304,305,308,309,311,312,313,314,315,316,318,319,333,337,357,364,397,402,420,432,442,457,470,476,481,505,518,542,556,],[223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,388,389,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,]),'MultiplicativeExpression':([111,144,145,202,203,237,245,249,259,261,263,275,301,302,303,304,305,308,309,311,312,313,314,315,316,318,319,320,321,333,337,357,364,397,402,420,432,442,457,470,476,481,505,518,542,556,],[224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,390,391,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,]),'UnaryExpression':([111,144,145,156,157,202,203,225,226,232,233,237,245,249,259,261,263,275,301,302,303,304,305,308,309,311,312,313,314,315,316,318,319,320,321,322,323,324,333,337,357,364,368,397,402,420,427,432,442,457,470,476,481,505,518,542,556,],[227,227,227,272,278,227,227,325,326,327,328,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,392,393,394,227,227,227,227,428,227,227,227,450,227,227,227,227,227,227,227,227,227,227,]),'UnaryExpressionNotPlusMinus':([111,144,145,156,157,202,203,225,226,232,233,237,245,249,259,261,263,275,301,302,303,304,305,308,309,311,312,313,314,315,316,318,319,320,321,322,323,324,333,337,357,364,366,368,397,402,419,420,427,429,432,442,457,470,476,481,505,518,542,556,],[230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,426,230,230,230,426,230,230,451,230,230,230,230,230,230,230,230,230,230,]),'CastExpression':([111,144,145,156,157,202,203,225,226,232,233,237,245,249,259,261,263,275,301,302,303,304,305,308,309,311,312,313,314,315,316,318,319,320,321,322,323,324,333,337,357,364,366,368,397,402,419,420,427,429,432,442,457,470,476,481,505,518,542,556,],[234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,]),'VariableDeclarators':([124,],[240,]),'VariableDeclarator':([124,332,],[241,398,]),'WhMark1':([137,467,],[246,485,]),'FoMark0':([138,468,],[247,486,]),'doWhMark1':([141,],[250,]),'DimExprs':([154,211,274,282,283,297,310,335,410,],[260,260,260,358,359,260,358,260,260,]),'DimExpr':([154,211,260,274,282,283,297,310,335,358,359,410,],[262,262,352,262,262,262,262,262,262,352,352,262,]),'AssignmentOperator':([155,],[263,]),'MethodDeclMark1':([182,],[285,]),'ArgumentList':([202,237,259,357,397,420,],[292,329,350,422,434,447,]),'LambdaExpression':([208,],[299,]),'Catches':([258,],[345,]),'Finally':([258,345,],[346,413,]),'CatchClause':([258,345,],[347,414,]),'VariableInitializer':([333,402,457,],[399,438,480,]),'ArrayInitializer':([333,402,457,],[401,401,401,]),'ForInit':([338,506,],[405,524,]),'StatementExpressionList':([338,471,488,493,506,510,557,568,572,581,],[407,492,492,492,407,492,492,492,492,492,]),'VariableInitializers':([402,],[436,]),'IfMark1':([403,521,],[439,538,]),'FoMark1':([406,441,525,541,],[442,470,542,556,]),'SwMark2':([411,],[444,]),'doWhMark2':([412,],[445,]),'StatementNoShortIf':([439,484,538,555,583,587,589,592,595,597,600,603,608,],[460,504,553,567,593,596,598,601,604,606,609,611,614,]),'LabeledStatementNoShortIf':([439,484,538,555,583,587,589,592,595,597,600,603,608,],[462,462,462,462,462,462,462,462,462,462,462,462,462,]),'IfThenElseStatementNoShortIf':([439,484,538,555,583,587,589,592,595,597,600,603,608,],[463,463,463,463,463,463,463,463,463,463,463,463,463,]),'WhileStatementNoShortIf':([439,484,538,555,583,587,589,592,595,597,600,603,608,],[464,464,464,464,464,464,464,464,464,464,464,464,464,]),'ForStatementNoShortIf':([439,484,538,555,583,587,589,592,595,597,600,603,608,],[465,465,465,465,465,465,465,465,465,465,465,465,465,]),'WhMark2':([440,540,],[469,555,]),'SwitchBlock':([444,],[474,]),'IfMark2':([459,],[482,]),'IfMark5':([460,553,],[483,566,]),'ForUpdate':([471,488,493,510,557,568,572,581,],[490,508,513,528,570,579,584,590,]),'SwMark3':([474,],[494,]),'SwitchBlockStatementGroups':([475,],[496,]),'SwitchBlockStatementGroup':([475,496,],[497,516,]),'SwitchLabel':([475,496,],[498,498,]),'SwMark1':([475,496,],[499,499,]),'WhMark3':([487,567,],[507,578,]),'FoMark4':([491,509,514,529,571,580,585,591,],[512,527,533,546,583,589,595,600,]),'IfMark3':([503,577,],[522,587,]),'FoMark2':([511,526,532,545,582,588,594,599,],[530,543,549,561,592,597,603,608,]),'ConstantExpression':([518,],[534,]),'doWhMark3':([520,],[537,]),'FoMark5':([531,544,550,562,593,598,604,609,],[548,560,565,575,602,607,612,615,]),'IfMark4':([539,596,],[554,605,]),'FoMark3':([547,559,564,574,601,606,611,614,],[563,573,576,586,610,613,616,617,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Goal","S'",1,None,None,None),
  ('Goal -> CompilationUnit','Goal',1,'p_Goal','LALR_parser.py',22),
  ('Identifier -> IDENTIFIER','Identifier',1,'p_Identfier','LALR_parser.py',27),
  ('Literal -> IntegerConst','Literal',1,'p_Literal','LALR_parser.py',31),
  ('Literal -> FloatConst','Literal',1,'p_Literal','LALR_parser.py',32),
  ('Literal -> CharConst','Literal',1,'p_Literal','LALR_parser.py',33),
  ('Literal -> StringConst','Literal',1,'p_Literal','LALR_parser.py',34),
  ('Literal -> NullConst','Literal',1,'p_Literal','LALR_parser.py',35),
  ('IntegerConst -> INT_CONSTANT','IntegerConst',1,'p_IntegerConst','LALR_parser.py',44),
  ('FloatConst -> FLOAT_CONSTANT','FloatConst',1,'p_FloatConst','LALR_parser.py',54),
  ('CharConst -> CHAR_CONSTANT','CharConst',1,'p_CharConst','LALR_parser.py',64),
  ('StringConst -> STR_CONSTANT','StringConst',1,'p_StringConst','LALR_parser.py',74),
  ('NullConst -> NULL','NullConst',1,'p_NullConst','LALR_parser.py',84),
  ('Type -> PrimitiveType','Type',1,'p_Type','LALR_parser.py',94),
  ('Type -> ReferenceType','Type',1,'p_Type','LALR_parser.py',95),
  ('PrimitiveType -> NumericType','PrimitiveType',1,'p_PrimitiveType','LALR_parser.py',101),
  ('PrimitiveType -> BOOLEAN','PrimitiveType',1,'p_PrimitiveType','LALR_parser.py',102),
  ('NumericType -> IntegralType','NumericType',1,'p_NumericType','LALR_parser.py',113),
  ('NumericType -> FloatingPointType','NumericType',1,'p_NumericType','LALR_parser.py',114),
  ('IntegralType -> BYTE','IntegralType',1,'p_IntegralType','LALR_parser.py',120),
  ('IntegralType -> SHORT','IntegralType',1,'p_IntegralType','LALR_parser.py',121),
  ('IntegralType -> INT','IntegralType',1,'p_IntegralType','LALR_parser.py',122),
  ('IntegralType -> LONG','IntegralType',1,'p_IntegralType','LALR_parser.py',123),
  ('IntegralType -> CHAR','IntegralType',1,'p_IntegralType','LALR_parser.py',124),
  ('FloatingPointType -> FLOAT','FloatingPointType',1,'p_FloatingPointType','LALR_parser.py',132),
  ('FloatingPointType -> DOUBLE','FloatingPointType',1,'p_FloatingPointType','LALR_parser.py',133),
  ('ReferenceType -> ArrayType','ReferenceType',1,'p_ReferenceType','LALR_parser.py',141),
  ('ReferenceType -> ClassType','ReferenceType',1,'p_ReferenceType','LALR_parser.py',142),
  ('ClassType -> Name','ClassType',1,'p_ClassType','LALR_parser.py',149),
  ('ArrayType -> PrimitiveType Dims','ArrayType',2,'p_ArrayType','LALR_parser.py',155),
  ('ArrayType -> Name Dims','ArrayType',2,'p_ArrayType','LALR_parser.py',156),
  ('Name -> SimpleName','Name',1,'p_Name','LALR_parser.py',172),
  ('Name -> QualifiedName','Name',1,'p_Name','LALR_parser.py',173),
  ('SimpleName -> Identifier','SimpleName',1,'p_SimpleName','LALR_parser.py',179),
  ('QualifiedName -> Name DOT Identifier','QualifiedName',3,'p_QualifiedName','LALR_parser.py',186),
  ('CompilationUnit -> PackageDeclaration ImportDeclarations TypeDeclarations','CompilationUnit',3,'p_CompilationUnit','LALR_parser.py',195),
  ('CompilationUnit -> PackageDeclaration ImportDeclarations','CompilationUnit',2,'p_CompilationUnit','LALR_parser.py',196),
  ('CompilationUnit -> PackageDeclaration TypeDeclarations','CompilationUnit',2,'p_CompilationUnit','LALR_parser.py',197),
  ('CompilationUnit -> ImportDeclarations TypeDeclarations','CompilationUnit',2,'p_CompilationUnit','LALR_parser.py',198),
  ('CompilationUnit -> PackageDeclaration','CompilationUnit',1,'p_CompilationUnit','LALR_parser.py',199),
  ('CompilationUnit -> ImportDeclarations','CompilationUnit',1,'p_CompilationUnit','LALR_parser.py',200),
  ('CompilationUnit -> TypeDeclarations','CompilationUnit',1,'p_CompilationUnit','LALR_parser.py',201),
  ('CompilationUnit -> <empty>','CompilationUnit',0,'p_CompilationUnit','LALR_parser.py',202),
  ('ImportDeclarations -> ImportDeclaration','ImportDeclarations',1,'p_ImportDeclarations','LALR_parser.py',210),
  ('ImportDeclarations -> ImportDeclarations ImportDeclaration','ImportDeclarations',2,'p_ImportDeclarations','LALR_parser.py',211),
  ('TypeDeclarations -> TypeDeclaration','TypeDeclarations',1,'p_TypeDeclarations','LALR_parser.py',217),
  ('TypeDeclarations -> TypeDeclarations TypeDeclaration','TypeDeclarations',2,'p_TypeDeclarations','LALR_parser.py',218),
  ('PackageDeclaration -> PACKAGE Name STMT_TERMINATOR','PackageDeclaration',3,'p_PackageDeclaration','LALR_parser.py',228),
  ('ImportDeclaration -> SingleTypeImportDeclaration','ImportDeclaration',1,'p_ImportDeclaration','LALR_parser.py',234),
  ('ImportDeclaration -> TypeImportOnDemandDeclaration','ImportDeclaration',1,'p_ImportDeclaration','LALR_parser.py',235),
  ('SingleTypeImportDeclaration -> IMPORT Name STMT_TERMINATOR','SingleTypeImportDeclaration',3,'p_SingleTypeImportDeclaration','LALR_parser.py',241),
  ('TypeImportOnDemandDeclaration -> IMPORT Name DOT MULT STMT_TERMINATOR','TypeImportOnDemandDeclaration',5,'p_TypeImportOnDemandDeclaration','LALR_parser.py',247),
  ('TypeDeclaration -> ClassDeclaration','TypeDeclaration',1,'p_TypeDeclaration','LALR_parser.py',253),
  ('TypeDeclaration -> STMT_TERMINATOR','TypeDeclaration',1,'p_TypeDeclaration','LALR_parser.py',254),
  ('Modifiers -> Modifier','Modifiers',1,'p_Modifiers','LALR_parser.py',261),
  ('Modifiers -> Modifiers Modifier','Modifiers',2,'p_Modifiers','LALR_parser.py',262),
  ('Modifier -> STATIC','Modifier',1,'p_Modifier','LALR_parser.py',273),
  ('Modifier -> FINAL','Modifier',1,'p_Modifier','LALR_parser.py',274),
  ('ClassDeclaration -> CLASS Identifier Inherit ClassBody','ClassDeclaration',4,'p_ClassDeclaration','LALR_parser.py',283),
  ('ClassDeclaration -> CLASS Identifier ClassBody','ClassDeclaration',3,'p_ClassDeclaration','LALR_parser.py',284),
  ('Inherit -> EXTENDS ClassType','Inherit',2,'p_Inherit','LALR_parser.py',298),
  ('ClassBody -> BLOCK_OPENER BLOCK_CLOSER','ClassBody',2,'p_ClassBody','LALR_parser.py',305),
  ('ClassBody -> BLOCK_OPENER ClassBodyDeclarations BLOCK_CLOSER','ClassBody',3,'p_ClassBody','LALR_parser.py',306),
  ('ClassBodyDeclarations -> ClassBodyDeclaration','ClassBodyDeclarations',1,'p_ClassBodyDeclarations','LALR_parser.py',323),
  ('ClassBodyDeclarations -> ClassBodyDeclarations ClassBodyDeclaration','ClassBodyDeclarations',2,'p_ClassBodyDeclarations','LALR_parser.py',324),
  ('ClassBodyDeclaration -> ClassMemberDeclaration FieldMark','ClassBodyDeclaration',2,'p_ClassBodyDeclaration','LALR_parser.py',335),
  ('ClassBodyDeclaration -> ConstructorDeclaration','ClassBodyDeclaration',1,'p_ClassBodyDeclaration','LALR_parser.py',336),
  ('ClassBodyDeclaration -> StaticInitializer','ClassBodyDeclaration',1,'p_ClassBodyDeclaration','LALR_parser.py',337),
  ('ClassMemberDeclaration -> FieldDeclaration','ClassMemberDeclaration',1,'p_ClassMemberDeclaration','LALR_parser.py',345),
  ('ClassMemberDeclaration -> MethodDeclaration','ClassMemberDeclaration',1,'p_ClassMemberDeclaration','LALR_parser.py',346),
  ('FieldMark -> <empty>','FieldMark',0,'p_FieldMark','LALR_parser.py',353),
  ('FieldDeclaration -> Modifiers Type VariableDeclaratorId STMT_TERMINATOR','FieldDeclaration',4,'p_FieldDeclaration','LALR_parser.py',360),
  ('FieldDeclaration -> Type VariableDeclaratorId STMT_TERMINATOR','FieldDeclaration',3,'p_FieldDeclaration','LALR_parser.py',361),
  ('VariableDeclarators -> VariableDeclarator','VariableDeclarators',1,'p_VariableDeclarators','LALR_parser.py',372),
  ('VariableDeclarators -> VariableDeclarators COMMA VariableDeclarator','VariableDeclarators',3,'p_VariableDeclarators','LALR_parser.py',373),
  ('VariableDeclarator -> VariableDeclaratorId','VariableDeclarator',1,'p_VariableDeclarator','LALR_parser.py',384),
  ('VariableDeclarator -> VariableDeclaratorId ASSIGN VariableInitializer','VariableDeclarator',3,'p_VariableDeclarator','LALR_parser.py',385),
  ('VariableDeclaratorId -> Identifier','VariableDeclaratorId',1,'p_VariableDeclaratorId','LALR_parser.py',426),
  ('VariableInitializer -> Expression','VariableInitializer',1,'p_VariableInitializer','LALR_parser.py',433),
  ('VariableInitializer -> ArrayInitializer','VariableInitializer',1,'p_VariableInitializer','LALR_parser.py',434),
  ('MethodDeclaration -> MethodHeader MethodDeclMark2 MethodBody','MethodDeclaration',3,'p_MethodDeclaration','LALR_parser.py',441),
  ('MethodDeclMark2 -> <empty>','MethodDeclMark2',0,'p_MehodDeclMark2','LALR_parser.py',449),
  ('MethodHeader -> Modifiers Type MethodDeclarator Throws','MethodHeader',4,'p_MethodHeader','LALR_parser.py',456),
  ('MethodHeader -> Modifiers Type MethodDeclarator','MethodHeader',3,'p_MethodHeader','LALR_parser.py',457),
  ('MethodHeader -> Type MethodDeclarator Throws','MethodHeader',3,'p_MethodHeader','LALR_parser.py',458),
  ('MethodHeader -> Type MethodDeclarator','MethodHeader',2,'p_MethodHeader','LALR_parser.py',459),
  ('MethodHeader -> Modifiers VOID MethodDeclarator Throws','MethodHeader',4,'p_MethodHeader','LALR_parser.py',460),
  ('MethodHeader -> Modifiers VOID MethodDeclarator','MethodHeader',3,'p_MethodHeader','LALR_parser.py',461),
  ('MethodHeader -> VOID MethodDeclarator Throws','MethodHeader',3,'p_MethodHeader','LALR_parser.py',462),
  ('MethodHeader -> VOID MethodDeclarator','MethodHeader',2,'p_MethodHeader','LALR_parser.py',463),
  ('MethodDeclarator -> Identifier L_PAREN MethodDeclMark1 R_PAREN','MethodDeclarator',4,'p_MethodDeclarator','LALR_parser.py',488),
  ('MethodDeclarator -> Identifier L_PAREN MethodDeclMark1 FormalParameterList R_PAREN','MethodDeclarator',5,'p_MethodDeclarator','LALR_parser.py',489),
  ('MethodDeclMark1 -> <empty>','MethodDeclMark1',0,'p_MehodDeclMark1','LALR_parser.py',511),
  ('FormalParameterList -> FormalParameter','FormalParameterList',1,'p_FormalParametersList','LALR_parser.py',517),
  ('FormalParameterList -> FormalParameterList COMMA FormalParameter','FormalParameterList',3,'p_FormalParametersList','LALR_parser.py',518),
  ('FormalParameter -> Type VariableDeclaratorId','FormalParameter',2,'p_FormalParameter','LALR_parser.py',528),
  ('Throws -> THROWS ClassTypeList','Throws',2,'p_Throws','LALR_parser.py',538),
  ('ClassTypeList -> ClassType','ClassTypeList',1,'p_ClassTypeList','LALR_parser.py',544),
  ('ClassTypeList -> ClassTypeList COMMA ClassType','ClassTypeList',3,'p_ClassTypeList','LALR_parser.py',545),
  ('MethodBody -> Block','MethodBody',1,'p_MethodBody','LALR_parser.py',551),
  ('MethodBody -> STMT_TERMINATOR','MethodBody',1,'p_MethodBody','LALR_parser.py',552),
  ('StaticInitializer -> STATIC Block','StaticInitializer',2,'p_StaticInitializer','LALR_parser.py',558),
  ('ConstructorDeclaration -> Modifiers ConstructorDeclarator Throws ConstructorBody','ConstructorDeclaration',4,'p_ConstructorDeclaration','LALR_parser.py',564),
  ('ConstructorDeclaration -> Modifiers ConstructorDeclarator ConstructorBody','ConstructorDeclaration',3,'p_ConstructorDeclaration','LALR_parser.py',565),
  ('ConstructorDeclaration -> ConstructorDeclarator Throws ConstructorBody','ConstructorDeclaration',3,'p_ConstructorDeclaration','LALR_parser.py',566),
  ('ConstructorDeclaration -> ConstructorDeclarator ConstructorBody','ConstructorDeclaration',2,'p_ConstructorDeclaration','LALR_parser.py',567),
  ('ConstructorDeclarator -> SimpleName L_PAREN FormalParameterList R_PAREN','ConstructorDeclarator',4,'p_ConstructorDeclarator','LALR_parser.py',573),
  ('ConstructorDeclarator -> SimpleName L_PAREN R_PAREN','ConstructorDeclarator',3,'p_ConstructorDeclarator','LALR_parser.py',574),
  ('ConstructorBody -> BLOCK_OPENER ExplicitConstructorInvocation BlockStatements BLOCK_CLOSER','ConstructorBody',4,'p_ConstructorBody','LALR_parser.py',580),
  ('ConstructorBody -> BLOCK_OPENER ExplicitConstructorInvocation BLOCK_CLOSER','ConstructorBody',3,'p_ConstructorBody','LALR_parser.py',581),
  ('ConstructorBody -> BLOCK_OPENER BlockStatements BLOCK_CLOSER','ConstructorBody',3,'p_ConstructorBody','LALR_parser.py',582),
  ('ConstructorBody -> BLOCK_OPENER BLOCK_CLOSER','ConstructorBody',2,'p_ConstructorBody','LALR_parser.py',583),
  ('ExplicitConstructorInvocation -> THIS L_PAREN ArgumentList R_PAREN STMT_TERMINATOR','ExplicitConstructorInvocation',5,'p_ExplicitConstructorInvocation','LALR_parser.py',589),
  ('ExplicitConstructorInvocation -> THIS L_PAREN R_PAREN STMT_TERMINATOR','ExplicitConstructorInvocation',4,'p_ExplicitConstructorInvocation','LALR_parser.py',590),
  ('ExplicitConstructorInvocation -> SUPER L_PAREN ArgumentList R_PAREN STMT_TERMINATOR','ExplicitConstructorInvocation',5,'p_ExplicitConstructorInvocation','LALR_parser.py',591),
  ('ExplicitConstructorInvocation -> SUPER L_PAREN R_PAREN STMT_TERMINATOR','ExplicitConstructorInvocation',4,'p_ExplicitConstructorInvocation','LALR_parser.py',592),
  ('ArrayInitializer -> BLOCK_OPENER VariableInitializers BLOCK_CLOSER','ArrayInitializer',3,'p_ArrayInitializer','LALR_parser.py',599),
  ('ArrayInitializer -> BLOCK_OPENER BLOCK_CLOSER','ArrayInitializer',2,'p_ArrayInitializer','LALR_parser.py',600),
  ('VariableInitializers -> VariableInitializer','VariableInitializers',1,'p_VariableInitializers','LALR_parser.py',607),
  ('VariableInitializers -> VariableInitializers COMMA VariableInitializer','VariableInitializers',3,'p_VariableInitializers','LALR_parser.py',608),
  ('Block -> BLOCK_OPENER BLOCK_CLOSER','Block',2,'p_Block','LALR_parser.py',615),
  ('Block -> BLOCK_OPENER BlockStatements BLOCK_CLOSER','Block',3,'p_Block','LALR_parser.py',616),
  ('BlockStatements -> BlockStatement','BlockStatements',1,'p_BlockStatements','LALR_parser.py',622),
  ('BlockStatements -> BlockStatements BlockStatement','BlockStatements',2,'p_BlockStatements','LALR_parser.py',623),
  ('BlockStatement -> LocalVariableDeclarationStatement','BlockStatement',1,'p_BlockStatement','LALR_parser.py',629),
  ('BlockStatement -> Statement','BlockStatement',1,'p_BlockStatement','LALR_parser.py',630),
  ('LocalVariableDeclarationStatement -> LocalVariableDeclaration STMT_TERMINATOR','LocalVariableDeclarationStatement',2,'p_LocalVariableDeclarationStatement','LALR_parser.py',637),
  ('LocalVariableDeclaration -> Type VariableDeclarators','LocalVariableDeclaration',2,'p_LocalVariableDeclaration','LALR_parser.py',644),
  ('Statement -> StatementWithoutTrailingSubstatement','Statement',1,'p_Statement','LALR_parser.py',700),
  ('Statement -> LabeledStatement','Statement',1,'p_Statement','LALR_parser.py',701),
  ('Statement -> IfThenStatement','Statement',1,'p_Statement','LALR_parser.py',702),
  ('Statement -> IfThenElseStatement','Statement',1,'p_Statement','LALR_parser.py',703),
  ('Statement -> WhileStatement','Statement',1,'p_Statement','LALR_parser.py',704),
  ('Statement -> ForStatement','Statement',1,'p_Statement','LALR_parser.py',705),
  ('StatementNoShortIf -> StatementWithoutTrailingSubstatement','StatementNoShortIf',1,'p_StatementNoShortIf','LALR_parser.py',712),
  ('StatementNoShortIf -> LabeledStatementNoShortIf','StatementNoShortIf',1,'p_StatementNoShortIf','LALR_parser.py',713),
  ('StatementNoShortIf -> IfThenElseStatementNoShortIf','StatementNoShortIf',1,'p_StatementNoShortIf','LALR_parser.py',714),
  ('StatementNoShortIf -> WhileStatementNoShortIf','StatementNoShortIf',1,'p_StatementNoShortIf','LALR_parser.py',715),
  ('StatementNoShortIf -> ForStatementNoShortIf','StatementNoShortIf',1,'p_StatementNoShortIf','LALR_parser.py',716),
  ('StatementWithoutTrailingSubstatement -> Block','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','LALR_parser.py',723),
  ('StatementWithoutTrailingSubstatement -> EmptyStatement','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','LALR_parser.py',724),
  ('StatementWithoutTrailingSubstatement -> ExpressionStatement','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','LALR_parser.py',725),
  ('StatementWithoutTrailingSubstatement -> SwitchStatement','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','LALR_parser.py',726),
  ('StatementWithoutTrailingSubstatement -> DoStatement','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','LALR_parser.py',727),
  ('StatementWithoutTrailingSubstatement -> BreakStatement','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','LALR_parser.py',728),
  ('StatementWithoutTrailingSubstatement -> ContinueStatement','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','LALR_parser.py',729),
  ('StatementWithoutTrailingSubstatement -> ReturnStatement','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','LALR_parser.py',730),
  ('StatementWithoutTrailingSubstatement -> ThrowStatement','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','LALR_parser.py',731),
  ('StatementWithoutTrailingSubstatement -> TryStatement','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','LALR_parser.py',732),
  ('EmptyStatement -> STMT_TERMINATOR','EmptyStatement',1,'p_EmptyStatement','LALR_parser.py',739),
  ('LabeledStatement -> Identifier COLON Statement','LabeledStatement',3,'p_LabeledStatement','LALR_parser.py',745),
  ('LabeledStatementNoShortIf -> Identifier COLON StatementNoShortIf','LabeledStatementNoShortIf',3,'p_LabeledStatementNoShortIf','LALR_parser.py',751),
  ('ExpressionStatement -> StatementExpression STMT_TERMINATOR','ExpressionStatement',2,'p_ExpressionStatement','LALR_parser.py',757),
  ('StatementExpression -> Assignment','StatementExpression',1,'p_StatementExpression','LALR_parser.py',764),
  ('StatementExpression -> PreIncrementExpression','StatementExpression',1,'p_StatementExpression','LALR_parser.py',765),
  ('StatementExpression -> PreDecrementExpression','StatementExpression',1,'p_StatementExpression','LALR_parser.py',766),
  ('StatementExpression -> PostIncrementExpression','StatementExpression',1,'p_StatementExpression','LALR_parser.py',767),
  ('StatementExpression -> PostDecrementExpression','StatementExpression',1,'p_StatementExpression','LALR_parser.py',768),
  ('StatementExpression -> MethodInvocation','StatementExpression',1,'p_StatementExpression','LALR_parser.py',769),
  ('StatementExpression -> ClassInstanceCreationExpression','StatementExpression',1,'p_StatementExpression','LALR_parser.py',770),
  ('IfThenStatement -> IF L_PAREN Expression R_PAREN IfMark1 Statement IfMark2','IfThenStatement',7,'p_IfThenStatement','LALR_parser.py',777),
  ('IfThenElseStatement -> IF L_PAREN Expression R_PAREN IfMark1 StatementNoShortIf IfMark5 ELSE IfMark3 Statement IfMark4','IfThenElseStatement',11,'p_IfThenElseStatement','LALR_parser.py',783),
  ('IfThenElseStatementNoShortIf -> IF L_PAREN Expression R_PAREN IfMark1 StatementNoShortIf IfMark5 ELSE IfMark3 StatementNoShortIf IfMark4','IfThenElseStatementNoShortIf',11,'p_IfThenElseStatementNoShortIf','LALR_parser.py',789),
  ('IfMark1 -> <empty>','IfMark1',0,'p_IfMark1','LALR_parser.py',794),
  ('IfMark2 -> <empty>','IfMark2',0,'p_IfMark2','LALR_parser.py',804),
  ('IfMark3 -> <empty>','IfMark3',0,'p_IfMark3','LALR_parser.py',809),
  ('IfMark4 -> <empty>','IfMark4',0,'p_IfMark4','LALR_parser.py',817),
  ('IfMark5 -> <empty>','IfMark5',0,'p_IfMark5','LALR_parser.py',822),
  ('SwitchStatement -> SWITCH L_PAREN Expression R_PAREN SwMark2 SwitchBlock SwMark3','SwitchStatement',7,'p_SwitchStatement','LALR_parser.py',827),
  ('SwMark2 -> <empty>','SwMark2',0,'p_SwMark2','LALR_parser.py',834),
  ('SwMark3 -> <empty>','SwMark3',0,'p_SwMark3','LALR_parser.py',843),
  ('SwitchBlock -> BLOCK_OPENER BLOCK_CLOSER','SwitchBlock',2,'p_SwitchBlock','LALR_parser.py',857),
  ('SwitchBlock -> BLOCK_OPENER SwitchBlockStatementGroups BLOCK_CLOSER','SwitchBlock',3,'p_SwitchBlock','LALR_parser.py',858),
  ('SwitchBlockStatementGroups -> SwitchBlockStatementGroup','SwitchBlockStatementGroups',1,'p_SwitchBlockStatementGroups','LALR_parser.py',865),
  ('SwitchBlockStatementGroups -> SwitchBlockStatementGroups SwitchBlockStatementGroup','SwitchBlockStatementGroups',2,'p_SwitchBlockStatementGroups','LALR_parser.py',866),
  ('SwitchBlockStatementGroup -> SwitchLabel BlockStatements','SwitchBlockStatementGroup',2,'p_SwitchBlockStatementGroup','LALR_parser.py',882),
  ('SwitchLabel -> SwMark1 CASE ConstantExpression COLON','SwitchLabel',4,'p_SwitchLabel','LALR_parser.py',889),
  ('SwitchLabel -> SwMark1 DEFAULT COLON','SwitchLabel',3,'p_SwitchLabel','LALR_parser.py',890),
  ('SwMark1 -> <empty>','SwMark1',0,'p_SwMark1','LALR_parser.py',903),
  ('WhileStatement -> WHILE WhMark1 L_PAREN Expression R_PAREN WhMark2 Statement WhMark3','WhileStatement',8,'p_WhileStatement','LALR_parser.py',910),
  ('WhileStatementNoShortIf -> WHILE WhMark1 L_PAREN Expression R_PAREN WhMark2 StatementNoShortIf WhMark3','WhileStatementNoShortIf',8,'p_WhileStatementNoShortIf','LALR_parser.py',916),
  ('WhMark1 -> <empty>','WhMark1',0,'p_WhMark1','LALR_parser.py',921),
  ('WhMark2 -> <empty>','WhMark2',0,'p_WhMark2','LALR_parser.py',932),
  ('WhMark3 -> <empty>','WhMark3',0,'p_WhMark3','LALR_parser.py',938),
  ('DoStatement -> DO doWhMark1 Statement WHILE doWhMark2 L_PAREN Expression R_PAREN doWhMark3 STMT_TERMINATOR','DoStatement',10,'p_DoStatement','LALR_parser.py',947),
  ('doWhMark1 -> <empty>','doWhMark1',0,'p_doWhMark1','LALR_parser.py',952),
  ('doWhMark3 -> <empty>','doWhMark3',0,'p_doWhMark3','LALR_parser.py',963),
  ('doWhMark2 -> <empty>','doWhMark2',0,'p_doWhMark2','LALR_parser.py',969),
  ('ForStatement -> FOR FoMark0 L_PAREN ForInit STMT_TERMINATOR FoMark1 Expression STMT_TERMINATOR ForUpdate R_PAREN FoMark2 Statement FoMark3','ForStatement',13,'p_ForStatement','LALR_parser.py',978),
  ('ForStatement -> FOR FoMark0 L_PAREN STMT_TERMINATOR FoMark1 Expression STMT_TERMINATOR ForUpdate R_PAREN FoMark2 Statement FoMark3','ForStatement',12,'p_ForStatement','LALR_parser.py',979),
  ('ForStatement -> FOR FoMark0 L_PAREN ForInit STMT_TERMINATOR FoMark1 STMT_TERMINATOR ForUpdate R_PAREN FoMark2 Statement FoMark3','ForStatement',12,'p_ForStatement','LALR_parser.py',980),
  ('ForStatement -> FOR FoMark0 L_PAREN ForInit STMT_TERMINATOR FoMark1 Expression STMT_TERMINATOR R_PAREN FoMark4 Statement FoMark5','ForStatement',12,'p_ForStatement','LALR_parser.py',981),
  ('ForStatement -> FOR FoMark0 L_PAREN ForInit STMT_TERMINATOR FoMark1 STMT_TERMINATOR R_PAREN FoMark4 Statement FoMark5','ForStatement',11,'p_ForStatement','LALR_parser.py',982),
  ('ForStatement -> FOR FoMark0 L_PAREN STMT_TERMINATOR FoMark1 Expression STMT_TERMINATOR R_PAREN FoMark4 Statement FoMark5','ForStatement',11,'p_ForStatement','LALR_parser.py',983),
  ('ForStatement -> FOR FoMark0 L_PAREN STMT_TERMINATOR FoMark1 STMT_TERMINATOR ForUpdate R_PAREN FoMark2 Statement FoMark3','ForStatement',11,'p_ForStatement','LALR_parser.py',984),
  ('ForStatement -> FOR FoMark0 L_PAREN STMT_TERMINATOR FoMark1 STMT_TERMINATOR R_PAREN FoMark4 Statement FoMark5','ForStatement',10,'p_ForStatement','LALR_parser.py',985),
  ('ForStatementNoShortIf -> FOR FoMark0 L_PAREN ForInit STMT_TERMINATOR FoMark1 Expression STMT_TERMINATOR ForUpdate R_PAREN FoMark2 StatementNoShortIf FoMark3','ForStatementNoShortIf',13,'p_ForStatementNoShortIf','LALR_parser.py',991),
  ('ForStatementNoShortIf -> FOR FoMark0 L_PAREN STMT_TERMINATOR FoMark1 Expression STMT_TERMINATOR ForUpdate R_PAREN FoMark2 StatementNoShortIf FoMark3','ForStatementNoShortIf',12,'p_ForStatementNoShortIf','LALR_parser.py',992),
  ('ForStatementNoShortIf -> FOR FoMark0 L_PAREN ForInit STMT_TERMINATOR FoMark1 STMT_TERMINATOR ForUpdate R_PAREN FoMark2 StatementNoShortIf FoMark3','ForStatementNoShortIf',12,'p_ForStatementNoShortIf','LALR_parser.py',993),
  ('ForStatementNoShortIf -> FOR FoMark0 L_PAREN ForInit STMT_TERMINATOR FoMark1 Expression STMT_TERMINATOR R_PAREN FoMark4 StatementNoShortIf FoMark5','ForStatementNoShortIf',12,'p_ForStatementNoShortIf','LALR_parser.py',994),
  ('ForStatementNoShortIf -> FOR FoMark0 L_PAREN ForInit STMT_TERMINATOR FoMark1 STMT_TERMINATOR R_PAREN FoMark4 StatementNoShortIf FoMark5','ForStatementNoShortIf',11,'p_ForStatementNoShortIf','LALR_parser.py',995),
  ('ForStatementNoShortIf -> FOR FoMark0 L_PAREN STMT_TERMINATOR FoMark1 Expression STMT_TERMINATOR R_PAREN FoMark4 StatementNoShortIf FoMark5','ForStatementNoShortIf',11,'p_ForStatementNoShortIf','LALR_parser.py',996),
  ('ForStatementNoShortIf -> FOR FoMark0 L_PAREN STMT_TERMINATOR FoMark1 STMT_TERMINATOR ForUpdate R_PAREN FoMark2 StatementNoShortIf FoMark3','ForStatementNoShortIf',11,'p_ForStatementNoShortIf','LALR_parser.py',997),
  ('ForStatementNoShortIf -> FOR FoMark0 L_PAREN STMT_TERMINATOR FoMark1 STMT_TERMINATOR R_PAREN FoMark4 StatementNoShortIf FoMark5','ForStatementNoShortIf',10,'p_ForStatementNoShortIf','LALR_parser.py',998),
  ('FoMark0 -> <empty>','FoMark0',0,'p_FoMark0','LALR_parser.py',1003),
  ('FoMark1 -> <empty>','FoMark1',0,'p_FoMark1','LALR_parser.py',1008),
  ('FoMark2 -> <empty>','FoMark2',0,'p_FoMark2','LALR_parser.py',1018),
  ('FoMark4 -> <empty>','FoMark4',0,'p_FoMark4','LALR_parser.py',1024),
  ('FoMark3 -> <empty>','FoMark3',0,'p_FoMark3','LALR_parser.py',1030),
  ('FoMark5 -> <empty>','FoMark5',0,'p_FoMark5','LALR_parser.py',1038),
  ('ForInit -> StatementExpressionList','ForInit',1,'p_ForInit','LALR_parser.py',1047),
  ('ForInit -> LocalVariableDeclaration','ForInit',1,'p_ForInit','LALR_parser.py',1048),
  ('ForUpdate -> StatementExpressionList','ForUpdate',1,'p_ForUpdate','LALR_parser.py',1054),
  ('StatementExpressionList -> StatementExpression','StatementExpressionList',1,'p_StatementExpressionList','LALR_parser.py',1060),
  ('StatementExpressionList -> StatementExpressionList COMMA StatementExpression','StatementExpressionList',3,'p_StatementExpressionList','LALR_parser.py',1061),
  ('BreakStatement -> BREAK Identifier STMT_TERMINATOR','BreakStatement',3,'p_BreakStatement','LALR_parser.py',1067),
  ('BreakStatement -> BREAK STMT_TERMINATOR','BreakStatement',2,'p_BreakStatement','LALR_parser.py',1068),
  ('ContinueStatement -> CONTINUE Identifier STMT_TERMINATOR','ContinueStatement',3,'p_ContinueStatement','LALR_parser.py',1076),
  ('ContinueStatement -> CONTINUE STMT_TERMINATOR','ContinueStatement',2,'p_ContinueStatement','LALR_parser.py',1077),
  ('ReturnStatement -> RETURN Expression STMT_TERMINATOR','ReturnStatement',3,'p_ReturnStatement','LALR_parser.py',1085),
  ('ReturnStatement -> RETURN STMT_TERMINATOR','ReturnStatement',2,'p_ReturnStatement','LALR_parser.py',1086),
  ('ThrowStatement -> THROW Expression STMT_TERMINATOR','ThrowStatement',3,'p_ThrowStatement','LALR_parser.py',1107),
  ('TryStatement -> TRY Block Catches','TryStatement',3,'p_TryStatement','LALR_parser.py',1113),
  ('TryStatement -> TRY Block Catches Finally','TryStatement',4,'p_TryStatement','LALR_parser.py',1114),
  ('TryStatement -> TRY Block Finally','TryStatement',3,'p_TryStatement','LALR_parser.py',1115),
  ('Catches -> CatchClause','Catches',1,'p_Catches','LALR_parser.py',1121),
  ('Catches -> Catches CatchClause','Catches',2,'p_Catches','LALR_parser.py',1122),
  ('CatchClause -> CATCH L_PAREN FormalParameter R_PAREN Block','CatchClause',5,'p_CatchClause','LALR_parser.py',1128),
  ('Finally -> FINALLY Block','Finally',2,'p_Finally','LALR_parser.py',1134),
  ('Primary -> PrimaryNoNewArray','Primary',1,'p_Primary','LALR_parser.py',1141),
  ('Primary -> ArrayCreationExpression','Primary',1,'p_Primary','LALR_parser.py',1142),
  ('PrimaryNoNewArray -> Literal','PrimaryNoNewArray',1,'p_PrimaryNoNewArray','LALR_parser.py',1149),
  ('PrimaryNoNewArray -> THIS','PrimaryNoNewArray',1,'p_PrimaryNoNewArray','LALR_parser.py',1150),
  ('PrimaryNoNewArray -> L_PAREN Expression R_PAREN','PrimaryNoNewArray',3,'p_PrimaryNoNewArray','LALR_parser.py',1151),
  ('PrimaryNoNewArray -> ClassInstanceCreationExpression','PrimaryNoNewArray',1,'p_PrimaryNoNewArray','LALR_parser.py',1152),
  ('PrimaryNoNewArray -> FieldAccess','PrimaryNoNewArray',1,'p_PrimaryNoNewArray','LALR_parser.py',1153),
  ('PrimaryNoNewArray -> MethodInvocation','PrimaryNoNewArray',1,'p_PrimaryNoNewArray','LALR_parser.py',1154),
  ('PrimaryNoNewArray -> ArrayAccess','PrimaryNoNewArray',1,'p_PrimaryNoNewArray','LALR_parser.py',1155),
  ('ClassInstanceCreationExpression -> NEW ClassType L_PAREN R_PAREN','ClassInstanceCreationExpression',4,'p_ClassInstanceCreationExpression','LALR_parser.py',1165),
  ('ClassInstanceCreationExpression -> NEW ClassType L_PAREN ArgumentList R_PAREN','ClassInstanceCreationExpression',5,'p_ClassInstanceCreationExpression','LALR_parser.py',1166),
  ('ArgumentList -> Expression','ArgumentList',1,'p_ArgumentList','LALR_parser.py',1172),
  ('ArgumentList -> ArgumentList COMMA Expression','ArgumentList',3,'p_ArgumentList','LALR_parser.py',1173),
  ('ArrayCreationExpression -> NEW PrimitiveType DimExprs','ArrayCreationExpression',3,'p_ArrayCreationExpression','LALR_parser.py',1183),
  ('ArrayCreationExpression -> NEW ClassType DimExprs','ArrayCreationExpression',3,'p_ArrayCreationExpression','LALR_parser.py',1184),
  ('DimExprs -> DimExpr','DimExprs',1,'p_DimExprs','LALR_parser.py',1196),
  ('DimExprs -> DimExprs DimExpr','DimExprs',2,'p_DimExprs','LALR_parser.py',1197),
  ('DimExpr -> L_SQBR Expression R_SQBR','DimExpr',3,'p_DimExpr','LALR_parser.py',1207),
  ('Dims -> L_SQBR R_SQBR','Dims',2,'p_Dims','LALR_parser.py',1217),
  ('Dims -> Dims L_SQBR R_SQBR','Dims',3,'p_Dims','LALR_parser.py',1218),
  ('FieldAccess -> Primary DOT Identifier','FieldAccess',3,'p_FieldAccess','LALR_parser.py',1228),
  ('FieldAccess -> SUPER DOT Identifier','FieldAccess',3,'p_FieldAccess','LALR_parser.py',1229),
  ('MethodInvocation -> Name L_PAREN ArgumentList R_PAREN','MethodInvocation',4,'p_MethodInvocation','LALR_parser.py',1235),
  ('MethodInvocation -> Name L_PAREN R_PAREN','MethodInvocation',3,'p_MethodInvocation','LALR_parser.py',1236),
  ('MethodInvocation -> Primary DOT Identifier L_PAREN ArgumentList R_PAREN','MethodInvocation',6,'p_MethodInvocation','LALR_parser.py',1237),
  ('MethodInvocation -> Primary DOT Identifier L_PAREN R_PAREN','MethodInvocation',5,'p_MethodInvocation','LALR_parser.py',1238),
  ('MethodInvocation -> SUPER DOT Identifier L_PAREN ArgumentList R_PAREN','MethodInvocation',6,'p_MethodInvocation','LALR_parser.py',1239),
  ('MethodInvocation -> SUPER DOT Identifier L_PAREN R_PAREN','MethodInvocation',5,'p_MethodInvocation','LALR_parser.py',1240),
  ('ArrayAccess -> Name DimExprs','ArrayAccess',2,'p_ArrayAccess','LALR_parser.py',1273),
  ('PostfixExpression -> Primary','PostfixExpression',1,'p_PostfixExpression','LALR_parser.py',1309),
  ('PostfixExpression -> Name','PostfixExpression',1,'p_PostfixExpression','LALR_parser.py',1310),
  ('PostfixExpression -> PostIncrementExpression','PostfixExpression',1,'p_PostfixExpression','LALR_parser.py',1311),
  ('PostfixExpression -> PostDecrementExpression','PostfixExpression',1,'p_PostfixExpression','LALR_parser.py',1312),
  ('PostIncrementExpression -> PostfixExpression INCREMENT','PostIncrementExpression',2,'p_PostIncrementExpression','LALR_parser.py',1342),
  ('PostDecrementExpression -> PostfixExpression DECREMENT','PostDecrementExpression',2,'p_PostDecrementExpression','LALR_parser.py',1356),
  ('UnaryExpression -> PreIncrementExpression','UnaryExpression',1,'p_UnaryExpression','LALR_parser.py',1370),
  ('UnaryExpression -> PreDecrementExpression','UnaryExpression',1,'p_UnaryExpression','LALR_parser.py',1371),
  ('UnaryExpression -> PLUS UnaryExpression','UnaryExpression',2,'p_UnaryExpression','LALR_parser.py',1372),
  ('UnaryExpression -> MINUS UnaryExpression','UnaryExpression',2,'p_UnaryExpression','LALR_parser.py',1373),
  ('UnaryExpression -> UnaryExpressionNotPlusMinus','UnaryExpression',1,'p_UnaryExpression','LALR_parser.py',1374),
  ('PreIncrementExpression -> INCREMENT UnaryExpression','PreIncrementExpression',2,'p_PreIncrementExpression','LALR_parser.py',1384),
  ('PreDecrementExpression -> DECREMENT UnaryExpression','PreDecrementExpression',2,'p_PreDecrementExpression','LALR_parser.py',1400),
  ('UnaryExpressionNotPlusMinus -> PostfixExpression','UnaryExpressionNotPlusMinus',1,'p_UnaryExpressionNotPlusMinus','LALR_parser.py',1414),
  ('UnaryExpressionNotPlusMinus -> BITWISE_NOT UnaryExpression','UnaryExpressionNotPlusMinus',2,'p_UnaryExpressionNotPlusMinus','LALR_parser.py',1415),
  ('UnaryExpressionNotPlusMinus -> LOGICAL_NOT UnaryExpression','UnaryExpressionNotPlusMinus',2,'p_UnaryExpressionNotPlusMinus','LALR_parser.py',1416),
  ('UnaryExpressionNotPlusMinus -> CastExpression','UnaryExpressionNotPlusMinus',1,'p_UnaryExpressionNotPlusMinus','LALR_parser.py',1417),
  ('CastExpression -> L_PAREN PrimitiveType Dims R_PAREN UnaryExpression','CastExpression',5,'p_CastExpression','LALR_parser.py',1430),
  ('CastExpression -> L_PAREN PrimitiveType R_PAREN UnaryExpression','CastExpression',4,'p_CastExpression','LALR_parser.py',1431),
  ('CastExpression -> L_PAREN Expression R_PAREN UnaryExpressionNotPlusMinus','CastExpression',4,'p_CastExpression','LALR_parser.py',1432),
  ('CastExpression -> L_PAREN Name Dims R_PAREN UnaryExpressionNotPlusMinus','CastExpression',5,'p_CastExpression','LALR_parser.py',1433),
  ('MultiplicativeExpression -> UnaryExpression','MultiplicativeExpression',1,'p_MultiplicativeExpression','LALR_parser.py',1440),
  ('MultiplicativeExpression -> MultiplicativeExpression MULT UnaryExpression','MultiplicativeExpression',3,'p_MultiplicativeExpression','LALR_parser.py',1441),
  ('MultiplicativeExpression -> MultiplicativeExpression DIVIDE UnaryExpression','MultiplicativeExpression',3,'p_MultiplicativeExpression','LALR_parser.py',1442),
  ('MultiplicativeExpression -> MultiplicativeExpression MODULO UnaryExpression','MultiplicativeExpression',3,'p_MultiplicativeExpression','LALR_parser.py',1443),
  ('AdditiveExpression -> MultiplicativeExpression','AdditiveExpression',1,'p_AdditiveExpression','LALR_parser.py',1479),
  ('AdditiveExpression -> AdditiveExpression PLUS MultiplicativeExpression','AdditiveExpression',3,'p_AdditiveExpression','LALR_parser.py',1480),
  ('AdditiveExpression -> AdditiveExpression MINUS MultiplicativeExpression','AdditiveExpression',3,'p_AdditiveExpression','LALR_parser.py',1481),
  ('ShiftExpression -> AdditiveExpression','ShiftExpression',1,'p_ShiftExpression','LALR_parser.py',1504),
  ('ShiftExpression -> ShiftExpression L_SHIFT AdditiveExpression','ShiftExpression',3,'p_ShiftExpression','LALR_parser.py',1505),
  ('ShiftExpression -> ShiftExpression R_SHIFT AdditiveExpression','ShiftExpression',3,'p_ShiftExpression','LALR_parser.py',1506),
  ('RelationalExpression -> ShiftExpression','RelationalExpression',1,'p_RelationalExpression','LALR_parser.py',1531),
  ('RelationalExpression -> RelationalExpression LST ShiftExpression','RelationalExpression',3,'p_RelationalExpression','LALR_parser.py',1532),
  ('RelationalExpression -> RelationalExpression GRT ShiftExpression','RelationalExpression',3,'p_RelationalExpression','LALR_parser.py',1533),
  ('RelationalExpression -> RelationalExpression LEQ ShiftExpression','RelationalExpression',3,'p_RelationalExpression','LALR_parser.py',1534),
  ('RelationalExpression -> RelationalExpression GEQ ShiftExpression','RelationalExpression',3,'p_RelationalExpression','LALR_parser.py',1535),
  ('RelationalExpression -> RelationalExpression INSTANCEOF ReferenceType','RelationalExpression',3,'p_RelationalExpression','LALR_parser.py',1536),
  ('EqualityExpression -> RelationalExpression','EqualityExpression',1,'p_EqualityExpression','LALR_parser.py',1596),
  ('EqualityExpression -> EqualityExpression EQUALS RelationalExpression','EqualityExpression',3,'p_EqualityExpression','LALR_parser.py',1597),
  ('EqualityExpression -> EqualityExpression NOT_EQUAL RelationalExpression','EqualityExpression',3,'p_EqualityExpression','LALR_parser.py',1598),
  ('AndExpression -> EqualityExpression','AndExpression',1,'p_AndExpression','LALR_parser.py',1638),
  ('AndExpression -> AndExpression BITWISE_AND EqualityExpression','AndExpression',3,'p_AndExpression','LALR_parser.py',1639),
  ('ExclusiveOrExpression -> AndExpression','ExclusiveOrExpression',1,'p_ExclusiveOrExpression','LALR_parser.py',1660),
  ('ExclusiveOrExpression -> ExclusiveOrExpression BITWISE_XOR AndExpression','ExclusiveOrExpression',3,'p_ExclusiveOrExpression','LALR_parser.py',1661),
  ('InclusiveOrExpression -> ExclusiveOrExpression','InclusiveOrExpression',1,'p_InclusiveOrExpression','LALR_parser.py',1682),
  ('InclusiveOrExpression -> InclusiveOrExpression BITWISE_OR ExclusiveOrExpression','InclusiveOrExpression',3,'p_InclusiveOrExpression','LALR_parser.py',1683),
  ('ConditionalAndExpression -> InclusiveOrExpression','ConditionalAndExpression',1,'p_ConditionalAndExpression','LALR_parser.py',1704),
  ('ConditionalAndExpression -> ConditionalAndExpression LOGICAL_AND InclusiveOrExpression','ConditionalAndExpression',3,'p_ConditionalAndExpression','LALR_parser.py',1705),
  ('ConditionalOrExpression -> ConditionalAndExpression','ConditionalOrExpression',1,'p_ConditionalOrExpression','LALR_parser.py',1731),
  ('ConditionalOrExpression -> ConditionalOrExpression LOGICAL_OR ConditionalAndExpression','ConditionalOrExpression',3,'p_ConditionalOrExpression','LALR_parser.py',1732),
  ('ConditionalExpression -> ConditionalOrExpression','ConditionalExpression',1,'p_ConditionalExpression','LALR_parser.py',1757),
  ('ConditionalExpression -> ConditionalOrExpression QUESTION Expression COLON ConditionalExpression','ConditionalExpression',5,'p_ConditionalExpression','LALR_parser.py',1758),
  ('AssignmentExpression -> ConditionalExpression','AssignmentExpression',1,'p_AssignmentExpression','LALR_parser.py',1766),
  ('AssignmentExpression -> Assignment','AssignmentExpression',1,'p_AssignmentExpression','LALR_parser.py',1767),
  ('AssignmentExpression -> LAMBDA LambdaExpression','AssignmentExpression',2,'p_AssignmentExpression','LALR_parser.py',1768),
  ('Assignment -> LeftHandSide AssignmentOperator AssignmentExpression','Assignment',3,'p_Assignment','LALR_parser.py',1776),
  ('LeftHandSide -> Name','LeftHandSide',1,'p_LeftHandSide','LALR_parser.py',1799),
  ('LeftHandSide -> FieldAccess','LeftHandSide',1,'p_LeftHandSide','LALR_parser.py',1800),
  ('LeftHandSide -> ArrayAccess','LeftHandSide',1,'p_LeftHandSide','LALR_parser.py',1801),
  ('AssignmentOperator -> ASSIGN','AssignmentOperator',1,'p_AssignmentOperator','LALR_parser.py',1808),
  ('AssignmentOperator -> MULTEQ','AssignmentOperator',1,'p_AssignmentOperator','LALR_parser.py',1809),
  ('AssignmentOperator -> DIVEQ','AssignmentOperator',1,'p_AssignmentOperator','LALR_parser.py',1810),
  ('AssignmentOperator -> MODEQ','AssignmentOperator',1,'p_AssignmentOperator','LALR_parser.py',1811),
  ('AssignmentOperator -> PLUSEQ','AssignmentOperator',1,'p_AssignmentOperator','LALR_parser.py',1812),
  ('AssignmentOperator -> MINUSEQ','AssignmentOperator',1,'p_AssignmentOperator','LALR_parser.py',1813),
  ('AssignmentOperator -> LSHIFTEQ','AssignmentOperator',1,'p_AssignmentOperator','LALR_parser.py',1814),
  ('AssignmentOperator -> RSHIFTEQ','AssignmentOperator',1,'p_AssignmentOperator','LALR_parser.py',1815),
  ('Expression -> AssignmentExpression','Expression',1,'p_Expression','LALR_parser.py',1824),
  ('LambdaExpression -> L_PAREN FormalParameterList R_PAREN LAMBDA_TOKEN Block','LambdaExpression',5,'p_LambdaExpression','LALR_parser.py',1831),
  ('LambdaExpression -> L_PAREN R_PAREN LAMBDA_TOKEN Block','LambdaExpression',4,'p_LambdaExpression','LALR_parser.py',1832),
  ('ConstantExpression -> Expression','ConstantExpression',1,'p_ConstantExpression','LALR_parser.py',1838),
]
