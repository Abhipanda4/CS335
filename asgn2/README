
Build and Run Description:

cd into asgn2 directory.

To run code generation program:
	use make to build.
	bin/codegen test/test1.ir (this will output the generated code in stdout)

To run the testcases directly: (ir -> assembly -> execution of assembly -> output)

./src/gen_com_run.sh <TestFilename>




Short Description of Code:
	
	utilities.py contains code for Instruction structure generation from ir code, symbol table generation, register descriptors and utilities for handling array notation.

	Gen_Code.py is our main code generator program which contains :
		1. A CodeGenerator class which contains methods for x8 code generationf for different type of instructions and data sections. The gen_code method in the class checks for instruction type and translates accordingly.
		2. next_use function which determines liveness and next use information for each statement in basic block by performing a backward pass.
			Then, it generates assembly code for each basic block by making a forward pass
			Finally, it saves all register contents into memory and	resets the liveness and next use info in symbol table.
		3. The main function to read input ir file and call the code generator method.
	
	
	Get_Reg.py contains code for finding suitable register for the next x86 instruction to be generated using the next_use heuristic. Other than that it also contains code for register descriptor updation, context saving for jump calls etc.

Three address code instructions:-
1,decl_array,arr[N]
        Declares Array
        arr-> Name of the array
        N -> Size of the array

2,=,x,<symbol>
        Assignment operations
        x = <symbol> where symbol can be a number or another variable or arr[i]

NOTE:- Only two kind of array operations are allowed:-
a[i] = t 
t = a[i]

3,call,func_name,optional_var
        Calls function func name, and if function returns something it's value will be stored in optional_var

4,ret,optional_return_var
        Returns from function and optional_return_var is optional variable this function returns
